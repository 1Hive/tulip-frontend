{"ast":null,"code":"'use strict';\n\nconst {\n  TieredDatastore\n} = require('datastore-core');\n\nconst get = require('dlv');\n\nconst PubsubDatastore = require('./pubsub-datastore');\n\nconst OfflineDatastore = require('./offline-datastore');\n\nmodule.exports = ({\n  libp2p,\n  repo,\n  peerInfo,\n  options\n}) => {\n  // Setup online routing for IPNS with a tiered routing composed by a DHT and a Pubsub router (if properly enabled)\n  const ipnsStores = []; // Add IPNS pubsub if enabled\n\n  let pubsubDs;\n\n  if (get(options, 'EXPERIMENTAL.ipnsPubsub', false)) {\n    const pubsub = libp2p.pubsub;\n    const localDatastore = repo.datastore;\n    const peerId = peerInfo.id;\n    pubsubDs = new PubsubDatastore(pubsub, localDatastore, peerId);\n    ipnsStores.push(pubsubDs);\n  } // DHT should not be added as routing if we are offline or it is disabled\n\n\n  if (get(options, 'offline') || !get(options, 'libp2p.config.dht.enabled', false)) {\n    const offlineDatastore = new OfflineDatastore(repo);\n    ipnsStores.push(offlineDatastore);\n  } else {\n    ipnsStores.push(libp2p._dht);\n  } // Create ipns routing with a set of datastores\n\n\n  return new TieredDatastore(ipnsStores);\n};","map":null,"metadata":{},"sourceType":"script"}