{"ast":null,"code":"var _jsxFileName = \"/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Farms/components/WithdrawModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { Button, Modal } from '@pancakeswap-libs/uikit';\nimport ModalActions from 'components/ModalActions';\nimport ModalInput from 'components/ModalInput';\nimport useI18n from 'hooks/useI18n';\nimport { getFullDisplayBalance } from 'utils/formatBalance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WithdrawModal = ({\n  onConfirm,\n  onDismiss,\n  max,\n  tokenName = ''\n}) => {\n  _s();\n\n  const [val, setVal] = useState('');\n  const [pendingTx, setPendingTx] = useState(false);\n  const TranslateString = useI18n();\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max);\n  }, [max]);\n  const handleChange = useCallback(e => {\n    setVal(e.currentTarget.value);\n  }, [setVal]);\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: TranslateString(1126, 'Unstake LP tokens'),\n    onDismiss: onDismiss,\n    children: [/*#__PURE__*/_jsxDEV(ModalInput, {\n      onSelectMax: handleSelectMax,\n      onChange: handleChange,\n      value: val,\n      max: fullBalance,\n      symbol: tokenName,\n      inputTitle: TranslateString(588, 'Unstake')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: onDismiss,\n        fullWidth: true,\n        children: TranslateString(462, 'Cancel')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: pendingTx,\n        onClick: async () => {\n          setPendingTx(true);\n          await onConfirm(val);\n          setPendingTx(false);\n          onDismiss();\n        },\n        fullWidth: true,\n        children: pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WithdrawModal, \"6CJIGJ2Y3KmfnLsU3NCO1RJwS2U=\", false, function () {\n  return [useI18n];\n});\n\n_c = WithdrawModal;\nexport default WithdrawModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"WithdrawModal\");","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Farms/components/WithdrawModal.tsx"],"names":["React","useCallback","useMemo","useState","Button","Modal","ModalActions","ModalInput","useI18n","getFullDisplayBalance","WithdrawModal","onConfirm","onDismiss","max","tokenName","val","setVal","pendingTx","setPendingTx","TranslateString","fullBalance","handleChange","e","currentTarget","value","handleSelectMax"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,yBAA9B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,qBAAT,QAAsC,qBAAtC;;;AASA,MAAMC,aAA2C,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA,GAAxB;AAA6BC,EAAAA,SAAS,GAAG;AAAzC,CAAD,KAAmD;AAAA;;AACrG,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMgB,eAAe,GAAGX,OAAO,EAA/B;AACA,QAAMY,WAAW,GAAGlB,OAAO,CAAC,MAAM;AAChC,WAAOO,qBAAqB,CAACI,GAAD,CAA5B;AACD,GAF0B,EAExB,CAACA,GAAD,CAFwB,CAA3B;AAIA,QAAMQ,YAAY,GAAGpB,WAAW,CAC7BqB,CAAD,IAA0C;AACxCN,IAAAA,MAAM,CAACM,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAN;AACD,GAH6B,EAI9B,CAACR,MAAD,CAJ8B,CAAhC;AAOA,QAAMS,eAAe,GAAGxB,WAAW,CAAC,MAAM;AACxCe,IAAAA,MAAM,CAACI,WAAD,CAAN;AACD,GAFkC,EAEhC,CAACA,WAAD,EAAcJ,MAAd,CAFgC,CAAnC;AAIA,sBACE,QAAC,KAAD;AAAO,IAAA,KAAK,EAAEG,eAAe,CAAC,IAAD,EAAO,mBAAP,CAA7B;AAA0D,IAAA,SAAS,EAAEP,SAArE;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,WAAW,EAAEa,eADf;AAEE,MAAA,QAAQ,EAAEJ,YAFZ;AAGE,MAAA,KAAK,EAAEN,GAHT;AAIE,MAAA,GAAG,EAAEK,WAJP;AAKE,MAAA,MAAM,EAAEN,SALV;AAME,MAAA,UAAU,EAAEK,eAAe,CAAC,GAAD,EAAM,SAAN;AAN7B;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,YAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,OAAO,EAAEP,SAArC;AAAgD,QAAA,SAAS,MAAzD;AAAA,kBACGO,eAAe,CAAC,GAAD,EAAM,QAAN;AADlB;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AACE,QAAA,QAAQ,EAAEF,SADZ;AAEE,QAAA,OAAO,EAAE,YAAY;AACnBC,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,gBAAMP,SAAS,CAACI,GAAD,CAAf;AACAG,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAN,UAAAA,SAAS;AACV,SAPH;AAQE,QAAA,SAAS,MARX;AAAA,kBAUGK,SAAS,GAAGE,eAAe,CAAC,GAAD,EAAM,sBAAN,CAAlB,GAAkDA,eAAe,CAAC,GAAD,EAAM,SAAN;AAV7E;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAhDD;;GAAMT,a;UAGoBF,O;;;KAHpBE,a;AAkDN,eAAeA,aAAf","sourcesContent":["import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={TranslateString(1126, 'Unstake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={TranslateString(588, 'Unstake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} fullWidth>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n          fullWidth\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n"]},"metadata":{},"sourceType":"module"}