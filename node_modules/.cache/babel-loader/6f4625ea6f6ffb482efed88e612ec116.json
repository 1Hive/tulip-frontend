{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _awaitAsyncGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('idb'),\n    openDB = _require2.openDB,\n    deleteDB = _require2.deleteDB;\n\nvar _require3 = require('interface-datastore'),\n    Key = _require3.Key,\n    Errors = _require3.Errors,\n    utils = _require3.utils,\n    Adapter = _require3.Adapter;\n\nvar filter = utils.filter,\n    sortAll = utils.sortAll;\n\nvar isStrictTypedArray = function isStrictTypedArray(arr) {\n  return arr instanceof Int8Array || arr instanceof Int16Array || arr instanceof Int32Array || arr instanceof Uint8Array || arr instanceof Uint8ClampedArray || arr instanceof Uint16Array || arr instanceof Uint32Array || arr instanceof Float32Array || arr instanceof Float64Array;\n};\n\nvar typedarrayToBuffer = function typedarrayToBuffer(arr) {\n  if (isStrictTypedArray(arr)) {\n    // To avoid a copy, use the typed array's underlying ArrayBuffer to back new Buffer\n    var buf = Buffer.from(arr.buffer);\n\n    if (arr.byteLength !== arr.buffer.byteLength) {\n      // Respect the \"view\", i.e. byteOffset and byteLength, without doing a copy\n      buf = buf.slice(arr.byteOffset, arr.byteOffset + arr.byteLength);\n    }\n\n    return buf;\n  } else {\n    // Pass through all other types to `Buffer.from`\n    return Buffer.from(arr);\n  }\n};\n\nvar str2ab = function str2ab(str) {\n  var buf = new ArrayBuffer(str.length);\n  var bufView = new Uint8Array(buf);\n\n  for (var i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n\n  return buf;\n};\n\nvar queryIt = /*#__PURE__*/function () {\n  var _ref = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(q, store, location) {\n    var range, cursor, limit, key, value;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            range = q.prefix ? self.IDBKeyRange.bound(str2ab(q.prefix), str2ab(q.prefix + '\\xFF'), false, true) : undefined;\n            _context.next = 3;\n            return _awaitAsyncGenerator(store.transaction(location).store.openCursor(range));\n\n          case 3:\n            cursor = _context.sent;\n            limit = 0;\n\n            if (!(cursor && q.offset && q.offset > 0)) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 8;\n            return _awaitAsyncGenerator(cursor.advance(q.offset));\n\n          case 8:\n            cursor = _context.sent;\n\n          case 9:\n            if (!cursor) {\n              _context.next = 27;\n              break;\n            }\n\n            if (!(q.limit !== undefined && q.limit === limit)) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 12:\n            limit++;\n            key = new Key(Buffer.from(cursor.key));\n\n            if (!q.keysOnly) {\n              _context.next = 19;\n              break;\n            }\n\n            _context.next = 17;\n            return {\n              key: key\n            };\n\n          case 17:\n            _context.next = 22;\n            break;\n\n          case 19:\n            value = Buffer.from(cursor.value);\n            _context.next = 22;\n            return {\n              key: key,\n              value: value\n            };\n\n          case 22:\n            _context.next = 24;\n            return _awaitAsyncGenerator(cursor.continue());\n\n          case 24:\n            cursor = _context.sent;\n            _context.next = 9;\n            break;\n\n          case 27:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function queryIt(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar IdbDatastore = /*#__PURE__*/function (_Adapter) {\n  _inherits(IdbDatastore, _Adapter);\n\n  var _super = _createSuper(IdbDatastore);\n\n  function IdbDatastore(location) {\n    var _this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, IdbDatastore);\n\n    _this = _super.call(this);\n    _this.store = null;\n    _this.options = options;\n    _this.location = options.prefix + location;\n    _this.version = options.version || 1;\n    return _this;\n  }\n\n  _createClass(IdbDatastore, [{\n    key: \"open\",\n    value: function () {\n      var _open = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var location;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this.store !== null)) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                location = this.location;\n                _context2.prev = 3;\n                _context2.next = 6;\n                return openDB(this.location, this.version, {\n                  upgrade: function upgrade(db) {\n                    db.createObjectStore(location);\n                  }\n                });\n\n              case 6:\n                this.store = _context2.sent;\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](3);\n                throw Errors.dbOpenFailedError(_context2.t0);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[3, 9]]);\n      }));\n\n      function open() {\n        return _open.apply(this, arguments);\n      }\n\n      return open;\n    }()\n  }, {\n    key: \"put\",\n    value: function () {\n      var _put = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(key, val) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(this.store === null)) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                throw new Error('Datastore needs to be opened.');\n\n              case 2:\n                _context3.prev = 2;\n                _context3.next = 5;\n                return this.store.put(this.location, val, key.toBuffer());\n\n              case 5:\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](2);\n                throw Errors.dbWriteFailedError(_context3.t0);\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[2, 7]]);\n      }));\n\n      function put(_x4, _x5) {\n        return _put.apply(this, arguments);\n      }\n\n      return put;\n    }()\n  }, {\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(key) {\n        var value;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(this.store === null)) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                throw new Error('Datastore needs to be opened.');\n\n              case 2:\n                _context4.prev = 2;\n                _context4.next = 5;\n                return this.store.get(this.location, key.toBuffer());\n\n              case 5:\n                value = _context4.sent;\n                _context4.next = 11;\n                break;\n\n              case 8:\n                _context4.prev = 8;\n                _context4.t0 = _context4[\"catch\"](2);\n                throw Errors.dbWriteFailedError(_context4.t0);\n\n              case 11:\n                if (value) {\n                  _context4.next = 13;\n                  break;\n                }\n\n                throw Errors.notFoundError();\n\n              case 13:\n                return _context4.abrupt(\"return\", typedarrayToBuffer(value));\n\n              case 14:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[2, 8]]);\n      }));\n\n      function get(_x6) {\n        return _get.apply(this, arguments);\n      }\n\n      return get;\n    }()\n  }, {\n    key: \"has\",\n    value: function () {\n      var _has = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(key) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(this.store === null)) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                throw new Error('Datastore needs to be opened.');\n\n              case 2:\n                _context5.prev = 2;\n                _context5.next = 5;\n                return this.get(key);\n\n              case 5:\n                _context5.next = 12;\n                break;\n\n              case 7:\n                _context5.prev = 7;\n                _context5.t0 = _context5[\"catch\"](2);\n\n                if (!(_context5.t0.code === 'ERR_NOT_FOUND')) {\n                  _context5.next = 11;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", false);\n\n              case 11:\n                throw _context5.t0;\n\n              case 12:\n                return _context5.abrupt(\"return\", true);\n\n              case 13:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[2, 7]]);\n      }));\n\n      function has(_x7) {\n        return _has.apply(this, arguments);\n      }\n\n      return has;\n    }()\n  }, {\n    key: \"delete\",\n    value: function () {\n      var _delete2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(key) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (!(this.store === null)) {\n                  _context6.next = 2;\n                  break;\n                }\n\n                throw new Error('Datastore needs to be opened.');\n\n              case 2:\n                _context6.prev = 2;\n                _context6.next = 5;\n                return this.store.delete(this.location, key.toBuffer());\n\n              case 5:\n                _context6.next = 10;\n                break;\n\n              case 7:\n                _context6.prev = 7;\n                _context6.t0 = _context6[\"catch\"](2);\n                throw Errors.dbDeleteFailedError(_context6.t0);\n\n              case 10:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[2, 7]]);\n      }));\n\n      function _delete(_x8) {\n        return _delete2.apply(this, arguments);\n      }\n\n      return _delete;\n    }()\n  }, {\n    key: \"batch\",\n    value: function batch() {\n      var _this2 = this;\n\n      var puts = [];\n      var dels = [];\n      return {\n        put: function put(key, value) {\n          puts.push([key.toBuffer(), value]);\n        },\n        delete: function _delete(key) {\n          dels.push(key.toBuffer());\n        },\n        commit: function () {\n          var _commit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n            var tx, store;\n            return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n              while (1) {\n                switch (_context7.prev = _context7.next) {\n                  case 0:\n                    if (!(_this2.store === null)) {\n                      _context7.next = 2;\n                      break;\n                    }\n\n                    throw new Error('Datastore needs to be opened.');\n\n                  case 2:\n                    tx = _this2.store.transaction(_this2.location, 'readwrite');\n                    store = tx.store;\n                    _context7.next = 6;\n                    return Promise.all(puts.map(function (p) {\n                      return store.put(p[1], p[0]);\n                    }));\n\n                  case 6:\n                    _context7.next = 8;\n                    return Promise.all(dels.map(function (p) {\n                      return store.delete(p);\n                    }));\n\n                  case 8:\n                    _context7.next = 10;\n                    return tx.done;\n\n                  case 10:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }\n            }, _callee7);\n          }));\n\n          function commit() {\n            return _commit.apply(this, arguments);\n          }\n\n          return commit;\n        }()\n      };\n    }\n  }, {\n    key: \"query\",\n    value: function query(q) {\n      if (this.store === null) {\n        throw new Error('Datastore needs to be opened.');\n      }\n\n      var it = queryIt(q, this.store, this.location);\n\n      if (Array.isArray(q.filters)) {\n        it = q.filters.reduce(function (it, f) {\n          return filter(it, f);\n        }, it);\n      }\n\n      if (Array.isArray(q.orders)) {\n        it = q.orders.reduce(function (it, f) {\n          return sortAll(it, f);\n        }, it);\n      }\n\n      return it;\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this.store === null) {\n        throw new Error('Datastore needs to be opened.');\n      }\n\n      this.store.close();\n      this.store = null;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      return deleteDB(this.location);\n    }\n  }]);\n\n  return IdbDatastore;\n}(Adapter);\n\nmodule.exports = IdbDatastore;","map":null,"metadata":{},"sourceType":"script"}