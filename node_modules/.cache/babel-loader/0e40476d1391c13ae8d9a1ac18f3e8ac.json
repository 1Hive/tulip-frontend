{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar unselectable = function unselectable() {\n  return \"\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n\";\n}; // Transforms a number to be used as a CSS value, with the `px` suffix appended to it. If not a number, the value is returned directly.\n\n\nfunction cssPx(value) {\n  return typeof value === 'number' ? value + 'px' : value;\n}\n\nexports.cssPx = cssPx;\nexports.unselectable = unselectable;","map":{"version":3,"sources":["../src/utils/css.js"],"names":["unselectable","value"],"mappings":";;;;;;IAAaA,YAAY,GAAG,SAAfA,YAAe,GAAA;AAAA,SAAA,6IAAA;AAAA,C,EAAA;;;AASrB,SAAA,KAAA,CAAA,KAAA,EAAsB;AAC3B,SAAO,OAAA,KAAA,KAAA,QAAA,GAA4BC,KAAK,GAAjC,IAAA,GAAP,KAAA;AACD","sourcesContent":["export const unselectable = () => `\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n`\n\n// Transforms a number to be used as a CSS value, with the `px` suffix appended to it. If not a number, the value is returned directly.\nexport function cssPx(value) {\n  return typeof value === 'number' ? value + 'px' : value\n}\n"]},"metadata":{},"sourceType":"script"}