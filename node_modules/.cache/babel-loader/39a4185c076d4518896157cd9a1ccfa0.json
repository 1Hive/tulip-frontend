{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncIterator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar _awaitAsyncGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar batch = require('it-batch');\n\nfunction balanced(_x, _x2, _x3) {\n  return _balanced.apply(this, arguments);\n}\n\nfunction _balanced() {\n  _balanced = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(source, reduce, options) {\n    return _regeneratorRuntime.wrap(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return reduceToParents(source, reduce, options);\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _balanced.apply(this, arguments);\n}\n\nfunction reduceToParents(source, reduce, options) {\n  var roots, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, chunked;\n\n  return _regeneratorRuntime.async(function reduceToParents$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          roots = [];\n          _iteratorNormalCompletion = true;\n          _didIteratorError = false;\n          _context.prev = 3;\n          _iterator = _asyncIterator(batch(source, options.maxChildrenPerNode));\n\n        case 5:\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(_iterator.next());\n\n        case 7:\n          _step = _context.sent;\n          _iteratorNormalCompletion = _step.done;\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(_step.value);\n\n        case 11:\n          _value = _context.sent;\n\n          if (_iteratorNormalCompletion) {\n            _context.next = 22;\n            break;\n          }\n\n          chunked = _value;\n          _context.t0 = roots;\n          _context.next = 17;\n          return _regeneratorRuntime.awrap(reduce(chunked));\n\n        case 17:\n          _context.t1 = _context.sent;\n\n          _context.t0.push.call(_context.t0, _context.t1);\n\n        case 19:\n          _iteratorNormalCompletion = true;\n          _context.next = 5;\n          break;\n\n        case 22:\n          _context.next = 28;\n          break;\n\n        case 24:\n          _context.prev = 24;\n          _context.t2 = _context[\"catch\"](3);\n          _didIteratorError = true;\n          _iteratorError = _context.t2;\n\n        case 28:\n          _context.prev = 28;\n          _context.prev = 29;\n\n          if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n            _context.next = 33;\n            break;\n          }\n\n          _context.next = 33;\n          return _regeneratorRuntime.awrap(_iterator.return());\n\n        case 33:\n          _context.prev = 33;\n\n          if (!_didIteratorError) {\n            _context.next = 36;\n            break;\n          }\n\n          throw _iteratorError;\n\n        case 36:\n          return _context.finish(33);\n\n        case 37:\n          return _context.finish(28);\n\n        case 38:\n          if (!(roots.length > 1)) {\n            _context.next = 40;\n            break;\n          }\n\n          return _context.abrupt(\"return\", reduceToParents(roots, reduce, options));\n\n        case 40:\n          return _context.abrupt(\"return\", roots[0]);\n\n        case 41:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[3, 24, 28, 38], [29,, 33, 37]], Promise);\n}\n\nmodule.exports = balanced;","map":null,"metadata":{},"sourceType":"script"}