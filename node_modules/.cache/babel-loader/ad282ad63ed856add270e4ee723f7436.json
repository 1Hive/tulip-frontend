{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar propose = require('./propose');\n\nvar exchange = require('./exchange');\n\nvar finish = require('./finish'); // Performs initial communication over insecure channel to share keys, IDs,\n// and initiate communication, assigning all necessary params.\n\n\nmodule.exports = /*#__PURE__*/function () {\n  var _handshake = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(state, wrapped) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return propose(state, wrapped);\n\n          case 2:\n            _context.next = 4;\n            return exchange(state, wrapped);\n\n          case 4:\n            _context.next = 6;\n            return finish(state, wrapped);\n\n          case 6:\n            state.cleanSecrets();\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  function handshake(_x, _x2) {\n    return _handshake.apply(this, arguments);\n  }\n\n  return handshake;\n}();","map":null,"metadata":{},"sourceType":"script"}