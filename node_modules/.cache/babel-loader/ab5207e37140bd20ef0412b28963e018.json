{"ast":null,"code":"module.exports = set;\n/*\n  var obj1 = {};\n  set(obj1, 'a.aa.aaa', 4}); // true\n  obj1; // {a: {aa: {aaa: 4}}}\n\n  var obj2 = {};\n  set(obj2, [a, aa, aaa], 4}); // true\n  obj2; // {a: {aa: {aaa: 4}}}\n\n  var obj3 = {a: {aa: {aaa: 2}}};\n  set(obj3, 'a.aa.aaa', 3); // true\n  obj3; // {a: {aa: {aaa: 3}}}\n\n  // don't clobber existing\n  var obj4 = {a: {aa: {aaa: 2}}};\n  set(obj4, 'a.aa', {bbb: 7}); // false\n\n  const obj5 = {a: {}};\n  const sym = Symbol();\n  set(obj5.a, sym, 7); // true\n  obj5; // {a: {Symbol(): 7}}\n*/\n\nfunction set(obj, props, value) {\n  if (typeof props == 'string') {\n    props = props.split('.');\n  }\n\n  if (typeof props == 'symbol') {\n    props = [props];\n  }\n\n  var lastProp = props.pop();\n\n  if (!lastProp) {\n    return false;\n  }\n\n  var thisProp;\n\n  while (thisProp = props.shift()) {\n    if (typeof obj[thisProp] == 'undefined') {\n      obj[thisProp] = {};\n    }\n\n    obj = obj[thisProp];\n\n    if (!obj || typeof obj != 'object') {\n      return false;\n    }\n  }\n\n  obj[lastProp] = value;\n  return true;\n}","map":null,"metadata":{},"sourceType":"script"}