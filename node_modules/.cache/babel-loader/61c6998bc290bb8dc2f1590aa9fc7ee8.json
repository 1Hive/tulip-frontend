{"ast":null,"code":"'use strict';\n\nconst Reader = require('it-reader');\n\nconst Writer = require('it-pushable');\n\nconst defer = require('p-defer'); // Convert a duplex stream into a reader and writer and rest stream\n\n\nmodule.exports = stream => {\n  const writer = Writer(); // Write bytes on demand to the sink\n\n  const reader = Reader(stream.source); // Read bytes on demand from the source\n  // Waits for a source to be passed to the rest stream's sink\n\n  const sourcePromise = defer();\n  let sinkErr;\n  const sinkPromise = stream.sink(async function* () {\n    yield* writer;\n    const source = await sourcePromise.promise;\n    yield* source;\n  }());\n  sinkPromise.catch(err => {\n    sinkErr = err;\n  });\n  const rest = {\n    sink: source => {\n      if (sinkErr) {\n        return Promise.reject(sinkErr);\n      }\n\n      sourcePromise.resolve(source);\n      return sinkPromise;\n    },\n    source: reader\n  };\n  return {\n    reader,\n    writer,\n    stream: rest,\n    rest: () => writer.end(),\n    write: writer.push,\n    read: async () => {\n      return (await reader.next()).value;\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script"}