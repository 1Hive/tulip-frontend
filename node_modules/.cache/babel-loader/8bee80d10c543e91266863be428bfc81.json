{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RetryService = void 0;\n\nclass RetryService {\n  constructor(config) {\n    this.config = config;\n  }\n  /**\n   *\n   * @param func function to execute (should return {@link promise})\n   */\n\n\n  executeAsyncFunc(func) {\n    return __awaiter(this, void 0, void 0, function* () {\n      for (let i = 0; i <= this.config.retries; i++) {\n        try {\n          const result = yield func();\n          return result;\n        } catch (error) {\n          const skip = this.config.conditions.map(condition => condition.test(error)).find(skip => skip === true);\n\n          if (skip || i === this.config.retries) {\n            throw error;\n          }\n\n          yield this.wait();\n        }\n      }\n    });\n  }\n  /**\n   *\n   * @param func function to execute\n   */\n\n\n  executeSyncFunc(func) {\n    return __awaiter(this, void 0, void 0, function* () {\n      for (let i = 0; i <= this.config.retries; i++) {\n        try {\n          const result = func();\n          return result;\n        } catch (error) {\n          const skip = this.config.conditions.map(condition => condition.test(error)).find(skip => skip === true);\n\n          if (skip || i === this.config.retries) {\n            throw error;\n          }\n\n          yield this.wait();\n        }\n      }\n    });\n  }\n\n  wait() {\n    return new Promise(res => {\n      setTimeout(() => res(), this.config.waitInterval);\n    });\n  }\n\n}\n\nexports.RetryService = RetryService;","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/node_modules/@crowdin/crowdin-api-client/out/core/internal/retry/index.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","RetryService","constructor","config","executeAsyncFunc","func","i","retries","error","skip","conditions","map","condition","test","find","wait","executeSyncFunc","res","setTimeout","waitInterval"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RetryService = void 0;\nclass RetryService {\n    constructor(config) {\n        this.config = config;\n    }\n    /**\n     *\n     * @param func function to execute (should return {@link promise})\n     */\n    executeAsyncFunc(func) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let i = 0; i <= this.config.retries; i++) {\n                try {\n                    const result = yield func();\n                    return result;\n                }\n                catch (error) {\n                    const skip = this.config.conditions.map(condition => condition.test(error)).find(skip => skip === true);\n                    if (skip || i === this.config.retries) {\n                        throw error;\n                    }\n                    yield this.wait();\n                }\n            }\n        });\n    }\n    /**\n     *\n     * @param func function to execute\n     */\n    executeSyncFunc(func) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let i = 0; i <= this.config.retries; i++) {\n                try {\n                    const result = func();\n                    return result;\n                }\n                catch (error) {\n                    const skip = this.config.conditions.map(condition => condition.test(error)).find(skip => skip === true);\n                    if (skip || i === this.config.retries) {\n                        throw error;\n                    }\n                    yield this.wait();\n                }\n            }\n        });\n    }\n    wait() {\n        return new Promise((res) => {\n            setTimeout(() => res(), this.config.waitInterval);\n        });\n    }\n}\nexports.RetryService = RetryService;\n"]},"metadata":{},"sourceType":"script"}