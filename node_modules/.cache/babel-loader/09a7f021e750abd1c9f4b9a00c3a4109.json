{"ast":null,"code":"import environment from './environment';\nimport { isLocalOrUnknownNetwork, getNetworkType } from './lib/web3-utils';\nimport { getNetworkConfig } from './networks';\nimport { getDefaultEthNode, getIpfsGateway, getSubgraphHttpEndpoint } from './local-settings';\nconst CHAIN_ID = environment('CHAIN_ID');\nconst COURT_SERVER_NAME = environment('COURT_SERVER_NAME'); // BrightId endpoints\n\nexport const BRIGHT_ID_ENDPOINT_V5 = 'https://brightid.1hive.org/node/v5';\nexport const BRIGHTID_VERIFICATION_ENDPOINT = `${BRIGHT_ID_ENDPOINT_V5}/verifications`;\nexport const BRIGHTID_1HIVE_INFO_ENDPOINT = `${BRIGHT_ID_ENDPOINT_V5}/apps/1hive`;\nexport const BRIGHTID_SUBSCRIPTION_ENDPOINT = `${BRIGHT_ID_ENDPOINT_V5}/operations`; // IPFS endpoint\n\nexport const IPFS_ENDPOINT = isLocalOrUnknownNetwork(CHAIN_ID) ? 'http://127.0.0.1:8080/ipfs' : 'https://ipfs.eth.aragon.network/ipfs'; // Court server endpoint\n\nexport function courtServerEndpoint() {\n  if (isLocalOrUnknownNetwork(CHAIN_ID)) {\n    return 'http://127.0.0.1:8050';\n  }\n\n  const networkType = getNetworkType(CHAIN_ID);\n  return `https://celeste-server${networkType === 'main' ? '' : `-${COURT_SERVER_NAME || networkType}`}.1hive.org`;\n}\nexport function graphEndpoint() {\n  const {\n    nodes\n  } = getNetworkConfig();\n  return nodes.subgraph;\n}\nexport const defaultEthNode = getDefaultEthNode() || getNetworkConfig().nodes.defaultEth;\nexport const defaultIpfsGateway = getIpfsGateway();\nexport const defaultSubgraphHttpEndpoint = getSubgraphHttpEndpoint();","map":{"version":3,"sources":["/Users/fabianmolina/Documents/1hive/tulip-frontend/src/endpoints.js"],"names":["environment","isLocalOrUnknownNetwork","getNetworkType","getNetworkConfig","getDefaultEthNode","getIpfsGateway","getSubgraphHttpEndpoint","CHAIN_ID","COURT_SERVER_NAME","BRIGHT_ID_ENDPOINT_V5","BRIGHTID_VERIFICATION_ENDPOINT","BRIGHTID_1HIVE_INFO_ENDPOINT","BRIGHTID_SUBSCRIPTION_ENDPOINT","IPFS_ENDPOINT","courtServerEndpoint","networkType","graphEndpoint","nodes","subgraph","defaultEthNode","defaultEth","defaultIpfsGateway","defaultSubgraphHttpEndpoint"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AAEA,SAASC,uBAAT,EAAkCC,cAAlC,QAAwD,kBAAxD;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SACEC,iBADF,EAEEC,cAFF,EAGEC,uBAHF,QAIO,kBAJP;AAMA,MAAMC,QAAQ,GAAGP,WAAW,CAAC,UAAD,CAA5B;AACA,MAAMQ,iBAAiB,GAAGR,WAAW,CAAC,mBAAD,CAArC,C,CAEA;;AACA,OAAO,MAAMS,qBAAqB,GAAG,oCAA9B;AACP,OAAO,MAAMC,8BAA8B,GAAI,GAAED,qBAAsB,gBAAhE;AACP,OAAO,MAAME,4BAA4B,GAAI,GAAEF,qBAAsB,aAA9D;AACP,OAAO,MAAMG,8BAA8B,GAAI,GAAEH,qBAAsB,aAAhE,C,CAEP;;AACA,OAAO,MAAMI,aAAa,GAAGZ,uBAAuB,CAACM,QAAD,CAAvB,GACzB,4BADyB,GAEzB,sCAFG,C,CAIP;;AACA,OAAO,SAASO,mBAAT,GAA+B;AACpC,MAAIb,uBAAuB,CAACM,QAAD,CAA3B,EAAuC;AACrC,WAAO,uBAAP;AACD;;AAED,QAAMQ,WAAW,GAAGb,cAAc,CAACK,QAAD,CAAlC;AACA,SAAQ,yBACNQ,WAAW,KAAK,MAAhB,GAAyB,EAAzB,GAA+B,IAAGP,iBAAiB,IAAIO,WAAY,EACpE,YAFD;AAGD;AAED,OAAO,SAASC,aAAT,GAAyB;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAYd,gBAAgB,EAAlC;AACA,SAAOc,KAAK,CAACC,QAAb;AACD;AAED,OAAO,MAAMC,cAAc,GACzBf,iBAAiB,MAAMD,gBAAgB,GAAGc,KAAnB,CAAyBG,UAD3C;AAGP,OAAO,MAAMC,kBAAkB,GAAGhB,cAAc,EAAzC;AAEP,OAAO,MAAMiB,2BAA2B,GAAGhB,uBAAuB,EAA3D","sourcesContent":["import environment from './environment'\n\nimport { isLocalOrUnknownNetwork, getNetworkType } from './lib/web3-utils'\nimport { getNetworkConfig } from './networks'\nimport {\n  getDefaultEthNode,\n  getIpfsGateway,\n  getSubgraphHttpEndpoint,\n} from './local-settings'\n\nconst CHAIN_ID = environment('CHAIN_ID')\nconst COURT_SERVER_NAME = environment('COURT_SERVER_NAME')\n\n// BrightId endpoints\nexport const BRIGHT_ID_ENDPOINT_V5 = 'https://brightid.1hive.org/node/v5'\nexport const BRIGHTID_VERIFICATION_ENDPOINT = `${BRIGHT_ID_ENDPOINT_V5}/verifications`\nexport const BRIGHTID_1HIVE_INFO_ENDPOINT = `${BRIGHT_ID_ENDPOINT_V5}/apps/1hive`\nexport const BRIGHTID_SUBSCRIPTION_ENDPOINT = `${BRIGHT_ID_ENDPOINT_V5}/operations`\n\n// IPFS endpoint\nexport const IPFS_ENDPOINT = isLocalOrUnknownNetwork(CHAIN_ID)\n  ? 'http://127.0.0.1:8080/ipfs'\n  : 'https://ipfs.eth.aragon.network/ipfs'\n\n// Court server endpoint\nexport function courtServerEndpoint() {\n  if (isLocalOrUnknownNetwork(CHAIN_ID)) {\n    return 'http://127.0.0.1:8050'\n  }\n\n  const networkType = getNetworkType(CHAIN_ID)\n  return `https://celeste-server${\n    networkType === 'main' ? '' : `-${COURT_SERVER_NAME || networkType}`\n  }.1hive.org`\n}\n\nexport function graphEndpoint() {\n  const { nodes } = getNetworkConfig()\n  return nodes.subgraph\n}\n\nexport const defaultEthNode =\n  getDefaultEthNode() || getNetworkConfig().nodes.defaultEth\n\nexport const defaultIpfsGateway = getIpfsGateway()\n\nexport const defaultSubgraphHttpEndpoint = getSubgraphHttpEndpoint()\n"]},"metadata":{},"sourceType":"module"}