{"ast":null,"code":"'use strict';\n\nconst tempdir = require('ipfs-utils/src/temp-dir');\n\nexports.filter = (iterable, filterer) => {\n  return async function* () {\n    for await (const value of iterable) {\n      const keep = await filterer(value);\n      if (!keep) continue;\n      yield value;\n    }\n  }();\n}; // Not just sort, because the sorter is given all the values and should return\n// them all sorted\n\n\nexports.sortAll = (iterable, sorter) => {\n  return async function* () {\n    let values = [];\n\n    for await (const value of iterable) values.push(value);\n\n    values = await sorter(values);\n\n    for (const value of values) yield value;\n  }();\n};\n\nexports.take = (iterable, n) => {\n  return async function* () {\n    if (n <= 0) return;\n    let i = 0;\n\n    for await (const value of iterable) {\n      yield value;\n      i++;\n      if (i >= n) return;\n    }\n  }();\n};\n\nexports.map = (iterable, mapper) => {\n  return async function* () {\n    for await (const value of iterable) {\n      yield mapper(value);\n    }\n  }();\n};\n\nexports.replaceStartWith = function (s, r) {\n  const matcher = new RegExp('^' + r);\n  return s.replace(matcher, '');\n};\n\nexports.tmpdir = tempdir;","map":null,"metadata":{},"sourceType":"script"}