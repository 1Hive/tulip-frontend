{"ast":null,"code":"const roundToTwoDp = number => Math.round(number * 100) / 100;\n\nexport const calculateCakeEarnedPerThousandDollars = ({\n  numberOfDays,\n  farmApy,\n  cakePrice\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding daily\n  const timesCompounded = 365; //   We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n\n  const apyAsDecimal = farmApy / 100;\n  const daysAsDecimalOfYear = numberOfDays / timesCompounded; //   Calculate the starting CAKE balance with a dollar balance of $1000.\n\n  const principal = 1000 / cakePrice; // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n\n  const finalAmount = principal * (1 + apyAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear); // To get the cake earned, deduct the amount after compounding (finalAmount) from the starting CAKE balance (principal)\n\n  const interestEarned = finalAmount - principal;\n  return roundToTwoDp(interestEarned);\n};\nexport const apyModalRoi = ({\n  amountEarned,\n  amountInvested\n}) => {\n  const percentage = amountEarned / amountInvested * 100;\n  return percentage.toFixed(2);\n};","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/utils/compoundApyHelpers.ts"],"names":["roundToTwoDp","number","Math","round","calculateCakeEarnedPerThousandDollars","numberOfDays","farmApy","cakePrice","timesCompounded","apyAsDecimal","daysAsDecimalOfYear","principal","finalAmount","interestEarned","apyModalRoi","amountEarned","amountInvested","percentage","toFixed"],"mappings":"AAAA,MAAMA,YAAY,GAAIC,MAAD,IAAYC,IAAI,CAACC,KAAL,CAAWF,MAAM,GAAG,GAApB,IAA2B,GAA5D;;AAEA,OAAO,MAAMG,qCAAqC,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,OAAhB;AAAyBC,EAAAA;AAAzB,CAAD,KAA0C;AAC7F;AACA,QAAMC,eAAe,GAAG,GAAxB,CAF6F,CAG7F;;AACA,QAAMC,YAAY,GAAGH,OAAO,GAAG,GAA/B;AACA,QAAMI,mBAAmB,GAAGL,YAAY,GAAGG,eAA3C,CAL6F,CAM7F;;AACA,QAAMG,SAAS,GAAG,OAAOJ,SAAzB,CAP6F,CAS7F;;AACA,QAAMK,WAAW,GAAGD,SAAS,GAAG,CAAC,IAAIF,YAAY,GAAGD,eAApB,MAAyCA,eAAe,GAAGE,mBAA3D,CAAhC,CAV6F,CAY7F;;AACA,QAAMG,cAAc,GAAGD,WAAW,GAAGD,SAArC;AACA,SAAOX,YAAY,CAACa,cAAD,CAAnB;AACD,CAfM;AAiBP,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAAsC;AAC/D,QAAMC,UAAU,GAAIF,YAAY,GAAGC,cAAhB,GAAkC,GAArD;AACA,SAAOC,UAAU,CAACC,OAAX,CAAmB,CAAnB,CAAP;AACD,CAHM","sourcesContent":["const roundToTwoDp = (number) => Math.round(number * 100) / 100\n\nexport const calculateCakeEarnedPerThousandDollars = ({ numberOfDays, farmApy, cakePrice }) => {\n  // Everything here is worked out relative to a year, with the asset compounding daily\n  const timesCompounded = 365\n  //   We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const apyAsDecimal = farmApy / 100\n  const daysAsDecimalOfYear = numberOfDays / timesCompounded\n  //   Calculate the starting CAKE balance with a dollar balance of $1000.\n  const principal = 1000 / cakePrice\n\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + apyAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n\n  // To get the cake earned, deduct the amount after compounding (finalAmount) from the starting CAKE balance (principal)\n  const interestEarned = finalAmount - principal\n  return roundToTwoDp(interestEarned)\n}\n\nexport const apyModalRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage.toFixed(2)\n}\n"]},"metadata":{},"sourceType":"module"}