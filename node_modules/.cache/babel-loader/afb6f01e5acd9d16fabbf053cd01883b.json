{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar type = 'moderator-access';\nvar MODERATOR = 'MODERATOR';\nvar MEMBER = 'MEMBER';\n\nvar ModeratorAccessController = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function ModeratorAccessController(firstModerator, options) {\n    _classCallCheck(this, ModeratorAccessController);\n\n    this._capabilityTypes = [MODERATOR];\n    this._write = []; // Allowed to add other mods or members\n\n    this._firstModerator = firstModerator;\n\n    this._write.push(this._firstModerator);\n\n    this._members = Boolean(options.members);\n    if (this._members) this._capabilityTypes.push(MEMBER);\n    this._encKeyId = options.encKeyId;\n  }\n\n  _createClass(ModeratorAccessController, [{\n    key: \"isMod\",\n    value: function isMod(id) {\n      return this._write.includes(id);\n    }\n  }, {\n    key: \"isValidCapability\",\n    value: function isValidCapability(capability) {\n      return this._capabilityTypes.includes(capability);\n    }\n  }, {\n    key: \"firstModerator\",\n    get: function get() {\n      return this._firstModerator;\n    }\n  }, {\n    key: \"canAppend\",\n    value: function () {\n      var _canAppend = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(entry, identityProvider) {\n        var entryID, capability, idAdd, isMod, validCapability, validSig;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                entryID = entry.identity.id;\n                capability = entry.payload.value.capability;\n                idAdd = entry.payload.value.id;\n                isMod = this.isMod(entryID);\n                validCapability = this.isValidCapability(capability);\n\n                validSig = /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            return _context.abrupt(\"return\", identityProvider.verifyIdentity(entry.identity));\n\n                          case 1:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function validSig() {\n                    return _ref.apply(this, arguments);\n                  };\n                }();\n\n                _context2.t0 = isMod && validCapability;\n\n                if (!_context2.t0) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                _context2.next = 10;\n                return validSig();\n\n              case 10:\n                _context2.t0 = _context2.sent;\n\n              case 11:\n                if (!_context2.t0) {\n                  _context2.next = 17;\n                  break;\n                }\n\n                if (!(capability === MODERATOR)) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                if (!(idAdd === this.firstModerator)) {\n                  _context2.next = 15;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", true);\n\n              case 15:\n                this._write.push(idAdd);\n\n              case 16:\n                return _context2.abrupt(\"return\", true);\n\n              case 17:\n                return _context2.abrupt(\"return\", false);\n\n              case 18:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function canAppend(_x, _x2) {\n        return _canAppend.apply(this, arguments);\n      }\n\n      return canAppend;\n    }()\n  }, {\n    key: \"load\",\n    value: function () {\n      var _load = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(address) {\n        var addList, suffix, mod;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                addList = address.split('/');\n                suffix = addList.pop();\n                this._members = suffix === 'members';\n                mod = suffix.includes('mod') ? suffix : addList.pop();\n                this._firstModerator = mod.split('_')[1];\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function load(_x3) {\n        return _load.apply(this, arguments);\n      }\n\n      return load;\n    }()\n  }, {\n    key: \"save\",\n    value: function () {\n      var _save = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var address, manifest;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                // TODO if entire obj saved in manfest, can just pass our own fields\n                address = \"\".concat(type, \"/mod_\").concat(this._firstModerator);\n                address += this._members ? '/members' : '';\n                manifest = {\n                  address: address\n                };\n                if (this._encKeyId) manifest.encKeyId = this._encKeyId;\n                return _context4.abrupt(\"return\", manifest);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function save() {\n        return _save.apply(this, arguments);\n      }\n\n      return save;\n    }()\n  }], [{\n    key: \"type\",\n    get: function get() {\n      return type;\n    }\n  }, {\n    key: \"create\",\n    value: function () {\n      var _create = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(orbitdb) {\n        var options,\n            firstModerator,\n            members,\n            encKeyId,\n            _args5 = arguments;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                options = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : {};\n\n                if (options.address) {\n                  members = options.address.includes('members');\n                  firstModerator = options.address.split('/')[1].split('_')[1];\n                  encKeyId = options.encKeyId;\n                } else {\n                  members = options.members;\n                  firstModerator = options.firstModerator;\n                  encKeyId = options.encKeyId;\n                }\n\n                if (firstModerator) {\n                  _context5.next = 4;\n                  break;\n                }\n\n                throw new Error('Moderator AC: firstModerator required');\n\n              case 4:\n                return _context5.abrupt(\"return\", new ModeratorAccessController(firstModerator, {\n                  members: members,\n                  encKeyId: encKeyId\n                }));\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function create(_x4) {\n        return _create.apply(this, arguments);\n      }\n\n      return create;\n    }()\n  }]);\n\n  return ModeratorAccessController;\n}();\n\nmodule.exports = ModeratorAccessController;","map":null,"metadata":{},"sourceType":"script"}