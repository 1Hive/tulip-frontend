{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _asyncIterator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar ready = require('./ready');\n\nmodule.exports = function (socket, options) {\n  options = options || {};\n  options.closeOnEnd = options.closeOnEnd !== false;\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(source) {\n      var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _context.prev = 2;\n              _iterator = _asyncIterator(source);\n\n            case 4:\n              _context.next = 6;\n              return _iterator.next();\n\n            case 6:\n              _step = _context.sent;\n              _iteratorNormalCompletion = _step.done;\n              _context.next = 10;\n              return _step.value;\n\n            case 10:\n              _value = _context.sent;\n\n              if (_iteratorNormalCompletion) {\n                _context.next = 27;\n                break;\n              }\n\n              data = _value;\n              _context.prev = 13;\n              _context.next = 16;\n              return ready(socket);\n\n            case 16:\n              _context.next = 23;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](13);\n\n              if (!(_context.t0.message === 'socket closed')) {\n                _context.next = 22;\n                break;\n              }\n\n              return _context.abrupt(\"break\", 27);\n\n            case 22:\n              throw _context.t0;\n\n            case 23:\n              socket.send(data);\n\n            case 24:\n              _iteratorNormalCompletion = true;\n              _context.next = 4;\n              break;\n\n            case 27:\n              _context.next = 33;\n              break;\n\n            case 29:\n              _context.prev = 29;\n              _context.t1 = _context[\"catch\"](2);\n              _didIteratorError = true;\n              _iteratorError = _context.t1;\n\n            case 33:\n              _context.prev = 33;\n              _context.prev = 34;\n\n              if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                _context.next = 38;\n                break;\n              }\n\n              _context.next = 38;\n              return _iterator.return();\n\n            case 38:\n              _context.prev = 38;\n\n              if (!_didIteratorError) {\n                _context.next = 41;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 41:\n              return _context.finish(38);\n\n            case 42:\n              return _context.finish(33);\n\n            case 43:\n              if (!(options.closeOnEnd && socket.readyState <= 1)) {\n                _context.next = 45;\n                break;\n              }\n\n              return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                socket.addEventListener('close', function (event) {\n                  if (event.wasClean || event.code === 1006) {\n                    resolve();\n                  } else {\n                    var err = Object.assign(new Error('ws error'), {\n                      event: event\n                    });\n                    reject(err);\n                  }\n                });\n                setTimeout(function () {\n                  return socket.close();\n                });\n              }));\n\n            case 45:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 29, 33, 43], [13, 18], [34,, 38, 42]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":null,"metadata":{},"sourceType":"script"}