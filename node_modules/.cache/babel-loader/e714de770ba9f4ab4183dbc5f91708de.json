{"ast":null,"code":"'use strict';\n\nvar React = require('react');\n\nvar index = require('./index-46d0e707.js');\n\nvar defineProperty = require('./defineProperty-3cad0327.js');\n\nvar getPrototypeOf = require('./getPrototypeOf-55c9e80c.js');\n\nvar url = require('./url.js');\n\nvar _extends = require('./extends-023d783e.js');\n\nvar getDisplayName = require('./getDisplayName-7f913e84.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf.getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf.getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return getPrototypeOf.possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar PublicUrlContext = /*#__PURE__*/React__default['default'].createContext('');\nvar Provider = PublicUrlContext.Provider,\n    Consumer = PublicUrlContext.Consumer;\n\nvar PublicUrlProvider = /*#__PURE__*/function (_React$PureComponent) {\n  getPrototypeOf.inherits(PublicUrlProvider, _React$PureComponent);\n\n  var _super = _createSuper(PublicUrlProvider);\n\n  function PublicUrlProvider() {\n    getPrototypeOf.classCallCheck(this, PublicUrlProvider);\n    return _super.apply(this, arguments);\n  }\n\n  getPrototypeOf.createClass(PublicUrlProvider, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          url = _this$props.url,\n          children = _this$props.children;\n      return /*#__PURE__*/React__default['default'].createElement(Provider, {\n        value: url\n      }, children);\n    }\n  }]);\n  return PublicUrlProvider;\n}(React__default['default'].PureComponent); // HOC wrapper\n\n\ndefineProperty.defineProperty(PublicUrlProvider, \"propTypes\", {\n  url: index.propTypes.string.isRequired,\n  children: index.propTypes.node\n});\n\nvar hocWrap = function hocWrap(Component) {\n  var HOC = function HOC(props) {\n    return /*#__PURE__*/React__default['default'].createElement(Consumer, null, function (url) {\n      return /*#__PURE__*/React__default['default'].createElement(Component, _extends._extends_1({}, props, {\n        publicUrl: url\n      }));\n    });\n  };\n\n  HOC.displayName = \"PublicUrlProvider(\".concat(getDisplayName.getDisplayName(Component), \")\");\n  return HOC;\n}; // styled-components utility for URLs\n\n\nvar styledUrl = function styledUrl(url$1) {\n  return function (_ref) {\n    var publicUrl = _ref.publicUrl;\n    return url.prefixUrl(url$1, publicUrl);\n  };\n};\n\nvar PublicUrl = function PublicUrl(props) {\n  return /*#__PURE__*/React__default['default'].createElement(Consumer, props);\n};\n\nPublicUrl.Provider = PublicUrlProvider;\nPublicUrl.hocWrap = hocWrap;\nPublicUrl.styledUrl = styledUrl;\n\nfunction usePublicUrl() {\n  return React.useContext(PublicUrlContext);\n}\n\nexports.PublicUrl = PublicUrl;\nexports.usePublicUrl = usePublicUrl;","map":{"version":3,"sources":["../src/providers/PublicUrl/PublicUrl.js"],"names":["PublicUrlContext","React","Provider","Consumer","PublicUrlProvider","PureComponent","url","PropTypes","children","node","hocWrap","HOC","getDisplayName","styledUrl","publicUrl","prefixUrl","PublicUrl","useContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAMA,gBAAgB,GAAA,aAAGC,cAAAA,CAAAA,SAAAA,CAAAA,CAAAA,aAAAA,CAAzB,EAAyBA,CAAzB;IACQC,QAAAA,GAAuBF,gBAAAA,CAAvBE,Q;IAAUC,QAAAA,GAAaH,gBAAAA,CAAbG,Q;;IAEZC,iBAAAA,GAAAA,aAAAA,UAAAA,oBAAAA,EAAAA;;;;;;;;;;;;6BAKK;AAAA,UAAA,WAAA,GACmB,KADnB,KAAA;AAAA,UACCE,GADD,GAAA,WAAA,CAAA,GAAA;AAAA,UACME,QADN,GAAA,WAAA,CAAA,QAAA;AAEP,aAAA,aAAO,cAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAU,QAAA,KAAK,EAAEF;AAAjB,OAAA,EAAP,QAAO,CAAP;AACD;;;CARGF,CAA0BH,cAAAA,CAAAA,SAAAA,CAAAA,CAAMI,aAAhCD,C,EAAgCC;;;8BAAhCD,iB,EAAAA,W,EACe;AACjBE,EAAAA,GAAG,EAAEC,KAAAA,CAAAA,SAAAA,CAAAA,MAAAA,CADY,UAAA;AAEjBC,EAAAA,QAAQ,EAAED,KAAAA,CAAAA,SAAAA,CAAUE;AAFH,C;;AAWrB,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAA,SAAA,EAAa;AAC3B,MAAMC,GAAG,GAAG,SAANA,GAAM,CAAA,KAAA,EAAK;AAAA,WAAA,aACf,cAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,QAAA,EAAA,IAAA,EAAW,UAAA,GAAA,EAAG;AAAA,aAAA,aAAI,cAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,SAAA,EAAA,QAAA,CAAA,UAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAAsB,QAAA,SAAS,EAAEL;AAAjC,OAAA,CAAA,CAAJ;AADC,KACf,CADe;AAAjB,GAAA;;AAGAK,EAAAA,GAAG,CAAHA,WAAAA,GAAAA,qBAAAA,MAAAA,CAAuCC,cAAAA,CAAAA,cAAAA,CAAvCD,SAAuCC,CAAvCD,EAAAA,GAAAA,CAAAA;AACA,SAAA,GAAA;AALF,CAAA,C,CAAA;;;AASA,IAAME,SAAS,GAAG,SAAZA,SAAY,CAAA,KAAA,EAAG;AAAA,SAAI,UAAA,IAAA,EAAA;AAAA,QAAGC,SAAH,GAAA,IAAA,CAAA,SAAA;AAAA,WAAmBC,GAAAA,CAAAA,SAAAA,CAAS,KAATA,EAAnB,SAAmBA,CAAnB;AAAJ,GAAA;AAArB,CAAA;;IAEMC,SAAS,GAAG,SAAZA,SAAY,CAAA,KAAA,EAAK;AAAA,SAAA,aAAIf,cAAAA,CAAAA,SAAAA,CAAAA,CAAAA,aAAAA,CAAAA,QAAAA,EAAJ,KAAIA,CAAJ;AAAA,C;;AACvBe,SAAS,CAATA,QAAAA,GAAAA,iBAAAA;AACAA,SAAS,CAATA,OAAAA,GAAAA,OAAAA;AACAA,SAAS,CAATA,SAAAA,GAAAA,SAAAA;;AAEA,SAAA,YAAA,GAAwB;AACtB,SAAOC,KAAAA,CAAAA,UAAAA,CAAP,gBAAOA,CAAP;AACD","sourcesContent":["import React, { useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport getDisplayName from 'react-display-name'\nimport { prefixUrl } from '../../utils/url'\n\nconst PublicUrlContext = React.createContext('')\nconst { Provider, Consumer } = PublicUrlContext\n\nclass PublicUrlProvider extends React.PureComponent {\n  static propTypes = {\n    url: PropTypes.string.isRequired,\n    children: PropTypes.node,\n  }\n  render() {\n    const { url, children } = this.props\n    return <Provider value={url}>{children}</Provider>\n  }\n}\n\n// HOC wrapper\nconst hocWrap = Component => {\n  const HOC = props => (\n    <Consumer>{url => <Component {...props} publicUrl={url} />}</Consumer>\n  )\n  HOC.displayName = `PublicUrlProvider(${getDisplayName(Component)})`\n  return HOC\n}\n\n// styled-components utility for URLs\nconst styledUrl = url => ({ publicUrl }) => prefixUrl(url, publicUrl)\n\nconst PublicUrl = props => <Consumer {...props} />\nPublicUrl.Provider = PublicUrlProvider\nPublicUrl.hocWrap = hocWrap\nPublicUrl.styledUrl = styledUrl\n\nfunction usePublicUrl() {\n  return useContext(PublicUrlContext)\n}\n\nexport { PublicUrl, Provider, hocWrap, styledUrl, usePublicUrl }\nexport default PublicUrl\n"]},"metadata":{},"sourceType":"script"}