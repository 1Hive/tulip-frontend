{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _awaitAsyncGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar exporter = require('ipfs-unixfs-exporter');\n\nvar errCode = require('err-code');\n\nvar _require = require('../utils'),\n    normalizeCidPath = _require.normalizeCidPath,\n    mapFile = _require.mapFile,\n    withTimeoutOption = _require.withTimeoutOption;\n\nmodule.exports = function (_ref) {\n  var ipld = _ref.ipld,\n      preload = _ref.preload;\n  return withTimeoutOption( /*#__PURE__*/function () {\n    var _get = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ipfsPath, options) {\n      var pathComponents, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, file;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = options || {};\n\n              if (!(options.preload !== false)) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.prev = 2;\n              pathComponents = normalizeCidPath(ipfsPath).split('/');\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](2);\n              throw errCode(_context.t0, 'ERR_INVALID_PATH');\n\n            case 9:\n              preload(pathComponents[0]);\n\n            case 10:\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _context.prev = 12;\n              _iterator = _asyncIterator(exporter.recursive(ipfsPath, ipld, options));\n\n            case 14:\n              _context.next = 16;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 16:\n              _step = _context.sent;\n              _iteratorNormalCompletion = _step.done;\n              _context.next = 20;\n              return _awaitAsyncGenerator(_step.value);\n\n            case 20:\n              _value = _context.sent;\n\n              if (_iteratorNormalCompletion) {\n                _context.next = 28;\n                break;\n              }\n\n              file = _value;\n              _context.next = 25;\n              return mapFile(file, _objectSpread(_objectSpread({}, options), {}, {\n                includeContent: true\n              }));\n\n            case 25:\n              _iteratorNormalCompletion = true;\n              _context.next = 14;\n              break;\n\n            case 28:\n              _context.next = 34;\n              break;\n\n            case 30:\n              _context.prev = 30;\n              _context.t1 = _context[\"catch\"](12);\n              _didIteratorError = true;\n              _iteratorError = _context.t1;\n\n            case 34:\n              _context.prev = 34;\n              _context.prev = 35;\n\n              if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                _context.next = 39;\n                break;\n              }\n\n              _context.next = 39;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 39:\n              _context.prev = 39;\n\n              if (!_didIteratorError) {\n                _context.next = 42;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 42:\n              return _context.finish(39);\n\n            case 43:\n              return _context.finish(34);\n\n            case 44:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 6], [12, 30, 34, 44], [35,, 39, 43]]);\n    }));\n\n    function get(_x, _x2) {\n      return _get.apply(this, arguments);\n    }\n\n    return get;\n  }());\n};","map":null,"metadata":{},"sourceType":"script"}