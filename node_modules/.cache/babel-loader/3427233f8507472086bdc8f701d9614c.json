{"ast":null,"code":"import gql from 'graphql-tag';\nexport const AppealsByMaker = gql`\n  query AppealsByMaker($maker: Bytes!) {\n    appeals(where: { maker: $maker }) {\n      id\n      round {\n        number\n        settledPenalties\n        dispute {\n          id\n          finalRuling\n          lastRoundId\n          rounds {\n            jurorsNumber\n            number\n          }\n        }\n      }\n      maker\n      appealedRuling\n      appealDeposit\n      opposedRuling\n      confirmAppealDeposit\n      settled\n      settledAt\n    }\n  }\n`;\nexport const AppealsByTaker = gql`\n  query AppealsByTaker($taker: Bytes!) {\n    appeals(where: { taker: $taker }) {\n      id\n      round {\n        number\n        settledPenalties\n        dispute {\n          id\n          finalRuling\n          lastRoundId\n          rounds {\n            jurorsNumber\n            number\n          }\n        }\n      }\n      appealedRuling\n      appealDeposit\n      taker\n      opposedRuling\n      confirmAppealDeposit\n      settled\n      settledAt\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/fabianmolina/Documents/1hive/tulip-frontend/src/queries/appeals.js"],"names":["gql","AppealsByMaker","AppealsByTaker"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,OAAO,MAAMC,cAAc,GAAGD,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1BO;AA4BP,OAAO,MAAME,cAAc,GAAGF,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1BO","sourcesContent":["import gql from 'graphql-tag'\n\nexport const AppealsByMaker = gql`\n  query AppealsByMaker($maker: Bytes!) {\n    appeals(where: { maker: $maker }) {\n      id\n      round {\n        number\n        settledPenalties\n        dispute {\n          id\n          finalRuling\n          lastRoundId\n          rounds {\n            jurorsNumber\n            number\n          }\n        }\n      }\n      maker\n      appealedRuling\n      appealDeposit\n      opposedRuling\n      confirmAppealDeposit\n      settled\n      settledAt\n    }\n  }\n`\n\nexport const AppealsByTaker = gql`\n  query AppealsByTaker($taker: Bytes!) {\n    appeals(where: { taker: $taker }) {\n      id\n      round {\n        number\n        settledPenalties\n        dispute {\n          id\n          finalRuling\n          lastRoundId\n          rounds {\n            jurorsNumber\n            number\n          }\n        }\n      }\n      appealedRuling\n      appealDeposit\n      taker\n      opposedRuling\n      confirmAppealDeposit\n      settled\n      settledAt\n    }\n  }\n`\n"]},"metadata":{},"sourceType":"module"}