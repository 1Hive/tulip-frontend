{"ast":null,"code":"var _jsxFileName = \"/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Lottery/Lottery.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext';\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils';\nimport useI18n from 'hooks/useI18n';\nimport { useLottery } from 'hooks/useContract';\nimport Page from 'components/layout/Page';\nimport Hero from './components/Hero';\nimport Divider from './components/Divider';\nimport NextDrawPage from './NextDrawPage';\nimport PastDrawsPage from './PastDrawsPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 32px;\n`;\n_c = Wrapper;\n\nconst Lottery = () => {\n  _s();\n\n  const lotteryContract = useLottery();\n  const {\n    account\n  } = useWallet();\n  const TranslateString = useI18n();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [historyData, setHistoryData] = useState([]);\n  const [historyError, setHistoryError] = useState(false);\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0);\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1);\n  useEffect(() => {\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`).then(response => response.json()).then(data => setHistoryData(data)).catch(() => {\n      setHistoryError(true);\n    });\n  }, []);\n  useEffect(() => {\n    const getInitialLotteryIndex = async () => {\n      const index = await getLotteryIssueIndex(lotteryContract);\n      const previousLotteryNumber = index - 1;\n      setCurrentLotteryNumber(index);\n      setMostRecentLotteryNumber(previousLotteryNumber);\n    };\n\n    if (account && lotteryContract) {\n      getInitialLotteryIndex();\n    }\n  }, [account, lotteryContract]);\n\n  const handleClick = index => {\n    setActiveIndex(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Page, {\n      children: [/*#__PURE__*/_jsxDEV(Wrapper, {\n        children: /*#__PURE__*/_jsxDEV(ButtonMenu, {\n          activeIndex: activeIndex,\n          onClick: handleClick,\n          size: \"sm\",\n          variant: \"subtle\",\n          children: [/*#__PURE__*/_jsxDEV(ButtonMenuItem, {\n            children: TranslateString(716, 'Next draw')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonMenuItem, {\n            children: TranslateString(718, 'Past draws')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PastLotteryDataContext.Provider, {\n        value: {\n          historyError,\n          historyData,\n          mostRecentLotteryNumber,\n          currentLotteryNumber\n        },\n        children: activeIndex === 0 ? /*#__PURE__*/_jsxDEV(NextDrawPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(PastDrawsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Lottery, \"i3meY6j4a5YdJCmbLLmPuTP8N0o=\", false, function () {\n  return [useLottery, useWallet, useI18n];\n});\n\n_c2 = Lottery;\nexport default Lottery;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Lottery\");","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Lottery/Lottery.tsx"],"names":["React","useState","useEffect","styled","ButtonMenu","ButtonMenuItem","useWallet","PastLotteryDataContext","getLotteryIssueIndex","useI18n","useLottery","Page","Hero","Divider","NextDrawPage","PastDrawsPage","Wrapper","div","Lottery","lotteryContract","account","TranslateString","activeIndex","setActiveIndex","historyData","setHistoryData","historyError","setHistoryError","currentLotteryNumber","setCurrentLotteryNumber","mostRecentLotteryNumber","setMostRecentLotteryNumber","fetch","then","response","json","data","catch","getInitialLotteryIndex","index","previousLotteryNumber","handleClick"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\nimport useI18n from 'hooks/useI18n'\nimport { useLottery } from 'hooks/useContract'\nimport Page from 'components/layout/Page'\nimport Hero from './components/Hero'\nimport Divider from './components/Divider'\nimport NextDrawPage from './NextDrawPage'\nimport PastDrawsPage from './PastDrawsPage'\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 32px;\n`\n\nconst Lottery: React.FC = () => {\n  const lotteryContract = useLottery()\n  const { account } = useWallet()\n  const TranslateString = useI18n()\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [historyData, setHistoryData] = useState([])\n  const [historyError, setHistoryError] = useState(false)\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\n\n  useEffect(() => {\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\n      .then((response) => response.json())\n      .then((data) => setHistoryData(data))\n      .catch(() => {\n        setHistoryError(true)\n      })\n  }, [])\n\n  useEffect(() => {\n    const getInitialLotteryIndex = async () => {\n      const index = await getLotteryIssueIndex(lotteryContract)\n      const previousLotteryNumber = index - 1\n\n      setCurrentLotteryNumber(index)\n      setMostRecentLotteryNumber(previousLotteryNumber)\n    }\n\n    if (account && lotteryContract) {\n      getInitialLotteryIndex()\n    }\n  }, [account, lotteryContract])\n\n  const handleClick = (index) => {\n    setActiveIndex(index)\n  }\n\n  return (\n    <>\n      <Hero />\n      <Page>\n        <Wrapper>\n          <ButtonMenu activeIndex={activeIndex} onClick={handleClick} size=\"sm\" variant=\"subtle\">\n            <ButtonMenuItem>{TranslateString(716, 'Next draw')}</ButtonMenuItem>\n            <ButtonMenuItem>{TranslateString(718, 'Past draws')}</ButtonMenuItem>\n          </ButtonMenu>\n        </Wrapper>\n        <Divider />\n        <PastLotteryDataContext.Provider\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\n        >\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\n        </PastLotteryDataContext.Provider>\n      </Page>\n    </>\n  )\n}\n\nexport default Lottery\n"]},"metadata":{},"sourceType":"module"}