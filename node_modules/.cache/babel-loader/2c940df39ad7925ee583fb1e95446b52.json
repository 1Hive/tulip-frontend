{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar dagPB = require('ipld-dag-pb');\n\nvar _require = require('../../utils'),\n    withTimeoutOption = _require.withTimeoutOption;\n\nmodule.exports = function (_ref) {\n  var ipld = _ref.ipld,\n      preload = _ref.preload;\n\n  var get = require('./get')({\n    ipld: ipld,\n    preload: preload\n  });\n\n  return withTimeoutOption( /*#__PURE__*/function () {\n    var _stat = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(multihash, options) {\n      var node, serialized, cid, blockSize, linkLength;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = options || {};\n              _context.next = 3;\n              return get(multihash, options);\n\n            case 3:\n              node = _context.sent;\n              serialized = dagPB.util.serialize(node);\n              _context.next = 7;\n              return dagPB.util.cid(serialized, {\n                cidVersion: 0\n              });\n\n            case 7:\n              cid = _context.sent;\n              blockSize = serialized.length;\n              linkLength = node.Links.reduce(function (a, l) {\n                return a + l.Tsize;\n              }, 0);\n              return _context.abrupt(\"return\", {\n                Hash: cid.toBaseEncodedString(),\n                NumLinks: node.Links.length,\n                BlockSize: blockSize,\n                LinksSize: blockSize - node.Data.length,\n                DataSize: node.Data.length,\n                CumulativeSize: blockSize + linkLength\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function stat(_x, _x2) {\n      return _stat.apply(this, arguments);\n    }\n\n    return stat;\n  }());\n};","map":null,"metadata":{},"sourceType":"script"}