{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar slicedToArray = require('./slicedToArray-a8a77f0e.js');\n\nrequire('./unsupportedIterableToArray-f175acfa.js');\n\nvar defineProperty = require('./defineProperty-3cad0327.js');\n\nrequire('./miscellaneous.js');\n\nrequire('./environment.js');\n\nvar font = require('./font.js');\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty.defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar TEXT_STYLES = {\n  title1: {\n    size: 32,\n    weight: 600,\n    lineHeight: 1.5\n  },\n  title2: {\n    size: 26,\n    weight: 400,\n    lineHeight: 1.5\n  },\n  title3: {\n    size: 24,\n    weight: 400,\n    lineHeight: 1.5\n  },\n  title4: {\n    size: 20,\n    weight: 400,\n    lineHeight: 1.5\n  },\n  body1: {\n    size: 18,\n    weight: 400,\n    lineHeight: 1.5\n  },\n  body2: {\n    size: 16,\n    weight: 400,\n    lineHeight: 1.5\n  },\n  body3: {\n    size: 14,\n    weight: 400,\n    lineHeight: 1.5\n  },\n  body4: {\n    size: 12,\n    weight: 400,\n    lineHeight: 1.5\n  },\n  label1: {\n    size: 14,\n    weight: 400,\n    lineHeight: 1.5,\n    transform: 'uppercase'\n  },\n  label2: {\n    size: 12,\n    weight: 600,\n    lineHeight: 1.5,\n    transform: 'uppercase'\n  },\n  label3: {\n    size: 10,\n    weight: 400,\n    lineHeight: 1.5,\n    transform: 'uppercase'\n  },\n  address1: {\n    size: 16,\n    weight: 400,\n    lineHeight: 1.5,\n    monospace: true\n  },\n  address2: {\n    size: 14,\n    weight: 400,\n    lineHeight: 1.5,\n    monospace: true\n  }\n};\nvar STYLES_CSS = {\n  size: function size(value) {\n    return \"font-size: \".concat(value, \"px;\");\n  },\n  weight: function weight(value) {\n    return \"font-weight: \".concat(value, \";\");\n  },\n  transform: function transform(value) {\n    return \"text-transform: \".concat(value, \";\");\n  },\n  lineHeight: function lineHeight(value) {\n    return \"line-height: \".concat(value, \";\");\n  },\n  monospace: function monospace(value) {\n    return value ? font.monospace() : '';\n  }\n};\n\nfunction textStyleToCss(textStyle) {\n  return Object.entries(textStyle).map(function (_ref) {\n    var _ref2 = slicedToArray.slicedToArray(_ref, 2),\n        name = _ref2[0],\n        value = _ref2[1];\n\n    return STYLES_CSS[name](value);\n  }).join('');\n}\n\nfunction textStyle(name) {\n  var includeLineHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (!TEXT_STYLES[name]) {\n    throw new Error('textStyle(): the text style doesn’t exist: ' + name);\n  }\n\n  var style = _objectSpread({}, TEXT_STYLES[name]);\n\n  if (!includeLineHeight) {\n    delete style.lineHeight;\n  }\n\n  return textStyleToCss(style);\n}\n\nexports.TEXT_STYLES = TEXT_STYLES;\nexports.textStyle = textStyle;","map":{"version":3,"sources":["../src/style/text-styles.js"],"names":["TEXT_STYLES","title1","size","weight","lineHeight","title2","title3","title4","body1","body2","body3","body4","label1","transform","label2","label3","address1","monospace","address2","STYLES_CSS","value","name","includeLineHeight","style","textStyleToCss"],"mappings":"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","sourcesContent":["import { monospace } from '../utils/font'\n\nconst TEXT_STYLES = {\n  title1: {\n    size: 32,\n    weight: 600,\n    lineHeight: 1.5,\n  },\n  title2: {\n    size: 26,\n    weight: 400,\n    lineHeight: 1.5,\n  },\n  title3: {\n    size: 24,\n    weight: 400,\n    lineHeight: 1.5,\n  },\n  title4: {\n    size: 20,\n    weight: 400,\n    lineHeight: 1.5,\n  },\n  body1: {\n    size: 18,\n    weight: 400,\n    lineHeight: 1.5,\n  },\n  body2: {\n    size: 16,\n    weight: 400,\n    lineHeight: 1.5,\n  },\n  body3: {\n    size: 14,\n    weight: 400,\n    lineHeight: 1.5,\n  },\n  body4: {\n    size: 12,\n    weight: 400,\n    lineHeight: 1.5,\n  },\n  label1: {\n    size: 14,\n    weight: 400,\n    lineHeight: 1.5,\n    transform: 'uppercase',\n  },\n  label2: {\n    size: 12,\n    weight: 600,\n    lineHeight: 1.5,\n    transform: 'uppercase',\n  },\n  label3: {\n    size: 10,\n    weight: 400,\n    lineHeight: 1.5,\n    transform: 'uppercase',\n  },\n  address1: {\n    size: 16,\n    weight: 400,\n    lineHeight: 1.5,\n    monospace: true,\n  },\n  address2: {\n    size: 14,\n    weight: 400,\n    lineHeight: 1.5,\n    monospace: true,\n  },\n}\n\nconst STYLES_CSS = {\n  size: value => `font-size: ${value}px;`,\n  weight: value => `font-weight: ${value};`,\n  transform: value => `text-transform: ${value};`,\n  lineHeight: value => `line-height: ${value};`,\n  monospace: value => (value ? monospace() : ''),\n}\n\nfunction textStyleToCss(textStyle) {\n  return Object.entries(textStyle)\n    .map(([name, value]) => STYLES_CSS[name](value))\n    .join('')\n}\n\nfunction textStyle(name, includeLineHeight = true) {\n  if (!TEXT_STYLES[name]) {\n    throw new Error('textStyle(): the text style doesn’t exist: ' + name)\n  }\n\n  const style = { ...TEXT_STYLES[name] }\n\n  if (!includeLineHeight) {\n    delete style.lineHeight\n  }\n\n  return textStyleToCss(style)\n}\n\nexport { TEXT_STYLES, textStyle }\n"]},"metadata":{},"sourceType":"script"}