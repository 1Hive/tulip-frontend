{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nrequire('./slicedToArray-a8a77f0e.js');\n\nrequire('./unsupportedIterableToArray-f175acfa.js');\n\nvar React = require('react');\n\nrequire('./_commonjsHelpers-1b94f6bc.js');\n\nvar index = require('./index-46d0e707.js');\n\nrequire('./defineProperty-3cad0327.js');\n\nrequire('./toConsumableArray-cc0d28a9.js');\n\nrequire('styled-components');\n\nrequire('./getPrototypeOf-55c9e80c.js');\n\nrequire('./color.js');\n\nrequire('./css.js');\n\nrequire('./miscellaneous.js');\n\nvar environment = require('./environment.js');\n\nrequire('./font.js');\n\nrequire('./keycodes.js');\n\nvar web3 = require('./web3-4e58c255.js');\n\nrequire('./constants.js');\n\nrequire('./text-styles.js');\n\nrequire('./theme-dark.js');\n\nrequire('./theme-light.js');\n\nrequire('./Theme.js');\n\nrequire('./extends-023d783e.js');\n\nrequire('./objectWithoutProperties-c6d3675c.js');\n\nrequire('./index-4def0554.js');\n\nrequire('./FocusVisible.js');\n\nrequire('./ButtonBase.js');\n\nvar BadgeBase = require('./BadgeBase.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\nvar TransactionBadge = /*#__PURE__*/React__default['default'].memo(function TransactionBadge(_ref) {\n  var className = _ref.className,\n      disabled = _ref.disabled,\n      labelStyle = _ref.labelStyle,\n      networkType = _ref.networkType,\n      shorten = _ref.shorten,\n      style = _ref.style,\n      transaction = _ref.transaction,\n      background = _ref.background,\n      fontSize = _ref.fontSize;\n\n  if (fontSize) {\n    environment.warnOnce('TransactionBadge:fontSize', 'The “fontSize” prop is deprecated. Please use “labelStyle” to style the label instead.');\n  }\n\n  if (background) {\n    environment.warnOnce('TransactionBadge:background', 'The “background” prop is deprecated. Please use “className” to style the badge instead.');\n  }\n\n  var isTx = web3.isTransaction(transaction);\n  var transactionUrl = isTx ? web3.blockExplorerUrl('transaction', transaction, {\n    networkType: networkType\n  }) : '';\n  var label = !isTx ? 'Invalid transaction' : shorten ? web3.shortenTransaction(transaction) : transaction;\n  return /*#__PURE__*/React__default['default'].createElement(BadgeBase.default, {\n    badgeOnly: true,\n    disabled: disabled || !transactionUrl,\n    href: transactionUrl,\n    label: label,\n    labelStyle: labelStyle,\n    title: transaction\n  });\n});\nTransactionBadge.propTypes = {\n  className: index.propTypes.string,\n  disabled: index.propTypes.bool,\n  labelStyle: index.propTypes.string,\n  networkType: index.propTypes.string,\n  shorten: index.propTypes.bool,\n  style: index.propTypes.object,\n  transaction: index.propTypes.string.isRequired,\n  // Deprecated\n  background: index.propTypes.string,\n  fontSize: index.propTypes.string\n};\nTransactionBadge.defaultProps = {\n  networkType: 'main',\n  shorten: true\n};\nexports.default = TransactionBadge;","map":{"version":3,"sources":["../src/components/TransactionBadge/TransactionBadge.js"],"names":["TransactionBadge","className","disabled","labelStyle","networkType","shorten","style","transaction","background","fontSize","warnOnce","isTx","isTransaction","transactionUrl","blockExplorerUrl","label","shortenTransaction","BadgeBase","PropTypes","string"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAUMA,gBAAgB,GAAA,aAAG,cAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAW,SAAA,gBAAA,CAAA,IAAA,EAYjC;AAAA,MAXDC,SAWC,GAAA,IAAA,CAXDA,SAWC;AAAA,MAVDC,QAUC,GAAA,IAAA,CAVDA,QAUC;AAAA,MATDC,UASC,GAAA,IAAA,CATDA,UASC;AAAA,MARDC,WAQC,GAAA,IAAA,CARDA,WAQC;AAAA,MAPDC,OAOC,GAAA,IAAA,CAPDA,OAOC;AAAA,MANDC,KAMC,GAAA,IAAA,CANDA,KAMC;AAAA,MALDC,WAKC,GAAA,IAAA,CALDA,WAKC;AAAA,MAFDC,UAEC,GAAA,IAAA,CAFDA,UAEC;AAAA,MADDC,QACC,GAAA,IAAA,CADDA,QACC;;AACD,MAAA,QAAA,EAAc;AACZC,IAAAA,WAAAA,CAAAA,QAAAA,CAAQ,2BAARA,EAAAA,wFAAAA;AAID;;AACD,MAAA,UAAA,EAAgB;AACdA,IAAAA,WAAAA,CAAAA,QAAAA,CAAQ,6BAARA,EAAAA,yFAAAA;AAID;;AAED,MAAMC,IAAI,GAAGC,IAAAA,CAAAA,aAAAA,CAAb,WAAaA,CAAb;AACA,MAAMC,cAAc,GAAGF,IAAI,GACvBG,IAAAA,CAAAA,gBAAAA,CAAgB,aAAhBA,EAAgB,WAAhBA,EAA6C;AAAEV,IAAAA,WAAW,EAAXA;AAAF,GAA7CU,CADuB,GAA3B,EAAA;AAGA,MAAMC,KAAK,GAAG,CAAA,IAAA,GAAA,qBAAA,GAEVV,OAAO,GACPW,IAAAA,CAAAA,kBAAAA,CADO,WACPA,CADO,GAFX,WAAA;AAMA,SAAA,aACE,cAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAACC,SAAAA,CAAD,OAAA,EAAA;AACE,IAAA,SAAS,EADX,IAAA;AAEE,IAAA,QAAQ,EAAEf,QAAQ,IAAI,CAFxB,cAAA;AAGE,IAAA,IAAI,EAHN,cAAA;AAIE,IAAA,KAAK,EAJP,KAAA;AAKE,IAAA,UAAU,EALZ,UAAA;AAME,IAAA,KAAK,EAAEK;AANT,GAAA,CADF;AApCuB,CAAA,C;AA+CzBP,gBAAgB,CAAhBA,SAAAA,GAA6B;AAC3BC,EAAAA,SAAS,EAAEiB,KAAAA,CAAAA,SAAAA,CADgB,MAAA;AAE3BhB,EAAAA,QAAQ,EAAEgB,KAAAA,CAAAA,SAAAA,CAFiB,IAAA;AAG3Bf,EAAAA,UAAU,EAAEe,KAAAA,CAAAA,SAAAA,CAHe,MAAA;AAI3Bd,EAAAA,WAAW,EAAEc,KAAAA,CAAAA,SAAAA,CAJc,MAAA;AAK3Bb,EAAAA,OAAO,EAAEa,KAAAA,CAAAA,SAAAA,CALkB,IAAA;AAM3BZ,EAAAA,KAAK,EAAEY,KAAAA,CAAAA,SAAAA,CANoB,MAAA;AAO3BX,EAAAA,WAAW,EAAEW,KAAAA,CAAAA,SAAAA,CAAAA,MAAAA,CAPc,UAAA;AAS3B;AACAV,EAAAA,UAAU,EAAEU,KAAAA,CAAAA,SAAAA,CAVe,MAAA;AAW3BT,EAAAA,QAAQ,EAAES,KAAAA,CAAAA,SAAAA,CAAUC;AAXO,CAA7BnB;AAaAA,gBAAgB,CAAhBA,YAAAA,GAAgC;AAC9BI,EAAAA,WAAW,EADmB,MAAA;AAE9BC,EAAAA,OAAO,EAAE;AAFqB,CAAhCL","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  blockExplorerUrl,\n  isTransaction,\n  shortenTransaction,\n  warnOnce,\n} from '../../utils'\nimport BadgeBase from '../BadgeBase/BadgeBase'\n\nconst TransactionBadge = React.memo(function TransactionBadge({\n  className,\n  disabled,\n  labelStyle,\n  networkType,\n  shorten,\n  style,\n  transaction,\n\n  // Deprecated\n  background,\n  fontSize,\n}) {\n  if (fontSize) {\n    warnOnce(\n      'TransactionBadge:fontSize',\n      'The “fontSize” prop is deprecated. Please use “labelStyle” to style the label instead.'\n    )\n  }\n  if (background) {\n    warnOnce(\n      'TransactionBadge:background',\n      'The “background” prop is deprecated. Please use “className” to style the badge instead.'\n    )\n  }\n\n  const isTx = isTransaction(transaction)\n  const transactionUrl = isTx\n    ? blockExplorerUrl('transaction', transaction, { networkType })\n    : ''\n  const label = !isTx\n    ? 'Invalid transaction'\n    : shorten\n    ? shortenTransaction(transaction)\n    : transaction\n\n  return (\n    <BadgeBase\n      badgeOnly={true}\n      disabled={disabled || !transactionUrl}\n      href={transactionUrl}\n      label={label}\n      labelStyle={labelStyle}\n      title={transaction}\n    />\n  )\n})\nTransactionBadge.propTypes = {\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  labelStyle: PropTypes.string,\n  networkType: PropTypes.string,\n  shorten: PropTypes.bool,\n  style: PropTypes.object,\n  transaction: PropTypes.string.isRequired,\n\n  // Deprecated\n  background: PropTypes.string,\n  fontSize: PropTypes.string,\n}\nTransactionBadge.defaultProps = {\n  networkType: 'main',\n  shorten: true,\n}\n\nexport default TransactionBadge\n"]},"metadata":{},"sourceType":"script"}