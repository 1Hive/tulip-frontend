{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\n/*\n * Due to Cors the api was forked and a proxy was created\n * @see https://github.com/pancakeswap/gatsby-pancake-api/commit/e811b67a43ccc41edd4a0fa1ee704b2f510aa0ba\n */\n\nexport const baseUrl = 'https://api.pancakeswap.com/api/v1';\n/* eslint-disable camelcase */\n\nexport const useGetStats = () => {\n  _s();\n\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`${baseUrl}/stat`);\n        const responsedata = await response.json();\n        setData(responsedata);\n      } catch (error) {\n        console.error('Unable to fetch data:', error);\n      }\n    };\n\n    fetchData();\n  }, [setData]);\n  return data;\n};\n\n_s(useGetStats, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/hooks/api.ts"],"names":["useEffect","useState","baseUrl","useGetStats","data","setData","fetchData","response","fetch","responsedata","json","error","console"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,OAAO,GAAG,oCAAhB;AAEP;;AAqBA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAyB,IAAzB,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEN,OAAQ,OAAZ,CAA5B;AACA,cAAMO,YAA6B,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA5C;AAEAL,QAAAA,OAAO,CAACI,YAAD,CAAP;AACD,OALD,CAKE,OAAOE,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACD;AACF,KATD;;AAWAL,IAAAA,SAAS;AACV,GAbQ,EAaN,CAACD,OAAD,CAbM,CAAT;AAeA,SAAOD,IAAP;AACD,CAnBM;;GAAMD,W","sourcesContent":["import { useEffect, useState } from 'react'\n\n/*\n * Due to Cors the api was forked and a proxy was created\n * @see https://github.com/pancakeswap/gatsby-pancake-api/commit/e811b67a43ccc41edd4a0fa1ee704b2f510aa0ba\n */\nexport const baseUrl = 'https://api.pancakeswap.com/api/v1'\n\n/* eslint-disable camelcase */\n\nexport interface TradePair {\n  swap_pair_contract: string\n  base_symbol: string\n  quote_symbol: string\n  last_price: number\n  base_volume_24_h: number\n  quote_volume_24_h: number\n}\n\nexport interface ApiStatResponse {\n  update_at: string\n  '24h_total_volume': number\n  total_value_locked: number\n  total_value_locked_all: number\n  trade_pairs: {\n    [key: string]: TradePair\n  }\n}\n\nexport const useGetStats = () => {\n  const [data, setData] = useState<ApiStatResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`${baseUrl}/stat`)\n        const responsedata: ApiStatResponse = await response.json()\n\n        setData(responsedata)\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  return data\n}\n"]},"metadata":{},"sourceType":"module"}