{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _threeIdProviderProxy = _interopRequireDefault(require(\"./threeIdProviderProxy.js\"));\n\nvar _postmsgRpc = require(\"postmsg-rpc\");\n\nvar _ethereumAuthProvider = _interopRequireDefault(require(\"./authProvider/ethereumAuthProvider.js\"));\n\nvar _utils = require(\"identity-wallet/lib/utils\");\n\nvar IDENTITY_WALLET_IFRAME_URL = 'https://connect.3box.io';\nvar HIDE_IFRAME_STYLE = 'position: fixed; width:0; height:0; border:0; border:none !important';\nvar DISPLAY_IFRAME_STYLE = 'border:none border:0; z-index: 500; position: fixed; max-width: 100%;';\nvar IFRAME_TOP = \"top: 10px; right: 10px\";\nvar IFRAME_BOTTOM = \"bottom: 0px; left: 0px;\";\n\nvar hide = function hide(iframe) {\n  return function () {\n    return iframe.style = HIDE_IFRAME_STYLE;\n  };\n};\n\nvar display = function display(iframe) {\n  return function () {\n    var mobile = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '245px';\n    var width = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '440px';\n    return iframe.style = \"\".concat(DISPLAY_IFRAME_STYLE, \" width: \").concat(width, \"; height: \").concat(height, \"; \").concat(mobile ? IFRAME_BOTTOM : IFRAME_TOP);\n  };\n}; // TODO maybe have some more ui options here, because these can change after iframe loads\n\n/**\n *  ThreeIdConnect provides interface for loading and instantiating IDW iframe,\n *  and provides a 3ID provider interface to send requests to iframe. Acts like\n *  rpc client.\n */\n\n\nvar ThreeIdConnect = /*#__PURE__*/function () {\n  /**\n    *  Creates ThreeIdConnect. Create and loads iframe. Should be instantiated\n    *  on page load.\n    *\n    * @param     {String}    iframeUrl   iframe url, defaults to 3id-connect iframe service\n    */\n  function ThreeIdConnect(iframeUrl) {\n    var _this = this;\n\n    (0, _classCallCheck2[\"default\"])(this, ThreeIdConnect);\n\n    if (typeof window === 'undefined' || typeof document === 'undefined') {\n      throw new Error('ThreeIdConnect not supported in this enviroment');\n    }\n\n    this.iframe = document.createElement('iframe');\n    this.iframe.src = iframeUrl || IDENTITY_WALLET_IFRAME_URL;\n    this.iframe.style = HIDE_IFRAME_STYLE;\n    this.iframe.allowTransparency = true;\n    this.iframe.frameBorder = 0;\n    this.iframeLoadedPromise = new Promise(function (resolve, reject) {\n      _this.iframe.onload = function () {\n        resolve();\n      };\n    });\n    document.body.appendChild(this.iframe);\n  } // Just passing ref to threeId and ipfs during migration\n\n\n  (0, _createClass2[\"default\"])(ThreeIdConnect, [{\n    key: \"connect\",\n    value: function () {\n      var _connect = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(provider, ThreeId, ipfs) {\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // assumes eth provider during migration\n                this.provider = provider;\n                this.ThreeId = ThreeId;\n                this.ipfs = ipfs; // after migration, can detect different provdier to create authProvider\n\n                this.authProvider = new _ethereumAuthProvider[\"default\"](provider);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function connect(_x, _x2, _x3) {\n        return _connect.apply(this, arguments);\n      }\n\n      return connect;\n    }()\n    /**\n      *  Handlers to consumer message to hide or display iframe\n      *\n      * @private\n      */\n\n  }, {\n    key: \"_registerDisplayHandlers\",\n    value: function _registerDisplayHandlers() {\n      (0, _postmsgRpc.expose)('display', display(this.iframe), {\n        postMessage: this.postMessage\n      });\n      (0, _postmsgRpc.expose)('hide', hide(this.iframe), {\n        postMessage: this.postMessage\n      });\n    }\n    /**\n      *  Handlers to consume messages for authProvider\n      *\n      * @private\n      */\n\n  }, {\n    key: \"_registerAuthHandlers\",\n    value: function _registerAuthHandlers() {\n      (0, _postmsgRpc.expose)('authenticate', this.authenticate.bind(this), {\n        postMessage: this.postMessage\n      });\n      (0, _postmsgRpc.expose)('migration', this.migration.bind(this), {\n        postMessage: this.postMessage\n      });\n      (0, _postmsgRpc.expose)('createLink', this.createLink.bind(this), {\n        postMessage: this.postMessage\n      });\n    }\n    /**\n      *  Returns ThreeId instance, used for migration of legacy 3boxjs accounts\n      *\n      * @private\n      * @param     {String}    address     An ethereum address\n      * @return    {ThreeId}\n      */\n\n  }, {\n    key: \"_getThreeId\",\n    value: function () {\n      var _getThreeId2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(address) {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this._threeId) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                _context2.next = 3;\n                return this.ThreeId.getIdFromEthAddress(address, this.provider, this.ipfs, undefined, {});\n\n              case 3:\n                this._threeId = _context2.sent;\n\n              case 4:\n                return _context2.abrupt(\"return\", this._threeId);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function _getThreeId(_x4) {\n        return _getThreeId2.apply(this, arguments);\n      }\n\n      return _getThreeId;\n    }()\n  }, {\n    key: \"authenticate\",\n    value: function () {\n      var _authenticate = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(message, address) {\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", this.authProvider.authenticate(message, address));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function authenticate(_x5, _x6) {\n        return _authenticate.apply(this, arguments);\n      }\n\n      return authenticate;\n    }()\n  }, {\n    key: \"migration\",\n    value: function () {\n      var _migration = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(spaces, address) {\n        var threeId;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this._getThreeId(address);\n\n              case 2:\n                threeId = _context4.sent;\n                _context4.next = 5;\n                return threeId.authenticate(spaces);\n\n              case 5:\n                return _context4.abrupt(\"return\", threeId.serializeState());\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function migration(_x7, _x8) {\n        return _migration.apply(this, arguments);\n      }\n\n      return migration;\n    }()\n  }, {\n    key: \"createLink\",\n    value: function () {\n      var _createLink = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(did, address) {\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt(\"return\", this.authProvider.createLink(did, address));\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function createLink(_x9, _x10) {\n        return _createLink.apply(this, arguments);\n      }\n\n      return createLink;\n    }()\n    /**\n      *  Returns a 3ID provider, which can send and receive 3ID messages from iframe\n      *\n      * @return    {ThreeIdProviderProxy}     A 3ID provider\n      */\n\n  }, {\n    key: \"get3idProvider\",\n    value: function () {\n      var _get3idProvider = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6() {\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.iframeLoadedPromise;\n\n              case 2:\n                this.postMessage = this.iframe.contentWindow.postMessage.bind(this.iframe.contentWindow);\n\n                this._registerDisplayHandlers();\n\n                this._registerAuthHandlers();\n\n                return _context6.abrupt(\"return\", new _threeIdProviderProxy[\"default\"](this.postMessage));\n\n              case 6:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function get3idProvider() {\n        return _get3idProvider.apply(this, arguments);\n      }\n\n      return get3idProvider;\n    }()\n  }]);\n  return ThreeIdConnect;\n}();\n\nvar _default = ThreeIdConnect;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}