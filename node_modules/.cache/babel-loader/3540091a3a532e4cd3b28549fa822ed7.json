{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SourceFilesModel = exports.SourceFiles = void 0;\n\nconst core_1 = require(\"../core\");\n\nclass SourceFiles extends core_1.CrowdinApi {\n  /**\n   * @param projectId project identifier\n   * @param name filter branch by name\n   * @param limit maximum number of items to retrieve (default 25)\n   * @param offset starting offset in the collection (default 0)\n   */\n  listProjectBranches(projectId, name, limit, offset) {\n    let url = `${this.url}/projects/${projectId}/branches`;\n    url = this.addQueryParam(url, 'name', name);\n    return this.getList(url, limit, offset);\n  }\n  /**\n   * @param projectId project identifier\n   * @param request request body\n   */\n\n\n  createBranch(projectId, request) {\n    const url = `${this.url}/projects/${projectId}/branches`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param branchId branch identifier\n   */\n\n\n  getBranch(projectId, branchId) {\n    const url = `${this.url}/projects/${projectId}/branches/${branchId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param branchId branch identifier\n   */\n\n\n  deleteBranch(projectId, branchId) {\n    const url = `${this.url}/projects/${projectId}/branches/${branchId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param branchId branch identifier\n   * @param request request body\n   */\n\n\n  editBranch(projectId, branchId, request) {\n    const url = `${this.url}/projects/${projectId}/branches/${branchId}`;\n    return this.patch(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param branchId filter directories by branchId\n   * @param directoryId filter directories by directoryId\n   * @param limit maximum number of items to retrieve (default 25)\n   * @param offset starting offset in the collection (default 0)\n   */\n\n\n  listProjectDirectories(projectId, branchId, directoryId, limit, offset) {\n    let url = `${this.url}/projects/${projectId}/directories`;\n    url = this.addQueryParam(url, 'branchId', branchId);\n    url = this.addQueryParam(url, 'directoryId', directoryId);\n    return this.getList(url, limit, offset);\n  }\n  /**\n   * @param projectId project identifier\n   * @param request request body\n   */\n\n\n  createDirectory(projectId, request) {\n    const url = `${this.url}/projects/${projectId}/directories`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param directoryId directory identifier\n   */\n\n\n  getDirectory(projectId, directoryId) {\n    const url = `${this.url}/projects/${projectId}/directories/${directoryId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param directoryId directory identifier\n   */\n\n\n  deleteDirectory(projectId, directoryId) {\n    const url = `${this.url}/projects/${projectId}/directories/${directoryId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param directoryId directory identifier\n   * @param request request body\n   */\n\n\n  editDirectory(projectId, directoryId, request) {\n    const url = `${this.url}/projects/${projectId}/directories/${directoryId}`;\n    return this.patch(url, request, this.defaultConfig());\n  }\n\n  listProjectFiles(projectId, branchIdOrRequest, directoryId, limit, offset, recursion, filter) {\n    let url = `${this.url}/projects/${projectId}/files`;\n    let request;\n\n    if (branchIdOrRequest && typeof branchIdOrRequest === 'object') {\n      request = branchIdOrRequest;\n    } else {\n      request = {\n        branchId: branchIdOrRequest,\n        directoryId,\n        limit,\n        offset,\n        recursion,\n        filter\n      };\n    }\n\n    url = this.addQueryParam(url, 'branchId', request.branchId);\n    url = this.addQueryParam(url, 'directoryId', request.directoryId);\n    url = this.addQueryParam(url, 'recursion', request.recursion);\n    url = this.addQueryParam(url, 'filter', request.filter);\n    return this.getList(url, request.limit, request.offset);\n  }\n  /**\n   * @param projectId project identifier\n   * @param request request body\n   */\n\n\n  createFile(projectId, request) {\n    const url = `${this.url}/projects/${projectId}/files`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param fileId file identifier\n   */\n\n\n  getFile(projectId, fileId) {\n    const url = `${this.url}/projects/${projectId}/files/${fileId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param fileId file identifier\n   * @param request request body\n   */\n\n\n  updateOrRestoreFile(projectId, fileId, request) {\n    const url = `${this.url}/projects/${projectId}/files/${fileId}`;\n    return this.put(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param fileId file identifier\n   */\n\n\n  deleteFile(projectId, fileId) {\n    const url = `${this.url}/projects/${projectId}/files/${fileId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param fileId file identifier\n   * @param request request body\n   */\n\n\n  editFile(projectId, fileId, request) {\n    const url = `${this.url}/projects/${projectId}/files/${fileId}`;\n    return this.patch(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param fileId file identifier\n   */\n\n\n  downloadFile(projectId, fileId) {\n    const url = `${this.url}/projects/${projectId}/files/${fileId}/download`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param fileId file identifier\n   * @param limit maximum number of items to retrieve (default 25)\n   * @param offset starting offset in the collection (default 0)\n   */\n\n\n  listFileRevisions(projectId, fileId, limit, offset) {\n    const url = `${this.url}/projects/${projectId}/files/${fileId}/revisions`;\n    return this.getList(url, limit, offset);\n  }\n  /**\n   * @param projectId project identifier\n   * @param fileId file identifier\n   * @param revisionId revision identifier\n   */\n\n\n  getFileRevision(projectId, fileId, revisionId) {\n    const url = `${this.url}/projects/${projectId}/files/${fileId}/revisions/${revisionId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param branchId filter builds by branchId\n   * @param limit maximum number of items to retrieve (default 25)\n   * @param offset starting offset in the collection (default 0)\n   */\n\n\n  listReviewedSourceFilesBuild(projectId, branchId, limit, offset) {\n    let url = `${this.url}/projects/${projectId}/strings/reviewed-builds`;\n    url = this.addQueryParam(url, 'branchId', branchId);\n    return this.getList(url, limit, offset);\n  }\n  /**\n   * @param projectId project identifier\n   * @param request request body\n   */\n\n\n  buildReviewedSourceFiles(projectId, request) {\n    const url = `${this.url}/projects/${projectId}/strings/reviewed-builds`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param buildId build identifier\n   */\n\n\n  checkReviewedSourceFilesBuildStatus(projectId, buildId) {\n    const url = `${this.url}/projects/${projectId}/strings/reviewed-builds/${buildId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param buildId build identifier\n   */\n\n\n  downloadReviewedSourceFiles(projectId, buildId) {\n    const url = `${this.url}/projects/${projectId}/strings/reviewed-builds/${buildId}/download`;\n    return this.get(url, this.defaultConfig());\n  }\n\n}\n\nexports.SourceFiles = SourceFiles;\nvar SourceFilesModel;\n\n(function (SourceFilesModel) {\n  let Priority;\n\n  (function (Priority) {\n    Priority[\"LOW\"] = \"low\";\n    Priority[\"NORMAL\"] = \"normal\";\n    Priority[\"HIGH\"] = \"high\";\n  })(Priority = SourceFilesModel.Priority || (SourceFilesModel.Priority = {}));\n\n  let FileType;\n\n  (function (FileType) {\n    FileType[\"AUTO\"] = \"auto\";\n    FileType[\"ANDROID\"] = \"android\";\n    FileType[\"MACOSX\"] = \"macosx\";\n    FileType[\"RESX\"] = \"resx\";\n    FileType[\"PROPERTIES\"] = \"properties\";\n    FileType[\"GETTEXT\"] = \"gettext\";\n    FileType[\"YAML\"] = \"yaml\";\n    FileType[\"PHP\"] = \"php\";\n    FileType[\"JSON\"] = \"json\";\n    FileType[\"XML\"] = \"xml\";\n    FileType[\"INI\"] = \"ini\";\n    FileType[\"RC\"] = \"rc\";\n    FileType[\"RESW\"] = \"resw\";\n    FileType[\"RESJSON\"] = \"resjson\";\n    FileType[\"QTTS\"] = \"qtts\";\n    FileType[\"JOOMLA\"] = \"joomla\";\n    FileType[\"CHROME\"] = \"chrome\";\n    FileType[\"DTD\"] = \"dtd\";\n    FileType[\"DKLANG\"] = \"dklang\";\n    FileType[\"FLEX\"] = \"flex\";\n    FileType[\"NSH\"] = \"nsh\";\n    FileType[\"WXL\"] = \"wxl\";\n    FileType[\"XLIFF\"] = \"xliff\";\n    FileType[\"HTML\"] = \"html\";\n    FileType[\"HAML\"] = \"haml\";\n    FileType[\"TXT\"] = \"txt\";\n    FileType[\"CSV\"] = \"csv\";\n    FileType[\"MD\"] = \"md\";\n    FileType[\"FLSNP\"] = \"flsnp\";\n    FileType[\"FM_HTML\"] = \"fm_html\";\n    FileType[\"FM_MD\"] = \"fm_md\";\n    FileType[\"MEDIAWIKI\"] = \"mediawiki\";\n    FileType[\"DOCX\"] = \"docx\";\n    FileType[\"SBV\"] = \"sbv\";\n    FileType[\"VTT\"] = \"vtt\";\n    FileType[\"SRT\"] = \"srt\";\n  })(FileType = SourceFilesModel.FileType || (SourceFilesModel.FileType = {}));\n\n  let EscapeQuotes;\n\n  (function (EscapeQuotes) {\n    EscapeQuotes[EscapeQuotes[\"ZERO\"] = 0] = \"ZERO\";\n    EscapeQuotes[EscapeQuotes[\"ONE\"] = 1] = \"ONE\";\n    EscapeQuotes[EscapeQuotes[\"TWO\"] = 2] = \"TWO\";\n    EscapeQuotes[EscapeQuotes[\"THREE\"] = 3] = \"THREE\";\n  })(EscapeQuotes = SourceFilesModel.EscapeQuotes || (SourceFilesModel.EscapeQuotes = {}));\n\n  let UpdateOption;\n\n  (function (UpdateOption) {\n    UpdateOption[\"CLEAR_TRANSLATIONS_AND_APPROVALS\"] = \"clear_translations_and_approvals\";\n    UpdateOption[\"KEEP_TRANSLATIONS\"] = \"keep_translations\";\n    UpdateOption[\"KEEP_TRANSLATIONS_AND_APPROVALS\"] = \"keep_translations_and_approvals\";\n  })(UpdateOption = SourceFilesModel.UpdateOption || (SourceFilesModel.UpdateOption = {}));\n})(SourceFilesModel = exports.SourceFilesModel || (exports.SourceFilesModel = {}));","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/node_modules/@crowdin/crowdin-api-client/out/sourceFiles/index.js"],"names":["Object","defineProperty","exports","value","SourceFilesModel","SourceFiles","core_1","require","CrowdinApi","listProjectBranches","projectId","name","limit","offset","url","addQueryParam","getList","createBranch","request","post","defaultConfig","getBranch","branchId","get","deleteBranch","delete","editBranch","patch","listProjectDirectories","directoryId","createDirectory","getDirectory","deleteDirectory","editDirectory","listProjectFiles","branchIdOrRequest","recursion","filter","createFile","getFile","fileId","updateOrRestoreFile","put","deleteFile","editFile","downloadFile","listFileRevisions","getFileRevision","revisionId","listReviewedSourceFilesBuild","buildReviewedSourceFiles","checkReviewedSourceFilesBuildStatus","buildId","downloadReviewedSourceFiles","Priority","FileType","EscapeQuotes","UpdateOption"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SourceFilesModel = exports.SourceFiles = void 0;\nconst core_1 = require(\"../core\");\nclass SourceFiles extends core_1.CrowdinApi {\n    /**\n     * @param projectId project identifier\n     * @param name filter branch by name\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    listProjectBranches(projectId, name, limit, offset) {\n        let url = `${this.url}/projects/${projectId}/branches`;\n        url = this.addQueryParam(url, 'name', name);\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    createBranch(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/branches`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param branchId branch identifier\n     */\n    getBranch(projectId, branchId) {\n        const url = `${this.url}/projects/${projectId}/branches/${branchId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param branchId branch identifier\n     */\n    deleteBranch(projectId, branchId) {\n        const url = `${this.url}/projects/${projectId}/branches/${branchId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param branchId branch identifier\n     * @param request request body\n     */\n    editBranch(projectId, branchId, request) {\n        const url = `${this.url}/projects/${projectId}/branches/${branchId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param branchId filter directories by branchId\n     * @param directoryId filter directories by directoryId\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    listProjectDirectories(projectId, branchId, directoryId, limit, offset) {\n        let url = `${this.url}/projects/${projectId}/directories`;\n        url = this.addQueryParam(url, 'branchId', branchId);\n        url = this.addQueryParam(url, 'directoryId', directoryId);\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    createDirectory(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/directories`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param directoryId directory identifier\n     */\n    getDirectory(projectId, directoryId) {\n        const url = `${this.url}/projects/${projectId}/directories/${directoryId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param directoryId directory identifier\n     */\n    deleteDirectory(projectId, directoryId) {\n        const url = `${this.url}/projects/${projectId}/directories/${directoryId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param directoryId directory identifier\n     * @param request request body\n     */\n    editDirectory(projectId, directoryId, request) {\n        const url = `${this.url}/projects/${projectId}/directories/${directoryId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    listProjectFiles(projectId, branchIdOrRequest, directoryId, limit, offset, recursion, filter) {\n        let url = `${this.url}/projects/${projectId}/files`;\n        let request;\n        if (branchIdOrRequest && typeof branchIdOrRequest === 'object') {\n            request = branchIdOrRequest;\n        }\n        else {\n            request = { branchId: branchIdOrRequest, directoryId, limit, offset, recursion, filter };\n        }\n        url = this.addQueryParam(url, 'branchId', request.branchId);\n        url = this.addQueryParam(url, 'directoryId', request.directoryId);\n        url = this.addQueryParam(url, 'recursion', request.recursion);\n        url = this.addQueryParam(url, 'filter', request.filter);\n        return this.getList(url, request.limit, request.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    createFile(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/files`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     */\n    getFile(projectId, fileId) {\n        const url = `${this.url}/projects/${projectId}/files/${fileId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     * @param request request body\n     */\n    updateOrRestoreFile(projectId, fileId, request) {\n        const url = `${this.url}/projects/${projectId}/files/${fileId}`;\n        return this.put(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     */\n    deleteFile(projectId, fileId) {\n        const url = `${this.url}/projects/${projectId}/files/${fileId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     * @param request request body\n     */\n    editFile(projectId, fileId, request) {\n        const url = `${this.url}/projects/${projectId}/files/${fileId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     */\n    downloadFile(projectId, fileId) {\n        const url = `${this.url}/projects/${projectId}/files/${fileId}/download`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    listFileRevisions(projectId, fileId, limit, offset) {\n        const url = `${this.url}/projects/${projectId}/files/${fileId}/revisions`;\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     * @param revisionId revision identifier\n     */\n    getFileRevision(projectId, fileId, revisionId) {\n        const url = `${this.url}/projects/${projectId}/files/${fileId}/revisions/${revisionId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param branchId filter builds by branchId\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    listReviewedSourceFilesBuild(projectId, branchId, limit, offset) {\n        let url = `${this.url}/projects/${projectId}/strings/reviewed-builds`;\n        url = this.addQueryParam(url, 'branchId', branchId);\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    buildReviewedSourceFiles(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/strings/reviewed-builds`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param buildId build identifier\n     */\n    checkReviewedSourceFilesBuildStatus(projectId, buildId) {\n        const url = `${this.url}/projects/${projectId}/strings/reviewed-builds/${buildId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param buildId build identifier\n     */\n    downloadReviewedSourceFiles(projectId, buildId) {\n        const url = `${this.url}/projects/${projectId}/strings/reviewed-builds/${buildId}/download`;\n        return this.get(url, this.defaultConfig());\n    }\n}\nexports.SourceFiles = SourceFiles;\nvar SourceFilesModel;\n(function (SourceFilesModel) {\n    let Priority;\n    (function (Priority) {\n        Priority[\"LOW\"] = \"low\";\n        Priority[\"NORMAL\"] = \"normal\";\n        Priority[\"HIGH\"] = \"high\";\n    })(Priority = SourceFilesModel.Priority || (SourceFilesModel.Priority = {}));\n    let FileType;\n    (function (FileType) {\n        FileType[\"AUTO\"] = \"auto\";\n        FileType[\"ANDROID\"] = \"android\";\n        FileType[\"MACOSX\"] = \"macosx\";\n        FileType[\"RESX\"] = \"resx\";\n        FileType[\"PROPERTIES\"] = \"properties\";\n        FileType[\"GETTEXT\"] = \"gettext\";\n        FileType[\"YAML\"] = \"yaml\";\n        FileType[\"PHP\"] = \"php\";\n        FileType[\"JSON\"] = \"json\";\n        FileType[\"XML\"] = \"xml\";\n        FileType[\"INI\"] = \"ini\";\n        FileType[\"RC\"] = \"rc\";\n        FileType[\"RESW\"] = \"resw\";\n        FileType[\"RESJSON\"] = \"resjson\";\n        FileType[\"QTTS\"] = \"qtts\";\n        FileType[\"JOOMLA\"] = \"joomla\";\n        FileType[\"CHROME\"] = \"chrome\";\n        FileType[\"DTD\"] = \"dtd\";\n        FileType[\"DKLANG\"] = \"dklang\";\n        FileType[\"FLEX\"] = \"flex\";\n        FileType[\"NSH\"] = \"nsh\";\n        FileType[\"WXL\"] = \"wxl\";\n        FileType[\"XLIFF\"] = \"xliff\";\n        FileType[\"HTML\"] = \"html\";\n        FileType[\"HAML\"] = \"haml\";\n        FileType[\"TXT\"] = \"txt\";\n        FileType[\"CSV\"] = \"csv\";\n        FileType[\"MD\"] = \"md\";\n        FileType[\"FLSNP\"] = \"flsnp\";\n        FileType[\"FM_HTML\"] = \"fm_html\";\n        FileType[\"FM_MD\"] = \"fm_md\";\n        FileType[\"MEDIAWIKI\"] = \"mediawiki\";\n        FileType[\"DOCX\"] = \"docx\";\n        FileType[\"SBV\"] = \"sbv\";\n        FileType[\"VTT\"] = \"vtt\";\n        FileType[\"SRT\"] = \"srt\";\n    })(FileType = SourceFilesModel.FileType || (SourceFilesModel.FileType = {}));\n    let EscapeQuotes;\n    (function (EscapeQuotes) {\n        EscapeQuotes[EscapeQuotes[\"ZERO\"] = 0] = \"ZERO\";\n        EscapeQuotes[EscapeQuotes[\"ONE\"] = 1] = \"ONE\";\n        EscapeQuotes[EscapeQuotes[\"TWO\"] = 2] = \"TWO\";\n        EscapeQuotes[EscapeQuotes[\"THREE\"] = 3] = \"THREE\";\n    })(EscapeQuotes = SourceFilesModel.EscapeQuotes || (SourceFilesModel.EscapeQuotes = {}));\n    let UpdateOption;\n    (function (UpdateOption) {\n        UpdateOption[\"CLEAR_TRANSLATIONS_AND_APPROVALS\"] = \"clear_translations_and_approvals\";\n        UpdateOption[\"KEEP_TRANSLATIONS\"] = \"keep_translations\";\n        UpdateOption[\"KEEP_TRANSLATIONS_AND_APPROVALS\"] = \"keep_translations_and_approvals\";\n    })(UpdateOption = SourceFilesModel.UpdateOption || (SourceFilesModel.UpdateOption = {}));\n})(SourceFilesModel = exports.SourceFilesModel || (exports.SourceFilesModel = {}));\n"]},"metadata":{},"sourceType":"script"}