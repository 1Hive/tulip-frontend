{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar EC = require('elliptic').ec;\n\nvar ec = new EC('secp256k1');\nmodule.exports = {\n  verify: function () {\n    var _verify = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(signature, publicKey, data) {\n      var res, key;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (signature) {\n                _context.next = 2;\n                break;\n              }\n\n              throw new Error('No signature given');\n\n            case 2:\n              if (publicKey) {\n                _context.next = 4;\n                break;\n              }\n\n              throw new Error('Given publicKey was undefined');\n\n            case 4:\n              if (data) {\n                _context.next = 6;\n                break;\n              }\n\n              throw new Error('Given input data was undefined');\n\n            case 6:\n              res = false;\n              key = ec.keyPair({\n                pub: publicKey,\n                pubEnc: 'hex'\n              });\n\n              try {\n                res = ec.verify(data, signature, key);\n              } catch (e) {// Catches 'Error: Signature without r or s'\n              }\n\n              return _context.abrupt(\"return\", Promise.resolve(res));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function verify(_x, _x2, _x3) {\n      return _verify.apply(this, arguments);\n    }\n\n    return verify;\n  }()\n};","map":null,"metadata":{},"sourceType":"script"}