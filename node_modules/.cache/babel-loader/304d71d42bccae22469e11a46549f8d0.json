{"ast":null,"code":"import _slicedToArray from\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _createForOfIteratorHelper from\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import{getLastPackageVersion,getPackageVersion,setPackageVersion}from'../local-settings';import{clearActivities}from'./migrations';import{isNewVersion,satisifesRange}from'./helper';var MIGRATIONS=[['1.0.0',function(){return clearActivities();}]];export function checkMigrations(){var packageVersion=getPackageVersion();var lastPackageVersion=getLastPackageVersion();if(isNewVersion(lastPackageVersion,packageVersion)){// Save the current package version\nsetPackageVersion(packageVersion);// Run each migration which falls in the range (lastPackageVersion, packageVersion]\nvar _iterator=_createForOfIteratorHelper(MIGRATIONS),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _step$value=_slicedToArray(_step.value,2),version=_step$value[0],migration=_step$value[1];if(satisifesRange(version,lastPackageVersion,packageVersion)){// Run migration\nmigration();}}}catch(err){_iterator.e(err);}finally{_iterator.f();}}}","map":{"version":3,"sources":["/Users/fabianmolina/Documents/1hive/tulip-frontend/src/migrations/index.js"],"names":["getLastPackageVersion","getPackageVersion","setPackageVersion","clearActivities","isNewVersion","satisifesRange","MIGRATIONS","checkMigrations","packageVersion","lastPackageVersion","version","migration"],"mappings":"0WAAA,OACEA,qBADF,CAEEC,iBAFF,CAGEC,iBAHF,KAIO,mBAJP,CAKA,OAASC,eAAT,KAAgC,cAAhC,CACA,OAASC,YAAT,CAAuBC,cAAvB,KAA6C,UAA7C,CAEA,GAAMC,CAAAA,UAAU,CAAG,CAAC,CAAC,OAAD,CAAU,iBAAMH,CAAAA,eAAe,EAArB,EAAV,CAAD,CAAnB,CAEA,MAAO,SAASI,CAAAA,eAAT,EAA2B,CAChC,GAAMC,CAAAA,cAAc,CAAGP,iBAAiB,EAAxC,CACA,GAAMQ,CAAAA,kBAAkB,CAAGT,qBAAqB,EAAhD,CAEA,GAAII,YAAY,CAACK,kBAAD,CAAqBD,cAArB,CAAhB,CAAsD,CACpD;AACAN,iBAAiB,CAACM,cAAD,CAAjB,CAEA;AAJoD,yCAKjBF,UALiB,YAKpD,+CAA+C,+CAAnCI,OAAmC,gBAA1BC,SAA0B,gBAC7C,GAAIN,cAAc,CAACK,OAAD,CAAUD,kBAAV,CAA8BD,cAA9B,CAAlB,CAAiE,CAC/D;AACAG,SAAS,GACV,CACF,CAVmD,qDAWrD,CACF","sourcesContent":["import {\r\n  getLastPackageVersion,\r\n  getPackageVersion,\r\n  setPackageVersion,\r\n} from '../local-settings'\r\nimport { clearActivities } from './migrations'\r\nimport { isNewVersion, satisifesRange } from './helper'\r\n\r\nconst MIGRATIONS = [['1.0.0', () => clearActivities()]]\r\n\r\nexport function checkMigrations() {\r\n  const packageVersion = getPackageVersion()\r\n  const lastPackageVersion = getLastPackageVersion()\r\n\r\n  if (isNewVersion(lastPackageVersion, packageVersion)) {\r\n    // Save the current package version\r\n    setPackageVersion(packageVersion)\r\n\r\n    // Run each migration which falls in the range (lastPackageVersion, packageVersion]\r\n    for (const [version, migration] of MIGRATIONS) {\r\n      if (satisifesRange(version, lastPackageVersion, packageVersion)) {\r\n        // Run migration\r\n        migration()\r\n      }\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}