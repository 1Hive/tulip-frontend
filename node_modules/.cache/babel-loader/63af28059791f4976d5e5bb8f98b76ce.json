{"ast":null,"code":"const ws = require('isomorphic-ws');\n\nconst {\n  SubscriptionClient\n} = require('subscriptions-transport-ws');\n\nconst {\n  request,\n  gql\n} = require('graphql-request');\n\nconst {\n  graphAPIEndpoints,\n  graphWSEndpoints\n} = require('./../constants');\n\nconst {\n  timestampToBlock\n} = require('./../utils');\n\nmodule.exports = {\n  async latestBlock() {\n    const result = await request(graphAPIEndpoints.blocklytics, gql`{\n                blocks(first: 1, orderBy: number, orderDirection: desc) {\n                    ${latestBlock.properties.toString()}\n                }\n            }`);\n    return latestBlock.callback(result.blocks);\n  },\n\n  observeLatestBlock() {\n    const query = gql`\n            subscription {\n                blocks(first: 1, orderBy: number, orderDirection: desc) {\n                    ${latestBlock.properties.toString()}\n                }\n        }`;\n    const client = new SubscriptionClient(graphWSEndpoints.blocklytics, {\n      reconnect: true\n    }, ws);\n    const observable = client.request({\n      query\n    });\n    return {\n      subscribe({\n        next,\n        error,\n        complete\n      }) {\n        return observable.subscribe({\n          next(results) {\n            next(latestBlock.callback(results.data.blocks));\n          },\n\n          error,\n          complete\n        });\n      }\n\n    };\n  },\n\n  async getBlock({\n    block = undefined,\n    timestamp = undefined\n  } = {}) {\n    block = block ? block : timestamp ? await timestampToBlock(timestamp) : undefined;\n    block = block ? `block: { number: ${block} }` : \"\";\n    const result = await request(graphAPIEndpoints.blocklytics, gql`{\n                blocks(first: 1, orderBy: number, orderDirection: desc, ${block}) {\n                    ${getBlock.properties.toString()}\n                }\n            }`);\n    return getBlock.callback(result.blocks[0]);\n  }\n\n};\nconst latestBlock = {\n  properties: ['id', 'number', 'timestamp'],\n\n  callback([{\n    id,\n    number,\n    timestamp\n  }]) {\n    return {\n      id: id,\n      number: Number(number),\n      timestamp: Number(timestamp),\n      date: new Date(timestamp * 1000)\n    };\n  }\n\n};\nconst getBlock = {\n  properties: ['id', 'number', 'timestamp', 'author', 'difficulty', 'gasUsed', 'gasLimit'],\n\n  callback(results) {\n    return {\n      id: results.id,\n      number: Number(results.number),\n      timestamp: Number(results.timestamp),\n      author: results.author,\n      difficulty: Number(results.difficulty),\n      gasUsed: Number(results.gasUsed),\n      gasLimit: Number(results.gasLimit)\n    };\n  }\n\n};","map":null,"metadata":{},"sourceType":"script"}