{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _createForOfIteratorHelper = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _awaitAsyncGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar directoryContent = function directoryContent(cid, node, unixfs, path, resolve, depth, ipld, options) {\n  return /*#__PURE__*/function () {\n    var _ref = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var options,\n          offset,\n          length,\n          links,\n          _iterator,\n          _step,\n          link,\n          result,\n          _args = arguments;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              offset = options.offset || 0;\n              length = options.length || node.Links.length;\n              links = node.Links.slice(offset, length);\n              _iterator = _createForOfIteratorHelper(links);\n              _context.prev = 5;\n\n              _iterator.s();\n\n            case 7:\n              if ((_step = _iterator.n()).done) {\n                _context.next = 16;\n                break;\n              }\n\n              link = _step.value;\n              _context.next = 11;\n              return _awaitAsyncGenerator(resolve(link.Hash, link.Name, \"\".concat(path, \"/\").concat(link.Name), [], depth + 1, ipld, options));\n\n            case 11:\n              result = _context.sent;\n              _context.next = 14;\n              return result.entry;\n\n            case 14:\n              _context.next = 7;\n              break;\n\n            case 16:\n              _context.next = 21;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](5);\n\n              _iterator.e(_context.t0);\n\n            case 21:\n              _context.prev = 21;\n\n              _iterator.f();\n\n              return _context.finish(21);\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 18, 21, 24]]);\n    }));\n\n    return function () {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nmodule.exports = directoryContent;","map":null,"metadata":{},"sourceType":"script"}