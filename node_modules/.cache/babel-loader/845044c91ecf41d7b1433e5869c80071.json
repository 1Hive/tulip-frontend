{"ast":null,"code":"import _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/fabianmolina/Documents/1hive/tulip-frontend/src/components/MyWallet/AssetsTable.js\";\nimport React from 'react';\nimport { DataView, GU, textStyle } from '@1hive/1hive-ui';\nimport PairName from '../Farming/PairName';\nimport Fuse from 'fuse.js';\nimport Icon from \"../../assets/tulip/icon.svg\";\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"AssetsTable___StyledDiv\",\n  componentId: \"w6axd7-0\"\n})([\"\", \";font-family:'Overpass',sans-serif;font-weight:300;font-size:18px;\"], p => p._css);\n\nvar _StyledDataView = _styled(DataView).withConfig({\n  displayName: \"AssetsTable___StyledDataView\",\n  componentId: \"w6axd7-1\"\n})([\"border-top:none;\"]);\n\nconst AssetsTable = props => {\n  const assets = props.assets || [];\n  console.log(assets);\n  const fuse = new Fuse(assets, {\n    keys: ['name', 'symbol']\n  });\n  const results = fuse.search(props.searchValue);\n  return /*#__PURE__*/React.createElement(_StyledDiv, {\n    _css: textStyle('body2'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_StyledDataView, {\n    fields: ['Asset', 'Balance', 'Price', 'Value'],\n    emptyState: {\n      default: {\n        displayLoader: false,\n        title: 'Connect your account for getting more information about assets',\n        subtitle: null,\n        illustration: /*#__PURE__*/React.createElement(\"img\", {\n          src: Icon,\n          height: 6 * GU,\n          width: 5.5 * GU,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 27\n          }\n        }),\n        clearLabel: null\n      },\n      loading: {\n        displayLoader: true,\n        title: 'No data available.',\n        subtitle: null,\n        illustration: null,\n        clearLabel: null\n      }\n    },\n    entries: props.searchValue ? results : assets,\n    header: true,\n    renderEntry: ({\n      name,\n      symbol,\n      balance,\n      price,\n      value,\n      image1,\n      image2\n    }) => {\n      const customLabel = name;\n      const imgObj = {\n        pair1: image1,\n        pair2: image2\n      };\n      return [/*#__PURE__*/React.createElement(PairName, {\n        image: imgObj,\n        name: customLabel,\n        subheadline: \"Honeyswap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, balance), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, \"$ \", price), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }, \"$ \", value)];\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default AssetsTable;","map":{"version":3,"sources":["/Users/fabianmolina/Documents/1hive/tulip-frontend/src/components/MyWallet/AssetsTable.js"],"names":["React","DataView","GU","textStyle","PairName","Fuse","AssetsTable","props","assets","console","log","fuse","keys","results","search","searchValue","default","displayLoader","title","subtitle","illustration","Icon","clearLabel","loading","name","symbol","balance","price","value","image1","image2","customLabel","imgObj","pair1","pair2"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,EAAnB,EAAuBC,SAAvB,QAAwC,iBAAxC;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;;;;;;;;;;;;AAGA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAMC,MAAM,GAAGD,KAAK,CAACC,MAAN,IAAgB,EAA/B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,QAAMG,IAAI,GAAG,IAAIN,IAAJ,CAASG,MAAT,EAAiB;AAC5BI,IAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,QAAT;AADsB,GAAjB,CAAb;AAGA,QAAMC,OAAO,GAAGF,IAAI,CAACG,MAAL,CAAYP,KAAK,CAACQ,WAAlB,CAAhB;AAEA,sBACE;AAAA,UAEMZ,SAAS,CAAC,OAAD,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AACE,IAAA,MAAM,EAAE,CAAC,OAAD,EAAU,SAAV,EAAqB,OAArB,EAA8B,OAA9B,CADV;AAKE,IAAA,UAAU,EAAE;AACVa,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,KADR;AAEPC,QAAAA,KAAK,EACH,gEAHK;AAIPC,QAAAA,QAAQ,EAAE,IAJH;AAKPC,QAAAA,YAAY,eAAE;AAAK,UAAA,GAAG,EAAEC,IAAV;AAAgB,UAAA,MAAM,EAAE,IAAInB,EAA5B;AAAgC,UAAA,KAAK,EAAE,MAAMA,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALP;AAMPoB,QAAAA,UAAU,EAAE;AANL,OADC;AASVC,MAAAA,OAAO,EAAE;AACPN,QAAAA,aAAa,EAAE,IADR;AAEPC,QAAAA,KAAK,EAAE,oBAFA;AAGPC,QAAAA,QAAQ,EAAE,IAHH;AAIPC,QAAAA,YAAY,EAAE,IAJP;AAKPE,QAAAA,UAAU,EAAE;AALL;AATC,KALd;AAsBE,IAAA,OAAO,EAAEf,KAAK,CAACQ,WAAN,GAAoBF,OAApB,GAA8BL,MAtBzC;AAuBE,IAAA,MAAM,MAvBR;AAwBE,IAAA,WAAW,EAAE,CAAC;AACZgB,MAAAA,IADY;AAEZC,MAAAA,MAFY;AAGZC,MAAAA,OAHY;AAIZC,MAAAA,KAJY;AAKZC,MAAAA,KALY;AAMZC,MAAAA,MANY;AAOZC,MAAAA;AAPY,KAAD,KAQP;AACJ,YAAMC,WAAW,GAAGP,IAApB;AACA,YAAMQ,MAAM,GAAG;AACbC,QAAAA,KAAK,EAAEJ,MADM;AAEbK,QAAAA,KAAK,EAAEJ;AAFM,OAAf;AAIA,aAAO,cACL,oBAAC,QAAD;AACE,QAAA,KAAK,EAAEE,MADT;AAEE,QAAA,IAAI,EAAED,WAFR;AAGE,QAAA,WAAW,EAAC,WAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,eAML;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIL,OAAJ,CANK,eAOL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAMC,KAAN,CAPK,eAQL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAMC,KAAN,CARK,CAAP;AAUD,KAhDH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AA6DD,CArED;;AAsEA,eAAetB,WAAf","sourcesContent":["import React from 'react'\r\nimport { DataView, GU, textStyle } from '@1hive/1hive-ui'\r\nimport PairName from '../Farming/PairName'\r\nimport Fuse from 'fuse.js'\r\nimport Icon from '../../assets/tulip/icon.svg'\r\n\r\nconst AssetsTable = props => {\r\n  const assets = props.assets || []\r\n  console.log(assets)\r\n  const fuse = new Fuse(assets, {\r\n    keys: ['name', 'symbol'],\r\n  })\r\n  const results = fuse.search(props.searchValue)\r\n\r\n  return (\r\n    <div\r\n      css={`\r\n        ${textStyle('body2')};\r\n        font-family: 'Overpass', sans-serif;\r\n        font-weight: 300;\r\n        font-size: 18px;\r\n      `}\r\n    >\r\n      <DataView\r\n        fields={['Asset', 'Balance', 'Price', 'Value']}\r\n        css={`\r\n          border-top: none;\r\n        `}\r\n        emptyState={{\r\n          default: {\r\n            displayLoader: false,\r\n            title:\r\n              'Connect your account for getting more information about assets',\r\n            subtitle: null,\r\n            illustration: <img src={Icon} height={6 * GU} width={5.5 * GU} />,\r\n            clearLabel: null,\r\n          },\r\n          loading: {\r\n            displayLoader: true,\r\n            title: 'No data available.',\r\n            subtitle: null,\r\n            illustration: null,\r\n            clearLabel: null,\r\n          },\r\n        }}\r\n        entries={props.searchValue ? results : assets}\r\n        header\r\n        renderEntry={({\r\n          name,\r\n          symbol,\r\n          balance,\r\n          price,\r\n          value,\r\n          image1,\r\n          image2,\r\n        }) => {\r\n          const customLabel = name\r\n          const imgObj = {\r\n            pair1: image1,\r\n            pair2: image2,\r\n          }\r\n          return [\r\n            <PairName\r\n              image={imgObj}\r\n              name={customLabel}\r\n              subheadline=\"Honeyswap\"\r\n            />,\r\n            <p>{balance}</p>,\r\n            <p>$ {price}</p>,\r\n            <p>$ {value}</p>,\r\n          ]\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\nexport default AssetsTable\r\n"]},"metadata":{},"sourceType":"module"}