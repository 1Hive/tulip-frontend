{"ast":null,"code":"import toDate from \"../toDate/index.js\";\nimport differenceInCalendarMonths from \"../differenceInCalendarMonths/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport isLastDayOfMonth from \"../isLastDayOfMonth/index.js\";\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight)); // This will check if the date is end of Feb and assign a higher end of month date\n  // to compare it with Jan\n\n  if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n    dateLeft.setDate(30);\n  }\n\n  dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month\n\n  if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {\n    isLastMonthNotFull = false;\n  }\n\n  var result = sign * (difference - isLastMonthNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/node_modules/date-fns/esm/differenceInMonths/index.js"],"names":["toDate","differenceInCalendarMonths","compareAsc","requiredArgs","isLastDayOfMonth","differenceInMonths","dirtyDateLeft","dirtyDateRight","arguments","dateLeft","dateRight","sign","difference","Math","abs","getMonth","getDate","setDate","setMonth","isLastMonthNotFull","result"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,oBAAnB;AACA,OAAOC,0BAAP,MAAuC,wCAAvC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,kBAAT,CAA4BC,aAA5B,EAA2CC,cAA3C,EAA2D;AACxEJ,EAAAA,YAAY,CAAC,CAAD,EAAIK,SAAJ,CAAZ;AACA,MAAIC,QAAQ,GAAGT,MAAM,CAACM,aAAD,CAArB;AACA,MAAII,SAAS,GAAGV,MAAM,CAACO,cAAD,CAAtB;AACA,MAAII,IAAI,GAAGT,UAAU,CAACO,QAAD,EAAWC,SAAX,CAArB;AACA,MAAIE,UAAU,GAAGC,IAAI,CAACC,GAAL,CAASb,0BAA0B,CAACQ,QAAD,EAAWC,SAAX,CAAnC,CAAjB,CALwE,CAKI;AAC5E;;AAEA,MAAID,QAAQ,CAACM,QAAT,OAAwB,CAAxB,IAA6BN,QAAQ,CAACO,OAAT,KAAqB,EAAtD,EAA0D;AACxDP,IAAAA,QAAQ,CAACQ,OAAT,CAAiB,EAAjB;AACD;;AAEDR,EAAAA,QAAQ,CAACS,QAAT,CAAkBT,QAAQ,CAACM,QAAT,KAAsBJ,IAAI,GAAGC,UAA/C,EAZwE,CAYZ;AAC5D;;AAEA,MAAIO,kBAAkB,GAAGjB,UAAU,CAACO,QAAD,EAAWC,SAAX,CAAV,KAAoC,CAACC,IAA9D,CAfwE,CAeJ;;AAEpE,MAAIP,gBAAgB,CAACJ,MAAM,CAACM,aAAD,CAAP,CAAhB,IAA2CM,UAAU,KAAK,CAA1D,IAA+DV,UAAU,CAACI,aAAD,EAAgBI,SAAhB,CAAV,KAAyC,CAA5G,EAA+G;AAC7GS,IAAAA,kBAAkB,GAAG,KAArB;AACD;;AAED,MAAIC,MAAM,GAAGT,IAAI,IAAIC,UAAU,GAAGO,kBAAjB,CAAjB,CArBwE,CAqBjB;;AAEvD,SAAOC,MAAM,KAAK,CAAX,GAAe,CAAf,GAAmBA,MAA1B;AACD","sourcesContent":["import toDate from \"../toDate/index.js\";\nimport differenceInCalendarMonths from \"../differenceInCalendarMonths/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport isLastDayOfMonth from \"../isLastDayOfMonth/index.js\";\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight)); // This will check if the date is end of Feb and assign a higher end of month date\n  // to compare it with Jan\n\n  if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n    dateLeft.setDate(30);\n  }\n\n  dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month\n\n  if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {\n    isLastMonthNotFull = false;\n  }\n\n  var result = sign * (difference - isLastMonthNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}"]},"metadata":{},"sourceType":"module"}