{"ast":null,"code":"'use strict';\n\nconst Store = require('orbit-db-store');\n\nconst KeyValueIndex = require('./KeyValueIndex');\n\nclass KeyValueStore extends Store {\n  constructor(ipfs, id, dbname, options) {\n    let opts = Object.assign({}, {\n      Index: KeyValueIndex\n    });\n    Object.assign(opts, options);\n    super(ipfs, id, dbname, opts);\n    this._type = 'keyvalue';\n  }\n\n  get all() {\n    return this._index._index;\n  }\n\n  get(key) {\n    return this._index.get(key);\n  }\n\n  set(key, data, options = {}) {\n    return this.put(key, data, options);\n  }\n\n  put(key, data, options = {}) {\n    return this._addOperation({\n      op: 'PUT',\n      key: key,\n      value: data\n    }, options);\n  }\n\n  del(key, options = {}) {\n    return this._addOperation({\n      op: 'DEL',\n      key: key,\n      value: null\n    }, options);\n  }\n\n}\n\nmodule.exports = KeyValueStore;","map":null,"metadata":{},"sourceType":"script"}