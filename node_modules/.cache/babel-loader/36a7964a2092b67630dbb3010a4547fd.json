{"ast":null,"code":"'use strict';\n\nvar exp = Math.exp;\n\nexports = module.exports = function MovingAverage(timespan) {\n  if (typeof timespan !== 'number') {\n    throw new Error('must provide a timespan to the moving average constructor');\n  }\n\n  if (timespan <= 0) {\n    throw new Error('must provide a timespan > 0 to the moving average constructor');\n  }\n\n  var ma; // moving average\n\n  var v = 0; // variance\n\n  var d = 0; // deviation\n\n  var f = 0; // forecast\n\n  var previousTime;\n  var ret = {};\n\n  function alpha(t, pt) {\n    return 1 - exp(-(t - pt) / timespan);\n  }\n\n  ret.push = function push(time, value) {\n    if (previousTime) {\n      // calculate moving average\n      var a = alpha(time, previousTime);\n      var diff = value - ma;\n      var incr = a * diff;\n      ma = a * value + (1 - a) * ma; // calculate variance & deviation\n\n      v = (1 - a) * (v + diff * incr);\n      d = Math.sqrt(v); // calculate forecast\n\n      f = ma + a * diff;\n    } else {\n      ma = value;\n    }\n\n    previousTime = time;\n  }; // Exponential Moving Average\n\n\n  ret.movingAverage = function movingAverage() {\n    return ma;\n  }; // Variance\n\n\n  ret.variance = function variance() {\n    return v;\n  };\n\n  ret.deviation = function deviation() {\n    return d;\n  };\n\n  ret.forecast = function forecast() {\n    return f;\n  };\n\n  return ret;\n};","map":null,"metadata":{},"sourceType":"script"}