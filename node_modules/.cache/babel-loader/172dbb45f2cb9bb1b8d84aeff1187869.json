{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar log = require('debug')('ipfs:mfs:utils:update-mfs-root');\n\nvar _require = require('../../../utils'),\n    MFS_ROOT_KEY = _require.MFS_ROOT_KEY;\n\nvar updateMfsRoot = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context, cid) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            log(\"New MFS root will be \".concat(cid));\n            _context.next = 3;\n            return context.repo.datastore.put(MFS_ROOT_KEY, cid.buffer);\n\n          case 3:\n            return _context.abrupt(\"return\", cid);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function updateMfsRoot(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = updateMfsRoot;","map":null,"metadata":{},"sourceType":"script"}