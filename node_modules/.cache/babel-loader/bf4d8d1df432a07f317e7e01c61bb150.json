{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nrequire('./unsupportedIterableToArray-f175acfa.js');\n\nvar toConsumableArray = require('./toConsumableArray-cc0d28a9.js'); // Forward some props of an instance to a child element.\n//\n// Usage example:\n//\n//   <Child {...forwardProps(this, ['name', 'style'])}>\n//\n\n\nfunction forwardProps(instance, names) {\n  return names.reduce(function (props, name) {\n    if (instance.props[name]) {\n      props[name] = instance.props[name];\n    }\n\n    return props;\n  }, {});\n} // Forward the props useful to extend the styles  of the main child of a\n// component, using either styled() or the style attribute. Additionnal names\n// can be passed as a second parameter.\n\n\nfunction stylingProps(instance) {\n  var names = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return forwardProps(instance, ['style', 'className'].concat(toConsumableArray.toConsumableArray(names)));\n}\n\nexports.forwardProps = forwardProps;\nexports.stylingProps = stylingProps;","map":{"version":3,"sources":["../src/utils/components.js"],"names":["instance","props","names","forwardProps"],"mappings":";;;;;;;;oEAAA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAAA,YAAA,CAAA,QAAA,EAAA,KAAA,EAAuC;AAC5C,SAAO,KAAK,CAAL,MAAA,CAAa,UAAA,KAAA,EAAA,IAAA,EAAiB;AACnC,QAAIA,QAAQ,CAARA,KAAAA,CAAJ,IAAIA,CAAJ,EAA0B;AACxBC,MAAAA,KAAK,CAALA,IAAK,CAALA,GAAcD,QAAQ,CAARA,KAAAA,CAAdC,IAAcD,CAAdC;AACD;;AACD,WAAA,KAAA;AAJK,GAAA,EAAP,EAAO,CAAP;AAMD,C,CAAA;AAGD;AACA;;;AACO,SAAA,YAAA,CAAA,QAAA,EAA4C;AAAA,MAAZC,KAAY,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;AACjD,SAAOC,YAAY,CAAA,QAAA,EAAA,CAAA,OAAA,EAAA,WAAA,EAAA,MAAA,CAAA,iBAAA,CAAA,iBAAA,CAAnB,KAAmB,CAAA,CAAA,CAAnB;AACD","sourcesContent":["// Forward some props of an instance to a child element.\n//\n// Usage example:\n//\n//   <Child {...forwardProps(this, ['name', 'style'])}>\n//\nexport function forwardProps(instance, names) {\n  return names.reduce((props, name) => {\n    if (instance.props[name]) {\n      props[name] = instance.props[name]\n    }\n    return props\n  }, {})\n}\n\n// Forward the props useful to extend the styles  of the main child of a\n// component, using either styled() or the style attribute. Additionnal names\n// can be passed as a second parameter.\nexport function stylingProps(instance, names = []) {\n  return forwardProps(instance, ['style', 'className', ...names])\n}\n"]},"metadata":{},"sourceType":"script"}