{"ast":null,"code":"var _jsxFileName = \"/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/contexts/RefreshContext.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FAST_INTERVAL = 10000;\nconst SLOW_INTERVAL = 60000;\nconst RefreshContext = /*#__PURE__*/React.createContext({\n  slow: 0,\n  fast: 0\n}); // This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\n\nconst RefreshContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [slow, setSlow] = useState(0);\n  const [fast, setFast] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast(prev => prev + 1);\n    }, FAST_INTERVAL);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow(prev => prev + 1);\n    }, SLOW_INTERVAL);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(RefreshContext.Provider, {\n    value: {\n      slow,\n      fast\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n\n_s(RefreshContextProvider, \"cT9QgJyi+IhyYo7rlbqSlpPldzs=\");\n\n_c = RefreshContextProvider;\nexport { RefreshContext, RefreshContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"RefreshContextProvider\");","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/contexts/RefreshContext.tsx"],"names":["React","useState","useEffect","FAST_INTERVAL","SLOW_INTERVAL","RefreshContext","createContext","slow","fast","RefreshContextProvider","children","setSlow","setFast","interval","setInterval","prev","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,aAAa,GAAG,KAAtB;AACA,MAAMC,aAAa,GAAG,KAAtB;AAEA,MAAMC,cAAc,gBAAGL,KAAK,CAACM,aAAN,CAAoB;AAAEC,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAApB,CAAvB,C,CAEA;;AACA,MAAMC,sBAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC/C,QAAM,CAACH,IAAD,EAAOI,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACO,IAAD,EAAOI,OAAP,IAAkBX,QAAQ,CAAC,CAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,QAAQ,GAAGC,WAAW,CAAC,YAAY;AACvCF,MAAAA,OAAO,CAAEG,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAP;AACD,KAF2B,EAEzBZ,aAFyB,CAA5B;AAGA,WAAO,MAAMa,aAAa,CAACH,QAAD,CAA1B;AACD,GALQ,EAKN,EALM,CAAT;AAOAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,QAAQ,GAAGC,WAAW,CAAC,YAAY;AACvCH,MAAAA,OAAO,CAAEI,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAP;AACD,KAF2B,EAEzBX,aAFyB,CAA5B;AAGA,WAAO,MAAMY,aAAa,CAACH,QAAD,CAA1B;AACD,GALQ,EAKN,EALM,CAAT;AAOA,sBAAO,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEN,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAhC;AAAA,cAAiDE;AAAjD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAnBD;;GAAMD,sB;;KAAAA,sB;AAqBN,SAASJ,cAAT,EAAyBI,sBAAzB","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n"]},"metadata":{},"sourceType":"module"}