{"ast":null,"code":"var _jsxFileName = \"/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Profile/components/Collectibles.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Heading, Text, Flex, ChevronRightIcon } from '@pancakeswap-libs/uikit';\nimport { Link } from 'react-router-dom';\nimport useI18n from 'hooks/useI18n';\nimport nfts from 'config/constants/nfts';\nimport useGetWalletNfts from 'hooks/useGetWalletNfts';\nimport styled from 'styled-components';\nimport CollectibleCard from './CollectibleCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CollectibleList = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: repeat(2, 1fr);\n  padding: 16px 0;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    grid-gap: 24px;\n    grid-template-columns: repeat(3, 1fr);\n    padding: 24px 0;\n  }\n\n  ${({\n  theme\n}) => theme.mediaQueries.md} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`;\n_c = CollectibleList;\n\nconst Collectibles = () => {\n  _s();\n\n  const TranslateString = useI18n();\n  const {\n    nfts: tokenIdsInWallet\n  } = useGetWalletNfts();\n  const bunnyIds = Object.keys(tokenIdsInWallet).map(nftWalletItem => Number(nftWalletItem));\n  const nftsInWallet = nfts.filter(nft => bunnyIds.includes(nft.bunnyId));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h4\",\n      size: \"md\",\n      mb: \"8px\",\n      children: TranslateString(999, 'Pancake Collectibles')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      as: \"p\",\n      children: TranslateString(999, 'Pancake Collectibles are special ERC-721 NFTs that can be used on the PancakeSwap platform.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      as: \"p\",\n      children: TranslateString(999, \"NFTs in this user's wallet that aren't approved Pancake Collectibles won't be shown here.\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), nftsInWallet.length > 0 && /*#__PURE__*/_jsxDEV(CollectibleList, {\n      children: nftsInWallet.map(nftInWallet => /*#__PURE__*/_jsxDEV(CollectibleCard, {\n        nft: nftInWallet\n      }, nftInWallet.bunnyId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), nftsInWallet.length === 0 && /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      p: \"32px\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"20px\",\n        bold: true,\n        color: \"textDisabled\",\n        children: TranslateString(999, 'No NFTs Found')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/collectibles\",\n        children: TranslateString(999, 'See all approved Pancake Collectibles')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Collectibles, \"PGhX7Kdnx7yOMVuq1DXAqtzeKk0=\", false, function () {\n  return [useI18n, useGetWalletNfts];\n});\n\n_c2 = Collectibles;\nexport default Collectibles;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectibleList\");\n$RefreshReg$(_c2, \"Collectibles\");","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Profile/components/Collectibles.tsx"],"names":["React","Heading","Text","Flex","ChevronRightIcon","Link","useI18n","nfts","useGetWalletNfts","styled","CollectibleCard","CollectibleList","div","theme","mediaQueries","sm","md","lg","Collectibles","TranslateString","tokenIdsInWallet","bunnyIds","Object","keys","map","nftWalletItem","Number","nftsInWallet","filter","nft","includes","bunnyId","length","nftInWallet"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Heading, Text, Flex, ChevronRightIcon } from '@pancakeswap-libs/uikit'\nimport { Link } from 'react-router-dom'\nimport useI18n from 'hooks/useI18n'\nimport nfts from 'config/constants/nfts'\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\nimport styled from 'styled-components'\nimport CollectibleCard from './CollectibleCard'\n\nconst CollectibleList = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: repeat(2, 1fr);\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 24px;\n    grid-template-columns: repeat(3, 1fr);\n    padding: 24px 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`\n\nconst Collectibles = () => {\n  const TranslateString = useI18n()\n  const { nfts: tokenIdsInWallet } = useGetWalletNfts()\n  const bunnyIds = Object.keys(tokenIdsInWallet).map((nftWalletItem) => Number(nftWalletItem))\n  const nftsInWallet = nfts.filter((nft) => bunnyIds.includes(nft.bunnyId))\n\n  return (\n    <>\n      <Heading as=\"h4\" size=\"md\" mb=\"8px\">\n        {TranslateString(999, 'Pancake Collectibles')}\n      </Heading>\n      <Text as=\"p\">\n        {TranslateString(\n          999,\n          'Pancake Collectibles are special ERC-721 NFTs that can be used on the PancakeSwap platform.',\n        )}\n      </Text>\n      <Text as=\"p\">\n        {TranslateString(\n          999,\n          \"NFTs in this user's wallet that aren't approved Pancake Collectibles won't be shown here.\",\n        )}\n      </Text>\n      {nftsInWallet.length > 0 && (\n        <CollectibleList>\n          {nftsInWallet.map((nftInWallet) => (\n            <CollectibleCard key={nftInWallet.bunnyId} nft={nftInWallet} />\n          ))}\n        </CollectibleList>\n      )}\n      {nftsInWallet.length === 0 && (\n        <Flex justifyContent=\"center\" p=\"32px\">\n          <Text fontSize=\"20px\" bold color=\"textDisabled\">\n            {TranslateString(999, 'No NFTs Found')}\n          </Text>\n        </Flex>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n        <Link to=\"/collectibles\">{TranslateString(999, 'See all approved Pancake Collectibles')}</Link>\n        <ChevronRightIcon />\n      </Flex>\n    </>\n  )\n}\n\nexport default Collectibles\n"]},"metadata":{},"sourceType":"module"}