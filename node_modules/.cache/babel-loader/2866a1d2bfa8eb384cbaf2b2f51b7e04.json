{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TranslationsModel = exports.Translations = void 0;\n\nconst core_1 = require(\"../core\");\n\nclass Translations extends core_1.CrowdinApi {\n  /**\n   * @param projectId project identifier\n   * @param request request body\n   */\n  applyPreTranslation(projectId, request) {\n    const url = `${this.url}/projects/${projectId}/pre-translations`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param preTranslationId pre translation identifier\n   */\n\n\n  preTranslationStatus(projectId, preTranslationId) {\n    const url = `${this.url}/projects/${projectId}/pre-translations/${preTranslationId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param fileId file identifier\n   * @param request request body\n   * @param eTag eTag 'If-None-Match' header\n   */\n\n\n  buildProjectFileTranslation(projectId, fileId, request, eTag) {\n    const url = `${this.url}/projects/${projectId}/translations/builds/files/${fileId}`;\n    const config = this.defaultConfig();\n\n    if (!!eTag) {\n      config.headers['If-None-Match'] = eTag;\n    }\n\n    return this.post(url, request, config);\n  }\n  /**\n   * @param projectId project identifier\n   * @param branchId branch identifier\n   * @param limit maximum number of items to retrieve (default 25)\n   * @param offset starting offset in the collection (default 0)\n   */\n\n\n  listProjectBuilds(projectId, branchId, limit, offset) {\n    let url = `${this.url}/projects/${projectId}/translations/builds`;\n    url = this.addQueryParam(url, 'branchId', branchId);\n    return this.getList(url, limit, offset);\n  }\n  /**\n   * @param projectId project identifier\n   * @param request request body\n   */\n\n\n  buildProject(projectId, request = {}) {\n    const url = `${this.url}/projects/${projectId}/translations/builds`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param buildId build identifier\n   */\n\n\n  downloadTranslations(projectId, buildId) {\n    const url = `${this.url}/projects/${projectId}/translations/builds/${buildId}/download`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param buildId build identifier\n   */\n\n\n  checkBuildStatus(projectId, buildId) {\n    const url = `${this.url}/projects/${projectId}/translations/builds/${buildId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param buildId build identifier\n   */\n\n\n  cancelBuild(projectId, buildId) {\n    const url = `${this.url}/projects/${projectId}/translations/builds/${buildId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param languageId language identifier\n   * @param request request body\n   */\n\n\n  uploadTranslation(projectId, languageId, request) {\n    const url = `${this.url}/projects/${projectId}/translations/${languageId}`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param request request body\n   */\n\n\n  exportProjectTranslation(projectId, request) {\n    const url = `${this.url}/projects/${projectId}/translations/exports`;\n    return this.post(url, request, this.defaultConfig());\n  }\n\n}\n\nexports.Translations = Translations;\nvar TranslationsModel;\n\n(function (TranslationsModel) {\n  let Method;\n\n  (function (Method) {\n    Method[\"TM\"] = \"tm\";\n    Method[\"MT\"] = \"mt\";\n  })(Method = TranslationsModel.Method || (TranslationsModel.Method = {}));\n\n  let AutoApproveOption;\n\n  (function (AutoApproveOption) {\n    AutoApproveOption[\"ALL\"] = \"all\";\n    AutoApproveOption[\"EXCEPT_AUTO_SUBSTITUTED\"] = \"exceptAutoSubstituted\";\n    AutoApproveOption[\"PERFECT_MATCH_ONLY\"] = \"perfectMatchOnly\";\n    AutoApproveOption[\"NONE\"] = \"none\";\n  })(AutoApproveOption = TranslationsModel.AutoApproveOption || (TranslationsModel.AutoApproveOption = {}));\n\n  let CharTransformation;\n\n  (function (CharTransformation) {\n    CharTransformation[\"ASIAN\"] = \"asian\";\n    CharTransformation[\"EUROPEAN\"] = \"european\";\n    CharTransformation[\"ARABIC\"] = \"arabic\";\n    CharTransformation[\"CYRILLIC\"] = \"cyrillic\";\n  })(CharTransformation = TranslationsModel.CharTransformation || (TranslationsModel.CharTransformation = {}));\n})(TranslationsModel = exports.TranslationsModel || (exports.TranslationsModel = {}));","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/node_modules/@crowdin/crowdin-api-client/out/translations/index.js"],"names":["Object","defineProperty","exports","value","TranslationsModel","Translations","core_1","require","CrowdinApi","applyPreTranslation","projectId","request","url","post","defaultConfig","preTranslationStatus","preTranslationId","get","buildProjectFileTranslation","fileId","eTag","config","headers","listProjectBuilds","branchId","limit","offset","addQueryParam","getList","buildProject","downloadTranslations","buildId","checkBuildStatus","cancelBuild","delete","uploadTranslation","languageId","exportProjectTranslation","Method","AutoApproveOption","CharTransformation"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationsModel = exports.Translations = void 0;\nconst core_1 = require(\"../core\");\nclass Translations extends core_1.CrowdinApi {\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    applyPreTranslation(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/pre-translations`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param preTranslationId pre translation identifier\n     */\n    preTranslationStatus(projectId, preTranslationId) {\n        const url = `${this.url}/projects/${projectId}/pre-translations/${preTranslationId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     * @param request request body\n     * @param eTag eTag 'If-None-Match' header\n     */\n    buildProjectFileTranslation(projectId, fileId, request, eTag) {\n        const url = `${this.url}/projects/${projectId}/translations/builds/files/${fileId}`;\n        const config = this.defaultConfig();\n        if (!!eTag) {\n            config.headers['If-None-Match'] = eTag;\n        }\n        return this.post(url, request, config);\n    }\n    /**\n     * @param projectId project identifier\n     * @param branchId branch identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    listProjectBuilds(projectId, branchId, limit, offset) {\n        let url = `${this.url}/projects/${projectId}/translations/builds`;\n        url = this.addQueryParam(url, 'branchId', branchId);\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    buildProject(projectId, request = {}) {\n        const url = `${this.url}/projects/${projectId}/translations/builds`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param buildId build identifier\n     */\n    downloadTranslations(projectId, buildId) {\n        const url = `${this.url}/projects/${projectId}/translations/builds/${buildId}/download`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param buildId build identifier\n     */\n    checkBuildStatus(projectId, buildId) {\n        const url = `${this.url}/projects/${projectId}/translations/builds/${buildId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param buildId build identifier\n     */\n    cancelBuild(projectId, buildId) {\n        const url = `${this.url}/projects/${projectId}/translations/builds/${buildId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param languageId language identifier\n     * @param request request body\n     */\n    uploadTranslation(projectId, languageId, request) {\n        const url = `${this.url}/projects/${projectId}/translations/${languageId}`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    exportProjectTranslation(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/translations/exports`;\n        return this.post(url, request, this.defaultConfig());\n    }\n}\nexports.Translations = Translations;\nvar TranslationsModel;\n(function (TranslationsModel) {\n    let Method;\n    (function (Method) {\n        Method[\"TM\"] = \"tm\";\n        Method[\"MT\"] = \"mt\";\n    })(Method = TranslationsModel.Method || (TranslationsModel.Method = {}));\n    let AutoApproveOption;\n    (function (AutoApproveOption) {\n        AutoApproveOption[\"ALL\"] = \"all\";\n        AutoApproveOption[\"EXCEPT_AUTO_SUBSTITUTED\"] = \"exceptAutoSubstituted\";\n        AutoApproveOption[\"PERFECT_MATCH_ONLY\"] = \"perfectMatchOnly\";\n        AutoApproveOption[\"NONE\"] = \"none\";\n    })(AutoApproveOption = TranslationsModel.AutoApproveOption || (TranslationsModel.AutoApproveOption = {}));\n    let CharTransformation;\n    (function (CharTransformation) {\n        CharTransformation[\"ASIAN\"] = \"asian\";\n        CharTransformation[\"EUROPEAN\"] = \"european\";\n        CharTransformation[\"ARABIC\"] = \"arabic\";\n        CharTransformation[\"CYRILLIC\"] = \"cyrillic\";\n    })(CharTransformation = TranslationsModel.CharTransformation || (TranslationsModel.CharTransformation = {}));\n})(TranslationsModel = exports.TranslationsModel || (exports.TranslationsModel = {}));\n"]},"metadata":{},"sourceType":"script"}