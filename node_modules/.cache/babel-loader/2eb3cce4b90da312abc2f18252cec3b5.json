{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.asymDecrypt = exports.asymEncrypt = exports.symDecryptBase = exports.symEncryptBase = exports.randomNonce = exports.naclRandom = void 0;\n\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\n\nconst tweetnacl_util_1 = __importDefault(require(\"tweetnacl-util\"));\n\nfunction naclRandom(length) {\n  return tweetnacl_1.default.randomBytes(length);\n}\n\nexports.naclRandom = naclRandom;\n\nfunction randomNonce() {\n  return naclRandom(24);\n}\n\nexports.randomNonce = randomNonce;\n\nfunction symEncryptBase(message, symKey, providedNonce) {\n  const nonce = providedNonce !== null && providedNonce !== void 0 ? providedNonce : randomNonce();\n  const msg = typeof message === 'string' ? tweetnacl_util_1.default.decodeUTF8(message) : message;\n  const ciphertext = tweetnacl_1.default.secretbox(msg, nonce, symKey);\n  return {\n    nonce: tweetnacl_util_1.default.encodeBase64(nonce),\n    ciphertext: tweetnacl_util_1.default.encodeBase64(ciphertext)\n  };\n}\n\nexports.symEncryptBase = symEncryptBase;\n\nfunction symDecryptBase(ciphertext, symKey, nonce, toBuffer = false) {\n  const cleartext = tweetnacl_1.default.secretbox.open(tweetnacl_util_1.default.decodeBase64(ciphertext), tweetnacl_util_1.default.decodeBase64(nonce), symKey);\n\n  if (cleartext == null) {\n    return null;\n  }\n\n  return toBuffer ? Buffer.from(cleartext) : tweetnacl_util_1.default.encodeUTF8(cleartext);\n}\n\nexports.symDecryptBase = symDecryptBase;\n\nfunction asymEncrypt(message, toPublic, providedNonce) {\n  const nonce = providedNonce !== null && providedNonce !== void 0 ? providedNonce : randomNonce();\n  const msg = typeof message === 'string' ? tweetnacl_util_1.default.decodeUTF8(message) : message;\n  const ephemneralKeypair = tweetnacl_1.default.box.keyPair();\n  const ciphertext = tweetnacl_1.default.box(msg, nonce, tweetnacl_util_1.default.decodeBase64(toPublic), ephemneralKeypair.secretKey);\n  return {\n    nonce: tweetnacl_util_1.default.encodeBase64(nonce),\n    ephemeralFrom: tweetnacl_util_1.default.encodeBase64(ephemneralKeypair.publicKey),\n    ciphertext: tweetnacl_util_1.default.encodeBase64(ciphertext)\n  };\n}\n\nexports.asymEncrypt = asymEncrypt;\n\nfunction asymDecrypt(ciphertext, fromPublic, toSecret, nonce, toBuffer) {\n  const cleartext = tweetnacl_1.default.box.open(tweetnacl_util_1.default.decodeBase64(ciphertext), tweetnacl_util_1.default.decodeBase64(nonce), tweetnacl_util_1.default.decodeBase64(fromPublic), toSecret);\n\n  if (cleartext == null) {\n    return null;\n  }\n\n  return toBuffer ? Buffer.from(cleartext) : tweetnacl_util_1.default.encodeUTF8(cleartext);\n}\n\nexports.asymDecrypt = asymDecrypt;","map":null,"metadata":{},"sourceType":"script"}