{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar DAGLink = require('../dag-link/dagLink');\n\nvar genCid = require('../genCid');\n/*\n * toDAGLink converts a DAGNode to a DAGLink\n */\n\n\nvar toDAGLink = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(node) {\n    var options,\n        nodeCid,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            _context.next = 3;\n            return genCid.cid(node.serialize(), options);\n\n          case 3:\n            nodeCid = _context.sent;\n            return _context.abrupt(\"return\", new DAGLink(options.name || '', node.size, nodeCid));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function toDAGLink(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = toDAGLink;","map":null,"metadata":{},"sourceType":"script"}