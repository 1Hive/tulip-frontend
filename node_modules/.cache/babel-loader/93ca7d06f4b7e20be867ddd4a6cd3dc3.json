{"ast":null,"code":"import _slicedToArray from\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _styled3 from\"styled-components\";import _styled2 from\"styled-components\";import _styled from\"styled-components\";import React,{useState}from'react';import{DataView,textStyle,Button}from'@1hive/1hive-ui';import Loading from'../../Loading';import{getKnownTokenImg}from'../../../utils/known-tokens';import PairName from'../PairName';import RewardComponent from'../RewardComponent';import Fuse from'fuse.js';import DepositModal from'../DepositModal';var _StyledDiv=_styled(\"div\").withConfig({displayName:\"FarmTable___StyledDiv\",componentId:\"flmx2u-0\"})([\"\",\";font-family:'Overpass',sans-serif;font-weight:300;font-size:18px;\"],function(p){return p._css;});var _StyledDataView=_styled(DataView).withConfig({displayName:\"FarmTable___StyledDataView\",componentId:\"flmx2u-1\"})([\"border-top:none;\"]);var _StyledButton=_styled(Button).withConfig({displayName:\"FarmTable___StyledButton\",componentId:\"flmx2u-2\"})([\"background:linear-gradient(90deg,#aaf5d4,#7ce0d6);\"]);var FarmTable=function FarmTable(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),modalAction=_useState2[0],setModalAction=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),modalData=_useState4[0],setModalData=_useState4[1];var pairs=props.pairData||[];console.log(pairs);var fuse=new Fuse(pairs,{keys:['name','symbol']});var results=fuse.search(props.searchValue);var handleModalActions=function handleModalActions(){setModalAction(true);};var handleModalClose=function handleModalClose(){setModalAction(false);};if(pairs.length===0){return/*#__PURE__*/React.createElement(Loading,null);}else{return/*#__PURE__*/React.createElement(_StyledDiv,{_css:textStyle('body2')},/*#__PURE__*/React.createElement(_StyledDataView,{fields:['Asset','Base Yield','Reward Yield','Total Yield','Reward Asset',' '],emptyState:{default:{displayLoader:false,title:'Getting Pools',subtitle:null,illustration:/*#__PURE__*/React.createElement(Loading,null),clearLabel:null},loading:{displayLoader:true,title:'No data available.',subtitle:null,illustration:/*#__PURE__*/React.createElement(\"img\",{src:\"https://i1.wp.com/www.cssscript.com/wp-content/uploads/2014/10/iOS-OS-X-Style-Pure-CSS-Loading-Spinner.jpg?fit=400%2C300&ssl=1\",alt:\"\"}),clearLabel:null}},entries:props.searchValue?results:pairs,header:true,renderEntry:function renderEntry(_ref){var name=_ref.name,symbol=_ref.symbol,poolToken=_ref.poolToken,totalShares=_ref.totalShares,lastRewardTimestamp=_ref.lastRewardTimestamp,allocPoint=_ref.allocPoint,accHsfPerShare=_ref.accHsfPerShare;var customLabel=name;var baseYield=23;var rewardYield=parseInt(baseYield*2);var totalYield=parseInt(baseYield+rewardYield);var token0Img=getKnownTokenImg(symbol);var token1Img=getKnownTokenImg(null);var imgObj={pair1:token0Img,pair2:token1Img};console.log(imgObj);return[/*#__PURE__*/React.createElement(PairName,{image:imgObj,name:customLabel,subheadline:\"Honeyswap\"}),/*#__PURE__*/React.createElement(\"p\",null,baseYield,\"%\"),/*#__PURE__*/React.createElement(\"p\",null,rewardYield,\"%\"),/*#__PURE__*/React.createElement(\"p\",null,totalYield,\"%\"),/*#__PURE__*/React.createElement(RewardComponent,{image:getKnownTokenImg('AG'),name:\"Agave\"}),/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(_StyledButton,{id:symbol,label:\"Stake\",onClick:function onClick(e){handleModalActions();console.log(e.target.id);setModalData(e.target.id);}}),/*#__PURE__*/React.createElement(DepositModal,{modalAction:modalAction,handleModalClose:handleModalClose,tokenImg:imgObj,data:modalData}))];}}));}};export default FarmTable;","map":{"version":3,"sources":["/Users/fabianmolina/Documents/1hive/tulip-frontend/src/components/Farming/FarmTable/index.js"],"names":["React","useState","DataView","textStyle","Button","Loading","getKnownTokenImg","PairName","RewardComponent","Fuse","DepositModal","FarmTable","props","modalAction","setModalAction","modalData","setModalData","pairs","pairData","console","log","fuse","keys","results","search","searchValue","handleModalActions","handleModalClose","length","default","displayLoader","title","subtitle","illustration","clearLabel","loading","name","symbol","poolToken","totalShares","lastRewardTimestamp","allocPoint","accHsfPerShare","customLabel","baseYield","rewardYield","parseInt","totalYield","token0Img","token1Img","imgObj","pair1","pair2","e","target","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { DataView, textStyle, Button } from '@1hive/1hive-ui'\nimport Loading from '../../Loading'\nimport { getKnownTokenImg } from '../../../utils/known-tokens'\nimport PairName from '../PairName'\nimport RewardComponent from '../RewardComponent'\nimport Fuse from 'fuse.js'\nimport DepositModal from '../DepositModal'\n\nconst FarmTable = props => {\n  const [modalAction, setModalAction] = useState(false)\n  const [modalData, setModalData] = useState('')\n  const pairs = props.pairData || []\n  console.log(pairs)\n  const fuse = new Fuse(pairs, {\n    keys: ['name', 'symbol'],\n  })\n  const results = fuse.search(props.searchValue)\n\n  const handleModalActions = () => {\n    setModalAction(true)\n  }\n  const handleModalClose = () => {\n    setModalAction(false)\n  }\n\n  if (pairs.length === 0) {\n    return <Loading />\n  } else {\n    return (\n      <div\n        css={`\n          ${textStyle('body2')};\n          font-family: 'Overpass', sans-serif;\n          font-weight: 300;\n          font-size: 18px;\n        `}\n      >\n        <DataView\n          fields={[\n            'Asset',\n            'Base Yield',\n            'Reward Yield',\n            'Total Yield',\n            'Reward Asset',\n            ' ',\n          ]}\n          css={`\n            border-top: none;\n          `}\n          emptyState={{\n            default: {\n              displayLoader: false,\n              title: 'Getting Pools',\n              subtitle: null,\n              illustration: <Loading />,\n              clearLabel: null,\n            },\n            loading: {\n              displayLoader: true,\n              title: 'No data available.',\n              subtitle: null,\n              illustration: (\n                <img\n                  src=\"https://i1.wp.com/www.cssscript.com/wp-content/uploads/2014/10/iOS-OS-X-Style-Pure-CSS-Loading-Spinner.jpg?fit=400%2C300&ssl=1\"\n                  alt=\"\"\n                />\n              ),\n              clearLabel: null,\n            },\n          }}\n          entries={props.searchValue ? results : pairs}\n          header\n          renderEntry={({\n            name,\n            symbol,\n            poolToken,\n            totalShares,\n            lastRewardTimestamp,\n            allocPoint,\n            accHsfPerShare,\n          }) => {\n            const customLabel = name\n            const baseYield = 23\n            const rewardYield = parseInt(baseYield * 2)\n            const totalYield = parseInt(baseYield + rewardYield)\n            const token0Img = getKnownTokenImg(symbol)\n            const token1Img = getKnownTokenImg(null)\n            const imgObj = {\n              pair1: token0Img,\n              pair2: token1Img,\n            }\n            console.log(imgObj)\n            return [\n              <PairName\n                image={imgObj}\n                name={customLabel}\n                subheadline=\"Honeyswap\"\n              />,\n              <p>{baseYield}%</p>,\n              <p>{rewardYield}%</p>,\n              <p>{totalYield}%</p>,\n              <RewardComponent image={getKnownTokenImg('AG')} name=\"Agave\" />,\n              <React.Fragment>\n                <Button\n                  css={`\n                    background: linear-gradient(90deg, #aaf5d4, #7ce0d6);\n                  `}\n                  id={symbol}\n                  label=\"Stake\"\n                  onClick={e => {\n                    handleModalActions()\n                    console.log(e.target.id)\n                    setModalData(e.target.id)\n                  }}\n                />\n                <DepositModal\n                  modalAction={modalAction}\n                  handleModalClose={handleModalClose}\n                  tokenImg={imgObj}\n                  data={modalData}\n                />\n              </React.Fragment>,\n            ]\n          }}\n        />\n      </div>\n    )\n  }\n}\nexport default FarmTable\n"]},"metadata":{},"sourceType":"module"}