{"ast":null,"code":"import Web3 from 'web3';\nimport getRpcUrl from 'utils/getRpcUrl';\nconst RPC_URL = getRpcUrl();\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, {\n  timeout: 10000\n});\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\n\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider);\n  return web3;\n};\n\nconst getContract = (abi, address, contractOptions) => {\n  const web3 = getWeb3();\n  return new web3.eth.Contract(abi, address, contractOptions);\n};\n\nexport { getWeb3, getContract, httpProvider };","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/utils/web3.ts"],"names":["Web3","getRpcUrl","RPC_URL","httpProvider","providers","HttpProvider","timeout","getWeb3","web3","getContract","abi","address","contractOptions","eth","Contract"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAIA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,MAAMC,OAAO,GAAGD,SAAS,EAAzB;AACA,MAAME,YAAY,GAAG,IAAIH,IAAI,CAACI,SAAL,CAAeC,YAAnB,CAAgCH,OAAhC,EAAyC;AAAEI,EAAAA,OAAO,EAAE;AAAX,CAAzC,CAArB;AAEA;AACA;AACA;;AACA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAMC,IAAI,GAAG,IAAIR,IAAJ,CAASG,YAAT,CAAb;AACA,SAAOK,IAAP;AACD,CAHD;;AAIA,MAAMC,WAAW,GAAG,CAACC,GAAD,EAAWC,OAAX,EAA4BC,eAA5B,KAAkE;AACpF,QAAMJ,IAAI,GAAGD,OAAO,EAApB;AACA,SAAO,IAAIC,IAAI,CAACK,GAAL,CAASC,QAAb,CAAuBJ,GAAvB,EAAmDC,OAAnD,EAA4DC,eAA5D,CAAP;AACD,CAHD;;AAKA,SAASL,OAAT,EAAkBE,WAAlB,EAA+BN,YAA/B","sourcesContent":["import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n"]},"metadata":{},"sourceType":"module"}