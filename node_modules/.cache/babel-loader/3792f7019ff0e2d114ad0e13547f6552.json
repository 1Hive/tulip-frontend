{"ast":null,"code":"// cookieStorage is useful Safari private browser mode, where localStorage\n// doesn't work but cookies do. This implementation is adopted from\n// https://developer.mozilla.org/en-US/docs/Web/API/Storage/LocalStorage\nvar util = require('../src/util');\n\nvar Global = util.Global;\nvar trim = util.trim;\nmodule.exports = {\n  name: 'cookieStorage',\n  read: read,\n  write: write,\n  each: each,\n  remove: remove,\n  clearAll: clearAll\n};\nvar doc = Global.document;\n\nfunction read(key) {\n  if (!key || !_has(key)) {\n    return null;\n  }\n\n  var regexpStr = \"(?:^|.*;\\\\s*)\" + escape(key).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\";\n  return unescape(doc.cookie.replace(new RegExp(regexpStr), \"$1\"));\n}\n\nfunction each(callback) {\n  var cookies = doc.cookie.split(/; ?/g);\n\n  for (var i = cookies.length - 1; i >= 0; i--) {\n    if (!trim(cookies[i])) {\n      continue;\n    }\n\n    var kvp = cookies[i].split('=');\n    var key = unescape(kvp[0]);\n    var val = unescape(kvp[1]);\n    callback(val, key);\n  }\n}\n\nfunction write(key, data) {\n  if (!key) {\n    return;\n  }\n\n  doc.cookie = escape(key) + \"=\" + escape(data) + \"; expires=Tue, 19 Jan 2038 03:14:07 GMT; path=/\";\n}\n\nfunction remove(key) {\n  if (!key || !_has(key)) {\n    return;\n  }\n\n  doc.cookie = escape(key) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/\";\n}\n\nfunction clearAll() {\n  each(function (_, key) {\n    remove(key);\n  });\n}\n\nfunction _has(key) {\n  return new RegExp(\"(?:^|;\\\\s*)\" + escape(key).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\").test(doc.cookie);\n}","map":null,"metadata":{},"sourceType":"script"}