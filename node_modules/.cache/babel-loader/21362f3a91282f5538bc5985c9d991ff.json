{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _awaitAsyncGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar BufferList = require('bl/BufferList');\n\nmodule.exports = /*#__PURE__*/function () {\n  var _ref = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(source) {\n    var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, b;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _context.prev = 2;\n            _iterator = _asyncIterator(source);\n\n          case 4:\n            _context.next = 6;\n            return _awaitAsyncGenerator(_iterator.next());\n\n          case 6:\n            _step = _context.sent;\n            _iteratorNormalCompletion = _step.done;\n            _context.next = 10;\n            return _awaitAsyncGenerator(_step.value);\n\n          case 10:\n            _value = _context.sent;\n\n            if (_iteratorNormalCompletion) {\n              _context.next = 28;\n              break;\n            }\n\n            b = _value;\n\n            if (!Buffer.isBuffer(b)) {\n              _context.next = 18;\n              break;\n            }\n\n            _context.next = 16;\n            return b;\n\n          case 16:\n            _context.next = 25;\n            break;\n\n          case 18:\n            if (!BufferList.isBufferList(b)) {\n              _context.next = 23;\n              break;\n            }\n\n            _context.next = 21;\n            return b.slice();\n\n          case 21:\n            _context.next = 25;\n            break;\n\n          case 23:\n            _context.next = 25;\n            return Buffer.from(b);\n\n          case 25:\n            _iteratorNormalCompletion = true;\n            _context.next = 4;\n            break;\n\n          case 28:\n            _context.next = 34;\n            break;\n\n          case 30:\n            _context.prev = 30;\n            _context.t0 = _context[\"catch\"](2);\n            _didIteratorError = true;\n            _iteratorError = _context.t0;\n\n          case 34:\n            _context.prev = 34;\n            _context.prev = 35;\n\n            if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n              _context.next = 39;\n              break;\n            }\n\n            _context.next = 39;\n            return _awaitAsyncGenerator(_iterator.return());\n\n          case 39:\n            _context.prev = 39;\n\n            if (!_didIteratorError) {\n              _context.next = 42;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 42:\n            return _context.finish(39);\n\n          case 43:\n            return _context.finish(34);\n\n          case 44:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 30, 34, 44], [35,, 39, 43]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports.toBuffer = module.exports;\n\nmodule.exports.toList = /*#__PURE__*/function () {\n  var _ref2 = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(source) {\n    var _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _value2, b;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _iteratorNormalCompletion2 = true;\n            _didIteratorError2 = false;\n            _context2.prev = 2;\n            _iterator2 = _asyncIterator(source);\n\n          case 4:\n            _context2.next = 6;\n            return _awaitAsyncGenerator(_iterator2.next());\n\n          case 6:\n            _step2 = _context2.sent;\n            _iteratorNormalCompletion2 = _step2.done;\n            _context2.next = 10;\n            return _awaitAsyncGenerator(_step2.value);\n\n          case 10:\n            _value2 = _context2.sent;\n\n            if (_iteratorNormalCompletion2) {\n              _context2.next = 28;\n              break;\n            }\n\n            b = _value2;\n\n            if (!Buffer.isBuffer(b)) {\n              _context2.next = 18;\n              break;\n            }\n\n            _context2.next = 16;\n            return new BufferList().append(b);\n\n          case 16:\n            _context2.next = 25;\n            break;\n\n          case 18:\n            if (!BufferList.isBufferList(b)) {\n              _context2.next = 23;\n              break;\n            }\n\n            _context2.next = 21;\n            return b;\n\n          case 21:\n            _context2.next = 25;\n            break;\n\n          case 23:\n            _context2.next = 25;\n            return new BufferList().append(Buffer.from(b));\n\n          case 25:\n            _iteratorNormalCompletion2 = true;\n            _context2.next = 4;\n            break;\n\n          case 28:\n            _context2.next = 34;\n            break;\n\n          case 30:\n            _context2.prev = 30;\n            _context2.t0 = _context2[\"catch\"](2);\n            _didIteratorError2 = true;\n            _iteratorError2 = _context2.t0;\n\n          case 34:\n            _context2.prev = 34;\n            _context2.prev = 35;\n\n            if (!(!_iteratorNormalCompletion2 && _iterator2.return != null)) {\n              _context2.next = 39;\n              break;\n            }\n\n            _context2.next = 39;\n            return _awaitAsyncGenerator(_iterator2.return());\n\n          case 39:\n            _context2.prev = 39;\n\n            if (!_didIteratorError2) {\n              _context2.next = 42;\n              break;\n            }\n\n            throw _iteratorError2;\n\n          case 42:\n            return _context2.finish(39);\n\n          case 43:\n            return _context2.finish(34);\n\n          case 44:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 30, 34, 44], [35,, 39, 43]]);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"script"}