{"ast":null,"code":"import Web3 from 'web3';\nimport erc20 from 'config/abi/erc20.json';\nexport const getContract = (provider, address) => {\n  const web3 = new Web3(provider);\n  const contract = new web3.eth.Contract(erc20, address);\n  return contract;\n};\nexport const getAllowance = async (lpContract, masterChefContract, account) => {\n  try {\n    const allowance = await lpContract.methods.allowance(account, masterChefContract.options.address).call();\n    return allowance;\n  } catch (e) {\n    return '0';\n  }\n};\nexport const getTokenBalance = async (provider, tokenAddress, userAddress) => {\n  const contract = getContract(provider, tokenAddress);\n\n  try {\n    const balance = await contract.methods.balanceOf(userAddress).call();\n    return balance;\n  } catch (e) {\n    return '0';\n  }\n};","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/utils/erc20.ts"],"names":["Web3","erc20","getContract","provider","address","web3","contract","eth","Contract","getAllowance","lpContract","masterChefContract","account","allowance","methods","options","call","e","getTokenBalance","tokenAddress","userAddress","balance","balanceOf"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAIA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,QAAD,EAAyBC,OAAzB,KAA6C;AACtE,QAAMC,IAAI,GAAG,IAAIL,IAAJ,CAASG,QAAT,CAAb;AACA,QAAMG,QAAQ,GAAG,IAAID,IAAI,CAACE,GAAL,CAASC,QAAb,CAAuBP,KAAvB,EAAqDG,OAArD,CAAjB;AACA,SAAOE,QAAP;AACD,CAJM;AAMP,OAAO,MAAMG,YAAY,GAAG,OAC1BC,UAD0B,EAE1BC,kBAF0B,EAG1BC,OAH0B,KAIN;AACpB,MAAI;AACF,UAAMC,SAAiB,GAAG,MAAMH,UAAU,CAACI,OAAX,CAAmBD,SAAnB,CAA6BD,OAA7B,EAAsCD,kBAAkB,CAACI,OAAnB,CAA2BX,OAAjE,EAA0EY,IAA1E,EAAhC;AACA,WAAOH,SAAP;AACD,GAHD,CAGE,OAAOI,CAAP,EAAU;AACV,WAAO,GAAP;AACD;AACF,CAXM;AAaP,OAAO,MAAMC,eAAe,GAAG,OAC7Bf,QAD6B,EAE7BgB,YAF6B,EAG7BC,WAH6B,KAIT;AACpB,QAAMd,QAAQ,GAAGJ,WAAW,CAACC,QAAD,EAAWgB,YAAX,CAA5B;;AACA,MAAI;AACF,UAAME,OAAe,GAAG,MAAMf,QAAQ,CAACQ,OAAT,CAAiBQ,SAAjB,CAA2BF,WAA3B,EAAwCJ,IAAxC,EAA9B;AACA,WAAOK,OAAP;AACD,GAHD,CAGE,OAAOJ,CAAP,EAAU;AACV,WAAO,GAAP;AACD;AACF,CAZM","sourcesContent":["import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n"]},"metadata":{},"sourceType":"module"}