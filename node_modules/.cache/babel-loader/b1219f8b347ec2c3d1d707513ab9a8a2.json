{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _require = require('../utils'),\n    withTimeoutOption = _require.withTimeoutOption;\n\nvar errCode = require('err-code');\n\nmodule.exports = function (_ref) {\n  var libp2p = _ref.libp2p;\n  return {\n    subscribe: withTimeoutOption(function () {\n      var _libp2p$pubsub;\n\n      return (_libp2p$pubsub = libp2p.pubsub).subscribe.apply(_libp2p$pubsub, arguments);\n    }),\n    unsubscribe: withTimeoutOption(function () {\n      var _libp2p$pubsub2;\n\n      return (_libp2p$pubsub2 = libp2p.pubsub).unsubscribe.apply(_libp2p$pubsub2, arguments);\n    }),\n    publish: withTimeoutOption( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(topic, data, options) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (data) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw errCode(new Error('argument \"data\" is required'), 'ERR_ARG_REQUIRED');\n\n              case 2:\n                _context.next = 4;\n                return libp2p.pubsub.publish(topic, data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2, _x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }()),\n    ls: withTimeoutOption(function () {\n      var _libp2p$pubsub3;\n\n      return (_libp2p$pubsub3 = libp2p.pubsub).getTopics.apply(_libp2p$pubsub3, arguments);\n    }),\n    peers: withTimeoutOption(function () {\n      var _libp2p$pubsub4;\n\n      return (_libp2p$pubsub4 = libp2p.pubsub).getSubscribers.apply(_libp2p$pubsub4, arguments);\n    })\n  };\n};","map":null,"metadata":{},"sourceType":"script"}