{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar mh = require('multihashing-async');\n\nvar CID = require('cids');\n\nvar persist = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(buffer, block, options) {\n    var multihash, cid;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!options.codec) {\n              options.codec = 'dag-pb';\n            }\n\n            if (!options.cidVersion) {\n              options.cidVersion = 0;\n            }\n\n            if (!options.hashAlg) {\n              options.hashAlg = 'sha2-256';\n            }\n\n            if (options.hashAlg !== 'sha2-256') {\n              options.cidVersion = 1;\n            }\n\n            _context.next = 6;\n            return mh(buffer, options.hashAlg);\n\n          case 6:\n            multihash = _context.sent;\n            cid = new CID(options.cidVersion, options.codec, multihash);\n\n            if (options.onlyHash) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 11;\n            return block.put(buffer, _objectSpread(_objectSpread({}, options), {}, {\n              cid: cid\n            }));\n\n          case 11:\n            return _context.abrupt(\"return\", cid);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function persist(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = persist;","map":null,"metadata":{},"sourceType":"script"}