{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar pageResults = require('graph-results-pager');\n\nvar _require = require('./../constants'),\n    graphAPIEndpoints = _require.graphAPIEndpoints;\n\nvar _require2 = require('./../utils'),\n    timestampToBlock = _require2.timestampToBlock;\n\nmodule.exports = {\n  queuedTxs: function queuedTxs() {\n    var _arguments = arguments;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _ref, _ref$minTimestamp, minTimestamp, _ref$maxTimestamp, maxTimestamp, _ref$minBlock, minBlock, _ref$maxBlock, maxBlock, _ref$max, max;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _ref = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : {}, _ref$minTimestamp = _ref.minTimestamp, minTimestamp = _ref$minTimestamp === void 0 ? undefined : _ref$minTimestamp, _ref$maxTimestamp = _ref.maxTimestamp, maxTimestamp = _ref$maxTimestamp === void 0 ? undefined : _ref$maxTimestamp, _ref$minBlock = _ref.minBlock, minBlock = _ref$minBlock === void 0 ? undefined : _ref$minBlock, _ref$maxBlock = _ref.maxBlock, maxBlock = _ref$maxBlock === void 0 ? undefined : _ref$maxBlock, _ref$max = _ref.max, max = _ref$max === void 0 ? undefined : _ref$max;\n              _context.t0 = pageResults;\n              _context.t1 = graphAPIEndpoints.timelock;\n              _context.t2 = minBlock;\n\n              if (_context.t2) {\n                _context.next = 13;\n                break;\n              }\n\n              if (!minTimestamp) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 8;\n              return timestampToBlock(minTimestamp);\n\n            case 8:\n              _context.t3 = _context.sent;\n              _context.next = 12;\n              break;\n\n            case 11:\n              _context.t3 = undefined;\n\n            case 12:\n              _context.t2 = _context.t3;\n\n            case 13:\n              _context.t4 = _context.t2;\n              _context.t5 = maxBlock;\n\n              if (_context.t5) {\n                _context.next = 24;\n                break;\n              }\n\n              if (!maxTimestamp) {\n                _context.next = 22;\n                break;\n              }\n\n              _context.next = 19;\n              return timestampToBlock(maxTimestamp);\n\n            case 19:\n              _context.t6 = _context.sent;\n              _context.next = 23;\n              break;\n\n            case 22:\n              _context.t6 = undefined;\n\n            case 23:\n              _context.t5 = _context.t6;\n\n            case 24:\n              _context.t7 = _context.t5;\n              _context.t8 = {\n                isCanceled: false,\n                isExecuted: false,\n                createdBlock_gte: _context.t4,\n                createdBlock_lte: _context.t7\n              };\n              _context.t9 = {\n                where: _context.t8\n              };\n              _context.t10 = _queuedTxs.properties;\n              _context.t11 = {\n                entity: 'timelocks',\n                selection: _context.t9,\n                properties: _context.t10\n              };\n              _context.t12 = max;\n              _context.t13 = {\n                api: _context.t1,\n                query: _context.t11,\n                max: _context.t12\n              };\n              return _context.abrupt(\"return\", (0, _context.t0)(_context.t13).then(function (results) {\n                return _queuedTxs.callback(results);\n              }).catch(function (err) {\n                return console.log(err);\n              }));\n\n            case 32:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  canceledTxs: function canceledTxs() {\n    var _arguments2 = arguments;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _ref2, _ref2$minTimestamp, minTimestamp, _ref2$maxTimestamp, maxTimestamp, _ref2$minBlock, minBlock, _ref2$maxBlock, maxBlock, _ref2$max, max;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _ref2 = _arguments2.length > 0 && _arguments2[0] !== undefined ? _arguments2[0] : {}, _ref2$minTimestamp = _ref2.minTimestamp, minTimestamp = _ref2$minTimestamp === void 0 ? undefined : _ref2$minTimestamp, _ref2$maxTimestamp = _ref2.maxTimestamp, maxTimestamp = _ref2$maxTimestamp === void 0 ? undefined : _ref2$maxTimestamp, _ref2$minBlock = _ref2.minBlock, minBlock = _ref2$minBlock === void 0 ? undefined : _ref2$minBlock, _ref2$maxBlock = _ref2.maxBlock, maxBlock = _ref2$maxBlock === void 0 ? undefined : _ref2$maxBlock, _ref2$max = _ref2.max, max = _ref2$max === void 0 ? undefined : _ref2$max;\n              _context2.t0 = pageResults;\n              _context2.t1 = graphAPIEndpoints.timelock;\n              _context2.t2 = minBlock;\n\n              if (_context2.t2) {\n                _context2.next = 13;\n                break;\n              }\n\n              if (!minTimestamp) {\n                _context2.next = 11;\n                break;\n              }\n\n              _context2.next = 8;\n              return timestampToBlock(minTimestamp);\n\n            case 8:\n              _context2.t3 = _context2.sent;\n              _context2.next = 12;\n              break;\n\n            case 11:\n              _context2.t3 = undefined;\n\n            case 12:\n              _context2.t2 = _context2.t3;\n\n            case 13:\n              _context2.t4 = _context2.t2;\n              _context2.t5 = maxBlock;\n\n              if (_context2.t5) {\n                _context2.next = 24;\n                break;\n              }\n\n              if (!maxTimestamp) {\n                _context2.next = 22;\n                break;\n              }\n\n              _context2.next = 19;\n              return timestampToBlock(maxTimestamp);\n\n            case 19:\n              _context2.t6 = _context2.sent;\n              _context2.next = 23;\n              break;\n\n            case 22:\n              _context2.t6 = undefined;\n\n            case 23:\n              _context2.t5 = _context2.t6;\n\n            case 24:\n              _context2.t7 = _context2.t5;\n              _context2.t8 = {\n                isCanceled: true,\n                createdBlock_gte: _context2.t4,\n                createdBlock_lte: _context2.t7\n              };\n              _context2.t9 = {\n                where: _context2.t8\n              };\n              _context2.t10 = _canceledTxs.properties;\n              _context2.t11 = {\n                entity: 'timelocks',\n                selection: _context2.t9,\n                properties: _context2.t10\n              };\n              _context2.t12 = max;\n              _context2.t13 = {\n                api: _context2.t1,\n                query: _context2.t11,\n                max: _context2.t12\n              };\n              return _context2.abrupt(\"return\", (0, _context2.t0)(_context2.t13).then(function (results) {\n                return _canceledTxs.callback(results);\n              }).catch(function (err) {\n                return console.log(err);\n              }));\n\n            case 32:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  executedTxs: function executedTxs() {\n    var _arguments3 = arguments;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _ref3, _ref3$minTimestamp, minTimestamp, _ref3$maxTimestamp, maxTimestamp, _ref3$minBlock, minBlock, _ref3$maxBlock, maxBlock, _ref3$max, max;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _ref3 = _arguments3.length > 0 && _arguments3[0] !== undefined ? _arguments3[0] : {}, _ref3$minTimestamp = _ref3.minTimestamp, minTimestamp = _ref3$minTimestamp === void 0 ? undefined : _ref3$minTimestamp, _ref3$maxTimestamp = _ref3.maxTimestamp, maxTimestamp = _ref3$maxTimestamp === void 0 ? undefined : _ref3$maxTimestamp, _ref3$minBlock = _ref3.minBlock, minBlock = _ref3$minBlock === void 0 ? undefined : _ref3$minBlock, _ref3$maxBlock = _ref3.maxBlock, maxBlock = _ref3$maxBlock === void 0 ? undefined : _ref3$maxBlock, _ref3$max = _ref3.max, max = _ref3$max === void 0 ? undefined : _ref3$max;\n              _context3.t0 = pageResults;\n              _context3.t1 = graphAPIEndpoints.timelock;\n              _context3.t2 = minBlock;\n\n              if (_context3.t2) {\n                _context3.next = 13;\n                break;\n              }\n\n              if (!minTimestamp) {\n                _context3.next = 11;\n                break;\n              }\n\n              _context3.next = 8;\n              return timestampToBlock(minTimestamp);\n\n            case 8:\n              _context3.t3 = _context3.sent;\n              _context3.next = 12;\n              break;\n\n            case 11:\n              _context3.t3 = undefined;\n\n            case 12:\n              _context3.t2 = _context3.t3;\n\n            case 13:\n              _context3.t4 = _context3.t2;\n              _context3.t5 = maxBlock;\n\n              if (_context3.t5) {\n                _context3.next = 24;\n                break;\n              }\n\n              if (!maxTimestamp) {\n                _context3.next = 22;\n                break;\n              }\n\n              _context3.next = 19;\n              return timestampToBlock(maxTimestamp);\n\n            case 19:\n              _context3.t6 = _context3.sent;\n              _context3.next = 23;\n              break;\n\n            case 22:\n              _context3.t6 = undefined;\n\n            case 23:\n              _context3.t5 = _context3.t6;\n\n            case 24:\n              _context3.t7 = _context3.t5;\n              _context3.t8 = {\n                isExecuted: true,\n                createdBlock_gte: _context3.t4,\n                createdBlock_lte: _context3.t7\n              };\n              _context3.t9 = {\n                where: _context3.t8\n              };\n              _context3.t10 = _executedTxs.properties;\n              _context3.t11 = {\n                entity: 'timelocks',\n                selection: _context3.t9,\n                properties: _context3.t10\n              };\n              _context3.t12 = max;\n              _context3.t13 = {\n                api: _context3.t1,\n                query: _context3.t11,\n                max: _context3.t12\n              };\n              return _context3.abrupt(\"return\", (0, _context3.t0)(_context3.t13).then(function (results) {\n                return _executedTxs.callback(results);\n              }).catch(function (err) {\n                return console.log(err);\n              }));\n\n            case 32:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  allTxs: function allTxs() {\n    var _arguments4 = arguments;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var _ref4, _ref4$minTimestamp, minTimestamp, _ref4$maxTimestamp, maxTimestamp, _ref4$minBlock, minBlock, _ref4$maxBlock, maxBlock, _ref4$max, max;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _ref4 = _arguments4.length > 0 && _arguments4[0] !== undefined ? _arguments4[0] : {}, _ref4$minTimestamp = _ref4.minTimestamp, minTimestamp = _ref4$minTimestamp === void 0 ? undefined : _ref4$minTimestamp, _ref4$maxTimestamp = _ref4.maxTimestamp, maxTimestamp = _ref4$maxTimestamp === void 0 ? undefined : _ref4$maxTimestamp, _ref4$minBlock = _ref4.minBlock, minBlock = _ref4$minBlock === void 0 ? undefined : _ref4$minBlock, _ref4$maxBlock = _ref4.maxBlock, maxBlock = _ref4$maxBlock === void 0 ? undefined : _ref4$maxBlock, _ref4$max = _ref4.max, max = _ref4$max === void 0 ? undefined : _ref4$max;\n              _context4.t0 = pageResults;\n              _context4.t1 = graphAPIEndpoints.timelock;\n              _context4.t2 = minBlock;\n\n              if (_context4.t2) {\n                _context4.next = 13;\n                break;\n              }\n\n              if (!minTimestamp) {\n                _context4.next = 11;\n                break;\n              }\n\n              _context4.next = 8;\n              return timestampToBlock(minTimestamp);\n\n            case 8:\n              _context4.t3 = _context4.sent;\n              _context4.next = 12;\n              break;\n\n            case 11:\n              _context4.t3 = undefined;\n\n            case 12:\n              _context4.t2 = _context4.t3;\n\n            case 13:\n              _context4.t4 = _context4.t2;\n              _context4.t5 = maxBlock;\n\n              if (_context4.t5) {\n                _context4.next = 24;\n                break;\n              }\n\n              if (!maxTimestamp) {\n                _context4.next = 22;\n                break;\n              }\n\n              _context4.next = 19;\n              return timestampToBlock(maxTimestamp);\n\n            case 19:\n              _context4.t6 = _context4.sent;\n              _context4.next = 23;\n              break;\n\n            case 22:\n              _context4.t6 = undefined;\n\n            case 23:\n              _context4.t5 = _context4.t6;\n\n            case 24:\n              _context4.t7 = _context4.t5;\n              _context4.t8 = {\n                createdBlock_gte: _context4.t4,\n                createdBlock_lte: _context4.t7\n              };\n              _context4.t9 = {\n                where: _context4.t8\n              };\n              _context4.t10 = _allTxs.properties;\n              _context4.t11 = {\n                entity: 'timelocks',\n                selection: _context4.t9,\n                properties: _context4.t10\n              };\n              _context4.t12 = max;\n              _context4.t13 = {\n                api: _context4.t1,\n                query: _context4.t11,\n                max: _context4.t12\n              };\n              return _context4.abrupt(\"return\", (0, _context4.t0)(_context4.t13).then(function (results) {\n                return _allTxs.callback(results);\n              }).catch(function (err) {\n                return console.log(err);\n              }));\n\n            case 32:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  }\n};\nvar _queuedTxs = {\n  properties: ['id', 'description', 'value', 'eta', 'functionName', 'data', 'targetAddress', 'createdBlock', 'createdTs', 'expiresTs', 'createdTx'],\n  callback: function callback(results) {\n    return results.map(function (_ref5) {\n      var id = _ref5.id,\n          description = _ref5.description,\n          value = _ref5.value,\n          eta = _ref5.eta,\n          functionName = _ref5.functionName,\n          data = _ref5.data,\n          targetAddress = _ref5.targetAddress,\n          createdBlock = _ref5.createdBlock,\n          createdTs = _ref5.createdTs,\n          expiresTs = _ref5.expiresTs,\n          createdTx = _ref5.createdTx;\n      return {\n        txHash: id,\n        description: description,\n        value: Number(value),\n        etaTs: Number(eta * 1000),\n        etaDate: new Date(eta * 1000),\n        functionName: functionName,\n        data: data,\n        targetAddress: targetAddress,\n        createdBlock: Number(createdBlock),\n        createdTs: Number(createdTs * 1000),\n        createdDate: new Date(createdTs * 1000),\n        expiresTs: Number(expiresTs * 1000),\n        expiresDate: new Date(expiresTs * 1000),\n        createdTx: createdTx\n      };\n    }).sort(function (a, b) {\n      return b.createdBlock - a.createdBlock;\n    });\n  }\n};\nvar _canceledTxs = {\n  properties: ['id', 'description', 'value', 'eta', 'functionName', 'data', 'targetAddress', 'createdBlock', 'createdTs', 'expiresTs', 'canceledBlock', 'canceledTs', 'createdTx', 'canceledTx'],\n  callback: function callback(results) {\n    return results.map(function (_ref6) {\n      var id = _ref6.id,\n          description = _ref6.description,\n          value = _ref6.value,\n          eta = _ref6.eta,\n          functionName = _ref6.functionName,\n          data = _ref6.data,\n          targetAddress = _ref6.targetAddress,\n          createdBlock = _ref6.createdBlock,\n          createdTs = _ref6.createdTs,\n          expiresTs = _ref6.expiresTs,\n          canceledBlock = _ref6.canceledBlock,\n          canceledTs = _ref6.canceledTs,\n          createdTx = _ref6.createdTx,\n          canceledTx = _ref6.canceledTx;\n      return {\n        txHash: id,\n        description: description,\n        value: Number(value),\n        etaTs: Number(eta * 1000),\n        etaDate: new Date(eta * 1000),\n        functionName: functionName,\n        data: data,\n        targetAddress: targetAddress,\n        createdBlock: Number(createdBlock),\n        createdTs: Number(createdTs * 1000),\n        createdDate: new Date(createdTs * 1000),\n        expiresTs: Number(expiresTs * 1000),\n        expiresDate: new Date(expiresTs * 1000),\n        canceledBlock: canceledTx ? Number(canceledBlock) : null,\n        canceledTs: canceledTx ? Number(canceledTs * 1000) : null,\n        canceledDate: canceledTx ? new Date(canceledTs * 1000) : null,\n        createdTx: createdTx,\n        canceledTx: canceledTx\n      };\n    }).sort(function (a, b) {\n      return b.createdBlock - a.createdBlock;\n    });\n  }\n};\nvar _executedTxs = {\n  properties: ['id', 'description', 'value', 'eta', 'functionName', 'data', 'targetAddress', 'createdBlock', 'createdTs', 'expiresTs', 'executedBlock', 'executedTs', 'createdTx', 'executedTx'],\n  callback: function callback(results) {\n    return results.map(function (_ref7) {\n      var id = _ref7.id,\n          description = _ref7.description,\n          value = _ref7.value,\n          eta = _ref7.eta,\n          functionName = _ref7.functionName,\n          data = _ref7.data,\n          targetAddress = _ref7.targetAddress,\n          createdBlock = _ref7.createdBlock,\n          createdTs = _ref7.createdTs,\n          expiresTs = _ref7.expiresTs,\n          executedBlock = _ref7.executedBlock,\n          executedTs = _ref7.executedTs,\n          createdTx = _ref7.createdTx,\n          executedTx = _ref7.executedTx;\n      return {\n        txHash: id,\n        description: description,\n        value: Number(value),\n        etaTs: Number(eta * 1000),\n        etaDate: new Date(eta * 1000),\n        functionName: functionName,\n        data: data,\n        targetAddress: targetAddress,\n        createdBlock: Number(createdBlock),\n        createdTs: Number(createdTs * 1000),\n        createdDate: new Date(createdTs * 1000),\n        expiresTs: Number(expiresTs * 1000),\n        expiresDate: new Date(expiresTs * 1000),\n        executedBlock: executedTx ? Number(executedBlock) : null,\n        executedTs: executedTx ? Number(executedTs * 1000) : null,\n        executedDate: executedTx ? new Date(executedTs * 1000) : null,\n        createdTx: createdTx,\n        executedTx: executedTx\n      };\n    }).sort(function (a, b) {\n      return b.createdBlock - a.createdBlock;\n    });\n    ;\n  }\n};\nvar _allTxs = {\n  properties: ['id', 'description', 'value', 'eta', 'functionName', 'data', 'targetAddress', 'isCanceled', 'isExecuted', 'createdBlock', 'createdTs', 'expiresTs', 'canceledBlock', 'canceledTs', 'executedBlock', 'executedTs', 'createdTx', 'canceledTx', 'executedTx'],\n  callback: function callback(results) {\n    return results.map(function (_ref8) {\n      var id = _ref8.id,\n          description = _ref8.description,\n          value = _ref8.value,\n          eta = _ref8.eta,\n          functionName = _ref8.functionName,\n          data = _ref8.data,\n          targetAddress = _ref8.targetAddress,\n          isCanceled = _ref8.isCanceled,\n          isExecuted = _ref8.isExecuted,\n          createdBlock = _ref8.createdBlock,\n          createdTs = _ref8.createdTs,\n          expiresTs = _ref8.expiresTs,\n          canceledBlock = _ref8.canceledBlock,\n          canceledTs = _ref8.canceledTs,\n          executedBlock = _ref8.executedBlock,\n          executedTs = _ref8.executedTs,\n          createdTx = _ref8.createdTx,\n          canceledTx = _ref8.canceledTx,\n          executedTx = _ref8.executedTx;\n      return {\n        txHash: id,\n        description: description,\n        value: Number(value),\n        etaTs: Number(eta * 1000),\n        etaDate: new Date(eta * 1000),\n        functionName: functionName,\n        data: data,\n        targetAddress: targetAddress,\n        isCanceled: isCanceled,\n        isExecuted: isExecuted,\n        createdBlock: Number(createdBlock),\n        createdTs: Number(createdTs * 1000),\n        createdDate: new Date(createdTs * 1000),\n        expiresTs: Number(expiresTs * 1000),\n        expiresDate: new Date(expiresTs * 1000),\n        canceledBlock: canceledTx ? Number(canceledBlock) : null,\n        canceledTs: canceledTx ? Number(canceledTs * 1000) : null,\n        canceledDate: canceledTx ? new Date(canceledTs * 1000) : null,\n        executedTs: executedTx ? Number(executedTs * 1000) : null,\n        executedDate: executedTx ? new Date(executedTs * 1000) : null,\n        createdTx: createdTx,\n        canceledTx: canceledTx,\n        executedTx: executedTx\n      };\n    }).sort(function (a, b) {\n      return b.createdBlock - a.createdBlock;\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"script"}