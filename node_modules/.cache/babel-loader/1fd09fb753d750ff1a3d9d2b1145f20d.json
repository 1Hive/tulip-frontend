{"ast":null,"code":"'use strict';\n\nclass JSBI extends Array {\n  constructor(a, b) {\n    if (a > JSBI.__kMaxLength) throw new RangeError(\"Maximum BigInt size exceeded\");\n    super(a), this.sign = b;\n  }\n\n  static BigInt(a) {\n    var b = Math.floor,\n        c = Number.isFinite;\n\n    if (\"number\" == typeof a) {\n      if (0 === a) return JSBI.__zero();\n      if ((0 | a) === a) return 0 > a ? JSBI.__oneDigit(-a, !0) : JSBI.__oneDigit(a, !1);\n      if (!c(a) || b(a) !== a) throw new RangeError(\"The number \" + a + \" cannot be converted to BigInt because it is not an integer\");\n      return JSBI.__fromDouble(a);\n    }\n\n    if (\"string\" == typeof a) {\n      const b = JSBI.__fromString(a);\n\n      if (null === b) throw new SyntaxError(\"Cannot convert \" + a + \" to a BigInt\");\n      return b;\n    }\n\n    if (\"boolean\" == typeof a) return !0 === a ? JSBI.__oneDigit(1, !1) : JSBI.__zero();\n\n    if (\"object\" == typeof a) {\n      if (a.constructor === JSBI) return a;\n\n      const b = JSBI.__toPrimitive(a);\n\n      return JSBI.BigInt(b);\n    }\n\n    throw new TypeError(\"Cannot convert \" + a + \" to a BigInt\");\n  }\n\n  toDebugString() {\n    const a = [\"BigInt[\"];\n\n    for (const b of this) a.push((b ? (b >>> 0).toString(16) : b) + \", \");\n\n    return a.push(\"]\"), a.join(\"\");\n  }\n\n  toString(a = 10) {\n    if (2 > a || 36 < a) throw new RangeError(\"toString() radix argument must be between 2 and 36\");\n    return 0 === this.length ? \"0\" : 0 == (a & a - 1) ? JSBI.__toStringBasePowerOfTwo(this, a) : JSBI.__toStringGeneric(this, a, !1);\n  }\n\n  static toNumber(a) {\n    var b = Math.clz32;\n    const c = a.length;\n    if (0 === c) return 0;\n\n    if (1 === c) {\n      const b = a.__unsignedDigit(0);\n\n      return a.sign ? -b : b;\n    }\n\n    const d = a.__digit(c - 1),\n          e = b(d),\n          f = 32 * c - e;\n\n    if (1024 < f) return a.sign ? -Infinity : 1 / 0;\n    let g = f - 1,\n        h = d,\n        i = c - 1;\n    const j = e + 1;\n    let k = 32 === j ? 0 : h << j;\n    k >>>= 12;\n    const l = j - 12;\n    let m = 12 <= j ? 0 : h << 20 + j,\n        n = 20 + j;\n    0 < l && 0 < i && (i--, h = a.__digit(i), k |= h >>> 32 - l, m = h << l, n = l), 0 < n && 0 < i && (i--, h = a.__digit(i), m |= h >>> 32 - n, n -= 32);\n\n    const o = JSBI.__decideRounding(a, n, i, h);\n\n    if ((1 === o || 0 === o && 1 == (1 & m)) && (m = m + 1 >>> 0, 0 === m && (k++, 0 != k >>> 20 && (k = 0, g++, 1023 < g)))) return a.sign ? -Infinity : 1 / 0;\n    const p = a.sign ? -2147483648 : 0;\n    return g = g + 1023 << 20, JSBI.__kBitConversionInts[1] = p | g | k, JSBI.__kBitConversionInts[0] = m, JSBI.__kBitConversionDouble[0];\n  }\n\n  static unaryMinus(a) {\n    if (0 === a.length) return a;\n\n    const b = a.__copy();\n\n    return b.sign = !a.sign, b;\n  }\n\n  static bitwiseNot(a) {\n    return a.sign ? JSBI.__absoluteSubOne(a).__trim() : JSBI.__absoluteAddOne(a, !0);\n  }\n\n  static exponentiate(a, b) {\n    if (b.sign) throw new RangeError(\"Exponent must be positive\");\n    if (0 === b.length) return JSBI.__oneDigit(1, !1);\n    if (0 === a.length) return a;\n    if (1 === a.length && 1 === a.__digit(0)) return a.sign && 0 == (1 & b.__digit(0)) ? JSBI.unaryMinus(a) : a;\n    if (1 < b.length) throw new RangeError(\"BigInt too big\");\n\n    let c = b.__unsignedDigit(0);\n\n    if (1 === c) return a;\n    if (c >= JSBI.__kMaxLengthBits) throw new RangeError(\"BigInt too big\");\n\n    if (1 === a.length && 2 === a.__digit(0)) {\n      const b = 1 + (c >>> 5),\n            d = a.sign && 0 != (1 & c),\n            e = new JSBI(b, d);\n\n      e.__initializeDigits();\n\n      const f = 1 << (31 & c);\n      return e.__setDigit(b - 1, f), e;\n    }\n\n    let d = null,\n        e = a;\n\n    for (0 != (1 & c) && (d = a), c >>= 1; 0 !== c; c >>= 1) e = JSBI.multiply(e, e), 0 != (1 & c) && (null === d ? d = e : d = JSBI.multiply(d, e));\n\n    return d;\n  }\n\n  static multiply(a, b) {\n    if (0 === a.length) return a;\n    if (0 === b.length) return b;\n    let c = a.length + b.length;\n    32 <= a.__clzmsd() + b.__clzmsd() && c--;\n    const d = new JSBI(c, a.sign !== b.sign);\n\n    d.__initializeDigits();\n\n    for (let c = 0; c < a.length; c++) JSBI.__multiplyAccumulate(b, a.__digit(c), d, c);\n\n    return d.__trim();\n  }\n\n  static divide(a, b) {\n    if (0 === b.length) throw new RangeError(\"Division by zero\");\n    if (0 > JSBI.__absoluteCompare(a, b)) return JSBI.__zero();\n\n    const c = a.sign !== b.sign,\n          d = b.__unsignedDigit(0);\n\n    let e;\n\n    if (1 === b.length && 65535 >= d) {\n      if (1 === d) return c === a.sign ? a : JSBI.unaryMinus(a);\n      e = JSBI.__absoluteDivSmall(a, d, null);\n    } else e = JSBI.__absoluteDivLarge(a, b, !0, !1);\n\n    return e.sign = c, e.__trim();\n  }\n\n  static remainder(a, b) {\n    if (0 === b.length) throw new RangeError(\"Division by zero\");\n    if (0 > JSBI.__absoluteCompare(a, b)) return a;\n\n    const c = b.__unsignedDigit(0);\n\n    if (1 === b.length && 65535 >= c) {\n      if (1 === c) return JSBI.__zero();\n\n      const b = JSBI.__absoluteModSmall(a, c);\n\n      return 0 === b ? JSBI.__zero() : JSBI.__oneDigit(b, a.sign);\n    }\n\n    const d = JSBI.__absoluteDivLarge(a, b, !1, !0);\n\n    return d.sign = a.sign, d.__trim();\n  }\n\n  static add(a, b) {\n    const c = a.sign;\n    return c === b.sign ? JSBI.__absoluteAdd(a, b, c) : 0 <= JSBI.__absoluteCompare(a, b) ? JSBI.__absoluteSub(a, b, c) : JSBI.__absoluteSub(b, a, !c);\n  }\n\n  static subtract(a, b) {\n    const c = a.sign;\n    return c === b.sign ? 0 <= JSBI.__absoluteCompare(a, b) ? JSBI.__absoluteSub(a, b, c) : JSBI.__absoluteSub(b, a, !c) : JSBI.__absoluteAdd(a, b, c);\n  }\n\n  static leftShift(a, b) {\n    return 0 === b.length || 0 === a.length ? a : b.sign ? JSBI.__rightShiftByAbsolute(a, b) : JSBI.__leftShiftByAbsolute(a, b);\n  }\n\n  static signedRightShift(a, b) {\n    return 0 === b.length || 0 === a.length ? a : b.sign ? JSBI.__leftShiftByAbsolute(a, b) : JSBI.__rightShiftByAbsolute(a, b);\n  }\n\n  static unsignedRightShift() {\n    throw new TypeError(\"BigInts have no unsigned right shift; use >> instead\");\n  }\n\n  static lessThan(a, b) {\n    return 0 > JSBI.__compareToBigInt(a, b);\n  }\n\n  static lessThanOrEqual(a, b) {\n    return 0 >= JSBI.__compareToBigInt(a, b);\n  }\n\n  static greaterThan(a, b) {\n    return 0 < JSBI.__compareToBigInt(a, b);\n  }\n\n  static greaterThanOrEqual(a, b) {\n    return 0 <= JSBI.__compareToBigInt(a, b);\n  }\n\n  static equal(a, b) {\n    if (a.sign !== b.sign) return !1;\n    if (a.length !== b.length) return !1;\n\n    for (let c = 0; c < a.length; c++) if (a.__digit(c) !== b.__digit(c)) return !1;\n\n    return !0;\n  }\n\n  static notEqual(a, b) {\n    return !JSBI.equal(a, b);\n  }\n\n  static bitwiseAnd(a, b) {\n    var c = Math.max;\n    if (!a.sign && !b.sign) return JSBI.__absoluteAnd(a, b).__trim();\n\n    if (a.sign && b.sign) {\n      const d = c(a.length, b.length) + 1;\n\n      let e = JSBI.__absoluteSubOne(a, d);\n\n      const f = JSBI.__absoluteSubOne(b);\n\n      return e = JSBI.__absoluteOr(e, f, e), JSBI.__absoluteAddOne(e, !0, e).__trim();\n    }\n\n    return a.sign && ([a, b] = [b, a]), JSBI.__absoluteAndNot(a, JSBI.__absoluteSubOne(b)).__trim();\n  }\n\n  static bitwiseXor(a, b) {\n    var c = Math.max;\n    if (!a.sign && !b.sign) return JSBI.__absoluteXor(a, b).__trim();\n\n    if (a.sign && b.sign) {\n      const d = c(a.length, b.length),\n            e = JSBI.__absoluteSubOne(a, d),\n            f = JSBI.__absoluteSubOne(b);\n\n      return JSBI.__absoluteXor(e, f, e).__trim();\n    }\n\n    const d = c(a.length, b.length) + 1;\n    a.sign && ([a, b] = [b, a]);\n\n    let e = JSBI.__absoluteSubOne(b, d);\n\n    return e = JSBI.__absoluteXor(e, a, e), JSBI.__absoluteAddOne(e, !0, e).__trim();\n  }\n\n  static bitwiseOr(a, b) {\n    var c = Math.max;\n    const d = c(a.length, b.length);\n    if (!a.sign && !b.sign) return JSBI.__absoluteOr(a, b).__trim();\n\n    if (a.sign && b.sign) {\n      let c = JSBI.__absoluteSubOne(a, d);\n\n      const e = JSBI.__absoluteSubOne(b);\n\n      return c = JSBI.__absoluteAnd(c, e, c), JSBI.__absoluteAddOne(c, !0, c).__trim();\n    }\n\n    a.sign && ([a, b] = [b, a]);\n\n    let e = JSBI.__absoluteSubOne(b, d);\n\n    return e = JSBI.__absoluteAndNot(e, a, e), JSBI.__absoluteAddOne(e, !0, e).__trim();\n  }\n\n  static asIntN(a, b) {\n    if (0 === b.length) return b;\n    if (0 === a) return JSBI.__zero();\n    if (a >= JSBI.__kMaxLengthBits) return b;\n    const c = a + 31 >>> 5;\n    if (b.length < c) return b;\n\n    const d = b.__unsignedDigit(c - 1),\n          e = 1 << (31 & a - 1);\n\n    if (b.length === c && d < e) return b;\n    if (!((d & e) === e)) return JSBI.__truncateToNBits(a, b);\n    if (!b.sign) return JSBI.__truncateAndSubFromPowerOfTwo(a, b, !0);\n\n    if (0 == (d & e - 1)) {\n      for (let d = c - 2; 0 <= d; d--) if (0 !== b.__digit(d)) return JSBI.__truncateAndSubFromPowerOfTwo(a, b, !1);\n\n      return b.length === c && d === e ? b : JSBI.__truncateToNBits(a, b);\n    }\n\n    return JSBI.__truncateAndSubFromPowerOfTwo(a, b, !1);\n  }\n\n  static asUintN(a, b) {\n    if (0 === b.length) return b;\n    if (0 === a) return JSBI.__zero();\n\n    if (b.sign) {\n      if (a > JSBI.__kMaxLengthBits) throw new RangeError(\"BigInt too big\");\n      return JSBI.__truncateAndSubFromPowerOfTwo(a, b, !1);\n    }\n\n    if (a >= JSBI.__kMaxLengthBits) return b;\n    const c = a + 31 >>> 5;\n    if (b.length < c) return b;\n    const d = 31 & a;\n\n    if (b.length == c) {\n      if (0 === d) return b;\n\n      const a = b.__digit(c - 1);\n\n      if (0 == a >>> d) return b;\n    }\n\n    return JSBI.__truncateToNBits(a, b);\n  }\n\n  static ADD(a, b) {\n    if (a = JSBI.__toPrimitive(a), b = JSBI.__toPrimitive(b), \"string\" == typeof a) return \"string\" != typeof b && (b = b.toString()), a + b;\n    if (\"string\" == typeof b) return a.toString() + b;\n    if (a = JSBI.__toNumeric(a), b = JSBI.__toNumeric(b), JSBI.__isBigInt(a) && JSBI.__isBigInt(b)) return JSBI.add(a, b);\n    if (\"number\" == typeof a && \"number\" == typeof b) return a + b;\n    throw new TypeError(\"Cannot mix BigInt and other types, use explicit conversions\");\n  }\n\n  static LT(a, b) {\n    return JSBI.__compare(a, b, 0);\n  }\n\n  static LE(a, b) {\n    return JSBI.__compare(a, b, 1);\n  }\n\n  static GT(a, b) {\n    return JSBI.__compare(a, b, 2);\n  }\n\n  static GE(a, b) {\n    return JSBI.__compare(a, b, 3);\n  }\n\n  static EQ(a, b) {\n    for (;;) {\n      if (JSBI.__isBigInt(a)) return JSBI.__isBigInt(b) ? JSBI.equal(a, b) : JSBI.EQ(b, a);\n\n      if (\"number\" == typeof a) {\n        if (JSBI.__isBigInt(b)) return JSBI.__equalToNumber(b, a);\n        if (\"object\" != typeof b) return a == b;\n        b = JSBI.__toPrimitive(b);\n      } else if (\"string\" == typeof a) {\n        if (JSBI.__isBigInt(b)) return a = JSBI.__fromString(a), null !== a && JSBI.equal(a, b);\n        if (\"object\" != typeof b) return a == b;\n        b = JSBI.__toPrimitive(b);\n      } else if (\"boolean\" == typeof a) {\n        if (JSBI.__isBigInt(b)) return JSBI.__equalToNumber(b, +a);\n        if (\"object\" != typeof b) return a == b;\n        b = JSBI.__toPrimitive(b);\n      } else if (\"symbol\" == typeof a) {\n        if (JSBI.__isBigInt(b)) return !1;\n        if (\"object\" != typeof b) return a == b;\n        b = JSBI.__toPrimitive(b);\n      } else if (\"object\" == typeof a) {\n        if (\"object\" == typeof b && b.constructor !== JSBI) return a == b;\n        a = JSBI.__toPrimitive(a);\n      } else return a == b;\n    }\n  }\n\n  static NE(a, b) {\n    return !JSBI.EQ(a, b);\n  }\n\n  static __zero() {\n    return new JSBI(0, !1);\n  }\n\n  static __oneDigit(a, b) {\n    const c = new JSBI(1, b);\n    return c.__setDigit(0, a), c;\n  }\n\n  __copy() {\n    const a = new JSBI(this.length, this.sign);\n\n    for (let b = 0; b < this.length; b++) a[b] = this[b];\n\n    return a;\n  }\n\n  __trim() {\n    let a = this.length,\n        b = this[a - 1];\n\n    for (; 0 === b;) a--, b = this[a - 1], this.pop();\n\n    return 0 === a && (this.sign = !1), this;\n  }\n\n  __initializeDigits() {\n    for (let a = 0; a < this.length; a++) this[a] = 0;\n  }\n\n  static __decideRounding(a, b, c, d) {\n    if (0 < b) return -1;\n    let e;\n    if (0 > b) e = -b - 1;else {\n      if (0 === c) return -1;\n      c--, d = a.__digit(c), e = 31;\n    }\n    let f = 1 << e;\n    if (0 == (d & f)) return -1;\n    if (f -= 1, 0 != (d & f)) return 1;\n\n    for (; 0 < c;) if (c--, 0 !== a.__digit(c)) return 1;\n\n    return 0;\n  }\n\n  static __fromDouble(a) {\n    JSBI.__kBitConversionDouble[0] = a;\n    const b = 2047 & JSBI.__kBitConversionInts[1] >>> 20,\n          c = b - 1023,\n          d = (c >>> 5) + 1,\n          e = new JSBI(d, 0 > a);\n    let f = 1048575 & JSBI.__kBitConversionInts[1] | 1048576,\n        g = JSBI.__kBitConversionInts[0];\n    const h = 20,\n          i = 31 & c;\n    let j,\n        k = 0;\n\n    if (i < 20) {\n      const a = h - i;\n      k = a + 32, j = f >>> a, f = f << 32 - a | g >>> a, g <<= 32 - a;\n    } else if (i === 20) k = 32, j = f, f = g;else {\n      const a = i - h;\n      k = 32 - a, j = f << a | g >>> 32 - a, f = g << a;\n    }\n\n    e.__setDigit(d - 1, j);\n\n    for (let b = d - 2; 0 <= b; b--) 0 < k ? (k -= 32, j = f, f = g) : j = 0, e.__setDigit(b, j);\n\n    return e.__trim();\n  }\n\n  static __isWhitespace(a) {\n    return !!(13 >= a && 9 <= a) || (159 >= a ? 32 == a : 131071 >= a ? 160 == a || 5760 == a : 196607 >= a ? (a &= 131071, 10 >= a || 40 == a || 41 == a || 47 == a || 95 == a || 4096 == a) : 65279 == a);\n  }\n\n  static __fromString(a, b = 0) {\n    let c = 0;\n    const e = a.length;\n    let f = 0;\n    if (f === e) return JSBI.__zero();\n    let g = a.charCodeAt(f);\n\n    for (; JSBI.__isWhitespace(g);) {\n      if (++f === e) return JSBI.__zero();\n      g = a.charCodeAt(f);\n    }\n\n    if (43 === g) {\n      if (++f === e) return null;\n      g = a.charCodeAt(f), c = 1;\n    } else if (45 === g) {\n      if (++f === e) return null;\n      g = a.charCodeAt(f), c = -1;\n    }\n\n    if (0 === b) {\n      if (b = 10, 48 === g) {\n        if (++f === e) return JSBI.__zero();\n\n        if (g = a.charCodeAt(f), 88 === g || 120 === g) {\n          if (b = 16, ++f === e) return null;\n          g = a.charCodeAt(f);\n        } else if (79 === g || 111 === g) {\n          if (b = 8, ++f === e) return null;\n          g = a.charCodeAt(f);\n        } else if (66 === g || 98 === g) {\n          if (b = 2, ++f === e) return null;\n          g = a.charCodeAt(f);\n        }\n      }\n    } else if (16 === b && 48 === g) {\n      if (++f === e) return JSBI.__zero();\n\n      if (g = a.charCodeAt(f), 88 === g || 120 === g) {\n        if (++f === e) return null;\n        g = a.charCodeAt(f);\n      }\n    }\n\n    for (; 48 === g;) {\n      if (++f === e) return JSBI.__zero();\n      g = a.charCodeAt(f);\n    }\n\n    const h = e - f;\n    let i = JSBI.__kMaxBitsPerChar[b],\n        j = JSBI.__kBitsPerCharTableMultiplier - 1;\n    if (h > 1073741824 / i) return null;\n    const k = i * h + j >>> JSBI.__kBitsPerCharTableShift,\n          l = new JSBI(k + 31 >>> 5, !1),\n          n = 10 > b ? b : 10,\n          o = 10 < b ? b - 10 : 0;\n\n    if (0 == (b & b - 1)) {\n      i >>= JSBI.__kBitsPerCharTableShift;\n      const b = [],\n            c = [];\n      let d = !1;\n\n      do {\n        let h = 0,\n            j = 0;\n\n        for (;;) {\n          let b;\n          if (g - 48 >>> 0 < n) b = g - 48;else if ((32 | g) - 97 >>> 0 < o) b = (32 | g) - 87;else {\n            d = !0;\n            break;\n          }\n\n          if (j += i, h = h << i | b, ++f === e) {\n            d = !0;\n            break;\n          }\n\n          if (g = a.charCodeAt(f), 32 < j + i) break;\n        }\n\n        b.push(h), c.push(j);\n      } while (!d);\n\n      JSBI.__fillFromParts(l, b, c);\n    } else {\n      l.__initializeDigits();\n\n      let c = !1,\n          h = 0;\n\n      do {\n        let k = 0,\n            p = 1;\n\n        for (;;) {\n          let i;\n          if (g - 48 >>> 0 < n) i = g - 48;else if ((32 | g) - 97 >>> 0 < o) i = (32 | g) - 87;else {\n            c = !0;\n            break;\n          }\n          const d = p * b;\n          if (4294967295 < d) break;\n\n          if (p = d, k = k * b + i, h++, ++f === e) {\n            c = !0;\n            break;\n          }\n\n          g = a.charCodeAt(f);\n        }\n\n        j = 32 * JSBI.__kBitsPerCharTableMultiplier - 1;\n        const q = i * h + j >>> JSBI.__kBitsPerCharTableShift + 5;\n\n        l.__inplaceMultiplyAdd(p, k, q);\n      } while (!c);\n    }\n\n    if (f !== e) {\n      if (!JSBI.__isWhitespace(g)) return null;\n\n      for (f++; f < e; f++) if (g = a.charCodeAt(f), !JSBI.__isWhitespace(g)) return null;\n    }\n\n    return 0 != c && 10 !== b ? null : (l.sign = -1 == c, l.__trim());\n  }\n\n  static __fillFromParts(a, b, c) {\n    let d = 0,\n        e = 0,\n        f = 0;\n\n    for (let g = b.length - 1; 0 <= g; g--) {\n      const h = b[g],\n            i = c[g];\n      e |= h << f, f += i, 32 === f ? (a.__setDigit(d++, e), f = 0, e = 0) : 32 < f && (a.__setDigit(d++, e), f -= 32, e = h >>> i - f);\n    }\n\n    if (0 !== e) {\n      if (d >= a.length) throw new Error(\"implementation bug\");\n\n      a.__setDigit(d++, e);\n    }\n\n    for (; d < a.length; d++) a.__setDigit(d, 0);\n  }\n\n  static __toStringBasePowerOfTwo(a, b) {\n    var c = Math.clz32;\n    const d = a.length;\n    let e = b - 1;\n    e = (85 & e >>> 1) + (85 & e), e = (51 & e >>> 2) + (51 & e), e = (15 & e >>> 4) + (15 & e);\n\n    const f = e,\n          g = b - 1,\n          h = a.__digit(d - 1),\n          i = c(h);\n\n    let j = 0 | (32 * d - i + f - 1) / f;\n    if (a.sign && j++, 268435456 < j) throw new Error(\"string too long\");\n    const k = Array(j);\n    let l = j - 1,\n        m = 0,\n        n = 0;\n\n    for (let c = 0; c < d - 1; c++) {\n      const b = a.__digit(c),\n            d = (m | b << n) & g;\n\n      k[l--] = JSBI.__kConversionChars[d];\n      const e = f - n;\n\n      for (m = b >>> e, n = 32 - e; n >= f;) k[l--] = JSBI.__kConversionChars[m & g], m >>>= f, n -= f;\n    }\n\n    const o = (m | h << n) & g;\n\n    for (k[l--] = JSBI.__kConversionChars[o], m = h >>> f - n; 0 !== m;) k[l--] = JSBI.__kConversionChars[m & g], m >>>= f;\n\n    if (a.sign && (k[l--] = \"-\"), -1 != l) throw new Error(\"implementation bug\");\n    return k.join(\"\");\n  }\n\n  static __toStringGeneric(a, b, c) {\n    var d = Math.clz32;\n    const e = a.length;\n    if (0 === e) return \"\";\n\n    if (1 === e) {\n      let d = a.__unsignedDigit(0).toString(b);\n\n      return !1 === c && a.sign && (d = \"-\" + d), d;\n    }\n\n    const f = 32 * e - d(a.__digit(e - 1)),\n          g = JSBI.__kMaxBitsPerChar[b],\n          h = g - 1;\n    let i = f * JSBI.__kBitsPerCharTableMultiplier;\n    i += h - 1, i = 0 | i / h;\n    const j = i + 1 >> 1,\n          k = JSBI.exponentiate(JSBI.__oneDigit(b, !1), JSBI.__oneDigit(j, !1));\n    let l, m;\n\n    const n = k.__unsignedDigit(0);\n\n    if (1 === k.length && 65535 >= n) {\n      l = new JSBI(a.length, !1), l.__initializeDigits();\n      let c = 0;\n\n      for (let b = 2 * a.length - 1; 0 <= b; b--) {\n        const d = c << 16 | a.__halfDigit(b);\n\n        l.__setHalfDigit(b, 0 | d / n), c = 0 | d % n;\n      }\n\n      m = c.toString(b);\n    } else {\n      const c = JSBI.__absoluteDivLarge(a, k, !0, !0);\n\n      l = c.quotient;\n\n      const d = c.remainder.__trim();\n\n      m = JSBI.__toStringGeneric(d, b, !0);\n    }\n\n    l.__trim();\n\n    let o = JSBI.__toStringGeneric(l, b, !0);\n\n    for (; m.length < j;) m = \"0\" + m;\n\n    return !1 === c && a.sign && (o = \"-\" + o), o + m;\n  }\n\n  static __unequalSign(a) {\n    return a ? -1 : 1;\n  }\n\n  static __absoluteGreater(a) {\n    return a ? -1 : 1;\n  }\n\n  static __absoluteLess(a) {\n    return a ? 1 : -1;\n  }\n\n  static __compareToBigInt(a, b) {\n    const c = a.sign;\n    if (c !== b.sign) return JSBI.__unequalSign(c);\n\n    const d = JSBI.__absoluteCompare(a, b);\n\n    return 0 < d ? JSBI.__absoluteGreater(c) : 0 > d ? JSBI.__absoluteLess(c) : 0;\n  }\n\n  static __compareToNumber(a, b) {\n    if (b | !0) {\n      const c = a.sign,\n            d = 0 > b;\n      if (c !== d) return JSBI.__unequalSign(c);\n\n      if (0 === a.length) {\n        if (d) throw new Error(\"implementation bug\");\n        return 0 === b ? 0 : -1;\n      }\n\n      if (1 < a.length) return JSBI.__absoluteGreater(c);\n\n      const e = Math.abs(b),\n            f = a.__unsignedDigit(0);\n\n      return f > e ? JSBI.__absoluteGreater(c) : f < e ? JSBI.__absoluteLess(c) : 0;\n    }\n\n    return JSBI.__compareToDouble(a, b);\n  }\n\n  static __compareToDouble(a, b) {\n    var c = Math.clz32;\n    if (b !== b) return b;\n    if (b === 1 / 0) return -1;\n    if (b === -Infinity) return 1;\n    const d = a.sign;\n    if (d !== 0 > b) return JSBI.__unequalSign(d);\n    if (0 === b) throw new Error(\"implementation bug: should be handled elsewhere\");\n    if (0 === a.length) return -1;\n    JSBI.__kBitConversionDouble[0] = b;\n    const e = 2047 & JSBI.__kBitConversionInts[1] >>> 20;\n    if (2047 == e) throw new Error(\"implementation bug: handled elsewhere\");\n    const f = e - 1023;\n    if (0 > f) return JSBI.__absoluteGreater(d);\n    const g = a.length;\n\n    let h = a.__digit(g - 1);\n\n    const i = c(h),\n          j = 32 * g - i,\n          k = f + 1;\n    if (j < k) return JSBI.__absoluteLess(d);\n    if (j > k) return JSBI.__absoluteGreater(d);\n    let l = 1048576 | 1048575 & JSBI.__kBitConversionInts[1],\n        m = JSBI.__kBitConversionInts[0];\n    const n = 20,\n          o = 31 - i;\n    if (o !== (j - 1) % 31) throw new Error(\"implementation bug\");\n    let p,\n        q = 0;\n\n    if (20 > o) {\n      const a = n - o;\n      q = a + 32, p = l >>> a, l = l << 32 - a | m >>> a, m <<= 32 - a;\n    } else if (20 === o) q = 32, p = l, l = m;else {\n      const a = o - n;\n      q = 32 - a, p = l << a | m >>> 32 - a, l = m << a;\n    }\n\n    if (h >>>= 0, p >>>= 0, h > p) return JSBI.__absoluteGreater(d);\n    if (h < p) return JSBI.__absoluteLess(d);\n\n    for (let c = g - 2; 0 <= c; c--) {\n      0 < q ? (q -= 32, p = l >>> 0, l = m, m = 0) : p = 0;\n\n      const b = a.__unsignedDigit(c);\n\n      if (b > p) return JSBI.__absoluteGreater(d);\n      if (b < p) return JSBI.__absoluteLess(d);\n    }\n\n    if (0 !== l || 0 !== m) {\n      if (0 === q) throw new Error(\"implementation bug\");\n      return JSBI.__absoluteLess(d);\n    }\n\n    return 0;\n  }\n\n  static __equalToNumber(a, b) {\n    var c = Math.abs;\n    return b | 0 === b ? 0 === b ? 0 === a.length : 1 === a.length && a.sign === 0 > b && a.__unsignedDigit(0) === c(b) : 0 === JSBI.__compareToDouble(a, b);\n  }\n\n  static __comparisonResultToBool(a, b) {\n    switch (b) {\n      case 0:\n        return 0 > a;\n\n      case 1:\n        return 0 >= a;\n\n      case 2:\n        return 0 < a;\n\n      case 3:\n        return 0 <= a;\n    }\n\n    throw new Error(\"unreachable\");\n  }\n\n  static __compare(a, b, c) {\n    if (a = JSBI.__toPrimitive(a), b = JSBI.__toPrimitive(b), \"string\" == typeof a && \"string\" == typeof b) switch (c) {\n      case 0:\n        return a < b;\n\n      case 1:\n        return a <= b;\n\n      case 2:\n        return a > b;\n\n      case 3:\n        return a >= b;\n    }\n    if (JSBI.__isBigInt(a) && \"string\" == typeof b) return b = JSBI.__fromString(b), null !== b && JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(a, b), c);\n    if (\"string\" == typeof a && JSBI.__isBigInt(b)) return a = JSBI.__fromString(a), null !== a && JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(a, b), c);\n\n    if (a = JSBI.__toNumeric(a), b = JSBI.__toNumeric(b), JSBI.__isBigInt(a)) {\n      if (JSBI.__isBigInt(b)) return JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(a, b), c);\n      if (\"number\" != typeof b) throw new Error(\"implementation bug\");\n      return JSBI.__comparisonResultToBool(JSBI.__compareToNumber(a, b), c);\n    }\n\n    if (\"number\" != typeof a) throw new Error(\"implementation bug\");\n    if (JSBI.__isBigInt(b)) return JSBI.__comparisonResultToBool(JSBI.__compareToNumber(b, a), 2 ^ c);\n    if (\"number\" != typeof b) throw new Error(\"implementation bug\");\n    return 0 === c ? a < b : 1 === c ? a <= b : 2 === c ? a > b : 3 === c ? a >= b : void 0;\n  }\n\n  __clzmsd() {\n    return Math.clz32(this[this.length - 1]);\n  }\n\n  static __absoluteAdd(a, b, c) {\n    if (a.length < b.length) return JSBI.__absoluteAdd(b, a, c);\n    if (0 === a.length) return a;\n    if (0 === b.length) return a.sign === c ? a : JSBI.unaryMinus(a);\n    let d = a.length;\n    (0 === a.__clzmsd() || b.length === a.length && 0 === b.__clzmsd()) && d++;\n    const e = new JSBI(d, c);\n    let f = 0,\n        g = 0;\n\n    for (; g < b.length; g++) {\n      const c = b.__digit(g),\n            d = a.__digit(g),\n            h = (65535 & d) + (65535 & c) + f,\n            i = (d >>> 16) + (c >>> 16) + (h >>> 16);\n\n      f = i >>> 16, e.__setDigit(g, 65535 & h | i << 16);\n    }\n\n    for (; g < a.length; g++) {\n      const b = a.__digit(g),\n            c = (65535 & b) + f,\n            d = (b >>> 16) + (c >>> 16);\n\n      f = d >>> 16, e.__setDigit(g, 65535 & c | d << 16);\n    }\n\n    return g < e.length && e.__setDigit(g, f), e.__trim();\n  }\n\n  static __absoluteSub(a, b, c) {\n    if (0 === a.length) return a;\n    if (0 === b.length) return a.sign === c ? a : JSBI.unaryMinus(a);\n    const d = new JSBI(a.length, c);\n    let e = 0,\n        f = 0;\n\n    for (; f < b.length; f++) {\n      const c = a.__digit(f),\n            g = b.__digit(f),\n            h = (65535 & c) - (65535 & g) - e;\n\n      e = 1 & h >>> 16;\n      const i = (c >>> 16) - (g >>> 16) - e;\n      e = 1 & i >>> 16, d.__setDigit(f, 65535 & h | i << 16);\n    }\n\n    for (; f < a.length; f++) {\n      const b = a.__digit(f),\n            c = (65535 & b) - e;\n\n      e = 1 & c >>> 16;\n      const g = (b >>> 16) - e;\n      e = 1 & g >>> 16, d.__setDigit(f, 65535 & c | g << 16);\n    }\n\n    return d.__trim();\n  }\n\n  static __absoluteAddOne(a, b, c = null) {\n    const d = a.length;\n    null === c ? c = new JSBI(d, b) : c.sign = b;\n    let e = !0;\n\n    for (let f, g = 0; g < d; g++) {\n      if (f = a.__digit(g), e) {\n        const a = -1 === f;\n        f = 0 | f + 1, e = a;\n      }\n\n      c.__setDigit(g, f);\n    }\n\n    return e && c.__setDigitGrow(d, 1), c;\n  }\n\n  static __absoluteSubOne(a, b) {\n    const c = a.length;\n    b = b || c;\n    const d = new JSBI(b, !1);\n    let e = !0;\n\n    for (let f, g = 0; g < c; g++) {\n      if (f = a.__digit(g), e) {\n        const a = 0 === f;\n        f = 0 | f - 1, e = a;\n      }\n\n      d.__setDigit(g, f);\n    }\n\n    if (e) throw new Error(\"implementation bug\");\n\n    for (let e = c; e < b; e++) d.__setDigit(e, 0);\n\n    return d;\n  }\n\n  static __absoluteAnd(a, b, c = null) {\n    let d = a.length,\n        e = b.length,\n        f = e;\n\n    if (d < e) {\n      f = d;\n      const c = a,\n            g = d;\n      a = b, d = e, b = c, e = g;\n    }\n\n    let g = f;\n    null === c ? c = new JSBI(g, !1) : g = c.length;\n    let h = 0;\n\n    for (; h < f; h++) c.__setDigit(h, a.__digit(h) & b.__digit(h));\n\n    for (; h < g; h++) c.__setDigit(h, 0);\n\n    return c;\n  }\n\n  static __absoluteAndNot(a, b, c = null) {\n    const d = a.length,\n          e = b.length;\n    let f = e;\n    d < e && (f = d);\n    let g = d;\n    null === c ? c = new JSBI(g, !1) : g = c.length;\n    let h = 0;\n\n    for (; h < f; h++) c.__setDigit(h, a.__digit(h) & ~b.__digit(h));\n\n    for (; h < d; h++) c.__setDigit(h, a.__digit(h));\n\n    for (; h < g; h++) c.__setDigit(h, 0);\n\n    return c;\n  }\n\n  static __absoluteOr(a, b, c = null) {\n    let d = a.length,\n        e = b.length,\n        f = e;\n\n    if (d < e) {\n      f = d;\n      const c = a,\n            g = d;\n      a = b, d = e, b = c, e = g;\n    }\n\n    let g = d;\n    null === c ? c = new JSBI(g, !1) : g = c.length;\n    let h = 0;\n\n    for (; h < f; h++) c.__setDigit(h, a.__digit(h) | b.__digit(h));\n\n    for (; h < d; h++) c.__setDigit(h, a.__digit(h));\n\n    for (; h < g; h++) c.__setDigit(h, 0);\n\n    return c;\n  }\n\n  static __absoluteXor(a, b, c = null) {\n    let d = a.length,\n        e = b.length,\n        f = e;\n\n    if (d < e) {\n      f = d;\n      const c = a,\n            g = d;\n      a = b, d = e, b = c, e = g;\n    }\n\n    let g = d;\n    null === c ? c = new JSBI(g, !1) : g = c.length;\n    let h = 0;\n\n    for (; h < f; h++) c.__setDigit(h, a.__digit(h) ^ b.__digit(h));\n\n    for (; h < d; h++) c.__setDigit(h, a.__digit(h));\n\n    for (; h < g; h++) c.__setDigit(h, 0);\n\n    return c;\n  }\n\n  static __absoluteCompare(a, b) {\n    const c = a.length - b.length;\n    if (0 != c) return c;\n    let d = a.length - 1;\n\n    for (; 0 <= d && a.__digit(d) === b.__digit(d);) d--;\n\n    return 0 > d ? 0 : a.__unsignedDigit(d) > b.__unsignedDigit(d) ? 1 : -1;\n  }\n\n  static __multiplyAccumulate(a, b, c, d) {\n    var e = Math.imul;\n    if (0 === b) return;\n    const f = 65535 & b,\n          g = b >>> 16;\n    let h = 0,\n        j = 0,\n        k = 0;\n\n    for (let l = 0; l < a.length; l++, d++) {\n      let b = c.__digit(d),\n          i = 65535 & b,\n          m = b >>> 16;\n\n      const n = a.__digit(l),\n            o = 65535 & n,\n            p = n >>> 16,\n            q = e(o, f),\n            r = e(o, g),\n            s = e(p, f),\n            t = e(p, g);\n\n      i += j + (65535 & q), m += k + h + (i >>> 16) + (q >>> 16) + (65535 & r) + (65535 & s), h = m >>> 16, j = (r >>> 16) + (s >>> 16) + (65535 & t) + h, h = j >>> 16, j &= 65535, k = t >>> 16, b = 65535 & i | m << 16, c.__setDigit(d, b);\n    }\n\n    for (; 0 != h || 0 !== j || 0 !== k; d++) {\n      let a = c.__digit(d);\n\n      const b = (65535 & a) + j,\n            e = (a >>> 16) + (b >>> 16) + k + h;\n      j = 0, k = 0, h = e >>> 16, a = 65535 & b | e << 16, c.__setDigit(d, a);\n    }\n  }\n\n  static __internalMultiplyAdd(a, b, c, d, e) {\n    var f = Math.imul;\n    let g = c,\n        h = 0;\n\n    for (let j = 0; j < d; j++) {\n      const c = a.__digit(j),\n            d = f(65535 & c, b),\n            i = (65535 & d) + h + g;\n\n      g = i >>> 16;\n      const k = f(c >>> 16, b),\n            l = (65535 & k) + (d >>> 16) + g;\n      g = l >>> 16, h = k >>> 16, e.__setDigit(j, l << 16 | 65535 & i);\n    }\n\n    if (e.length > d) for (e.__setDigit(d++, g + h); d < e.length;) e.__setDigit(d++, 0);else if (0 !== g + h) throw new Error(\"implementation bug\");\n  }\n\n  __inplaceMultiplyAdd(a, b, c) {\n    var e = Math.imul;\n    c > this.length && (c = this.length);\n    const f = 65535 & a,\n          g = a >>> 16;\n    let h = 0,\n        j = 65535 & b,\n        k = b >>> 16;\n\n    for (let l = 0; l < c; l++) {\n      const a = this.__digit(l),\n            b = 65535 & a,\n            c = a >>> 16,\n            d = e(b, f),\n            i = e(b, g),\n            m = e(c, f),\n            n = e(c, g),\n            o = j + (65535 & d),\n            p = k + h + (o >>> 16) + (d >>> 16) + (65535 & i) + (65535 & m);\n\n      j = (i >>> 16) + (m >>> 16) + (65535 & n) + (p >>> 16), h = j >>> 16, j &= 65535, k = n >>> 16;\n\n      this.__setDigit(l, 65535 & o | p << 16);\n    }\n\n    if (0 != h || 0 !== j || 0 !== k) throw new Error(\"implementation bug\");\n  }\n\n  static __absoluteDivSmall(a, b, c) {\n    null === c && (c = new JSBI(a.length, !1));\n    let d = 0;\n\n    for (let e, f = 2 * a.length - 1; 0 <= f; f -= 2) {\n      e = (d << 16 | a.__halfDigit(f)) >>> 0;\n      const g = 0 | e / b;\n      d = 0 | e % b, e = (d << 16 | a.__halfDigit(f - 1)) >>> 0;\n      const h = 0 | e / b;\n      d = 0 | e % b, c.__setDigit(f >>> 1, g << 16 | h);\n    }\n\n    return c;\n  }\n\n  static __absoluteModSmall(a, b) {\n    let c = 0;\n\n    for (let d = 2 * a.length - 1; 0 <= d; d--) {\n      const e = (c << 16 | a.__halfDigit(d)) >>> 0;\n      c = 0 | e % b;\n    }\n\n    return c;\n  }\n\n  static __absoluteDivLarge(a, b, d, e) {\n    var f = Math.imul;\n\n    const g = b.__halfDigitLength(),\n          h = b.length,\n          c = a.__halfDigitLength() - g;\n\n    let i = null;\n    d && (i = new JSBI(c + 2 >>> 1, !1), i.__initializeDigits());\n    const k = new JSBI(g + 2 >>> 1, !1);\n\n    k.__initializeDigits();\n\n    const l = JSBI.__clz16(b.__halfDigit(g - 1));\n\n    0 < l && (b = JSBI.__specialLeftShift(b, l, 0));\n\n    const m = JSBI.__specialLeftShift(a, l, 1),\n          n = b.__halfDigit(g - 1);\n\n    let o = 0;\n\n    for (let l, p = c; 0 <= p; p--) {\n      l = 65535;\n\n      const a = m.__halfDigit(p + g);\n\n      if (a !== n) {\n        const c = (a << 16 | m.__halfDigit(p + g - 1)) >>> 0;\n        l = 0 | c / n;\n        let d = 0 | c % n;\n\n        const e = b.__halfDigit(g - 2),\n              h = m.__halfDigit(p + g - 2);\n\n        for (; f(l, e) >>> 0 > (d << 16 | h) >>> 0 && (l--, d += n, !(65535 < d)););\n      }\n\n      JSBI.__internalMultiplyAdd(b, l, 0, h, k);\n\n      let e = m.__inplaceSub(k, p, g + 1);\n\n      0 !== e && (e = m.__inplaceAdd(b, p, g), m.__setHalfDigit(p + g, m.__halfDigit(p + g) + e), l--), d && (1 & p ? o = l << 16 : i.__setDigit(p >>> 1, o | l));\n    }\n\n    return e ? (m.__inplaceRightShift(l), d ? {\n      quotient: i,\n      remainder: m\n    } : m) : d ? i : void 0;\n  }\n\n  static __clz16(a) {\n    return Math.clz32(a) - 16;\n  }\n\n  __inplaceAdd(a, b, c) {\n    let d = 0;\n\n    for (let e = 0; e < c; e++) {\n      const c = this.__halfDigit(b + e) + a.__halfDigit(e) + d;\n      d = c >>> 16, this.__setHalfDigit(b + e, c);\n    }\n\n    return d;\n  }\n\n  __inplaceSub(a, b, c) {\n    let d = 0;\n\n    if (1 & b) {\n      b >>= 1;\n\n      let e = this.__digit(b),\n          f = 65535 & e,\n          g = 0;\n\n      for (; g < c - 1 >>> 1; g++) {\n        const c = a.__digit(g),\n              h = (e >>> 16) - (65535 & c) - d;\n\n        d = 1 & h >>> 16, this.__setDigit(b + g, h << 16 | 65535 & f), e = this.__digit(b + g + 1), f = (65535 & e) - (c >>> 16) - d, d = 1 & f >>> 16;\n      }\n\n      const h = a.__digit(g),\n            i = (e >>> 16) - (65535 & h) - d;\n\n      d = 1 & i >>> 16, this.__setDigit(b + g, i << 16 | 65535 & f);\n      if (b + g + 1 >= this.length) throw new RangeError(\"out of bounds\");\n      0 == (1 & c) && (e = this.__digit(b + g + 1), f = (65535 & e) - (h >>> 16) - d, d = 1 & f >>> 16, this.__setDigit(b + a.length, 4294901760 & e | 65535 & f));\n    } else {\n      b >>= 1;\n      let e = 0;\n\n      for (; e < a.length - 1; e++) {\n        const c = this.__digit(b + e),\n              f = a.__digit(e),\n              g = (65535 & c) - (65535 & f) - d;\n\n        d = 1 & g >>> 16;\n        const h = (c >>> 16) - (f >>> 16) - d;\n        d = 1 & h >>> 16, this.__setDigit(b + e, h << 16 | 65535 & g);\n      }\n\n      const f = this.__digit(b + e),\n            g = a.__digit(e),\n            h = (65535 & f) - (65535 & g) - d;\n\n      d = 1 & h >>> 16;\n      let i = 0;\n      0 == (1 & c) && (i = (f >>> 16) - (g >>> 16) - d, d = 1 & i >>> 16), this.__setDigit(b + e, i << 16 | 65535 & h);\n    }\n\n    return d;\n  }\n\n  __inplaceRightShift(a) {\n    if (0 === a) return;\n    let b = this.__digit(0) >>> a;\n    const c = this.length - 1;\n\n    for (let e = 0; e < c; e++) {\n      const c = this.__digit(e + 1);\n\n      this.__setDigit(e, c << 32 - a | b), b = c >>> a;\n    }\n\n    this.__setDigit(c, b);\n  }\n\n  static __specialLeftShift(a, b, c) {\n    const d = a.length,\n          e = new JSBI(d + c, !1);\n\n    if (0 === b) {\n      for (let b = 0; b < d; b++) e.__setDigit(b, a.__digit(b));\n\n      return 0 < c && e.__setDigit(d, 0), e;\n    }\n\n    let f = 0;\n\n    for (let g = 0; g < d; g++) {\n      const c = a.__digit(g);\n\n      e.__setDigit(g, c << b | f), f = c >>> 32 - b;\n    }\n\n    return 0 < c && e.__setDigit(d, f), e;\n  }\n\n  static __leftShiftByAbsolute(a, b) {\n    const c = JSBI.__toShiftAmount(b);\n\n    if (0 > c) throw new RangeError(\"BigInt too big\");\n    const e = c >>> 5,\n          f = 31 & c,\n          g = a.length,\n          h = 0 !== f && 0 != a.__digit(g - 1) >>> 32 - f,\n          j = g + e + (h ? 1 : 0),\n          k = new JSBI(j, a.sign);\n\n    if (0 === f) {\n      let b = 0;\n\n      for (; b < e; b++) k.__setDigit(b, 0);\n\n      for (; b < j; b++) k.__setDigit(b, a.__digit(b - e));\n    } else {\n      let b = 0;\n\n      for (let a = 0; a < e; a++) k.__setDigit(a, 0);\n\n      for (let c = 0; c < g; c++) {\n        const g = a.__digit(c);\n\n        k.__setDigit(c + e, g << f | b), b = g >>> 32 - f;\n      }\n\n      if (h) k.__setDigit(g + e, b);else if (0 !== b) throw new Error(\"implementation bug\");\n    }\n\n    return k.__trim();\n  }\n\n  static __rightShiftByAbsolute(a, b) {\n    const c = a.length,\n          d = a.sign,\n          e = JSBI.__toShiftAmount(b);\n\n    if (0 > e) return JSBI.__rightShiftByMaximum(d);\n    const f = e >>> 5,\n          g = 31 & e;\n    let h = c - f;\n    if (0 >= h) return JSBI.__rightShiftByMaximum(d);\n    let i = !1;\n\n    if (d) {\n      if (0 != (a.__digit(f) & (1 << g) - 1)) i = !0;else for (let b = 0; b < f; b++) if (0 !== a.__digit(b)) {\n        i = !0;\n        break;\n      }\n    }\n\n    if (i && 0 === g) {\n      const b = a.__digit(c - 1);\n\n      0 == ~b && h++;\n    }\n\n    let j = new JSBI(h, d);\n    if (0 === g) for (let b = f; b < c; b++) j.__setDigit(b - f, a.__digit(b));else {\n      let b = a.__digit(f) >>> g;\n      const d = c - f - 1;\n\n      for (let c = 0; c < d; c++) {\n        const e = a.__digit(c + f + 1);\n\n        j.__setDigit(c, e << 32 - g | b), b = e >>> g;\n      }\n\n      j.__setDigit(d, b);\n    }\n    return i && (j = JSBI.__absoluteAddOne(j, !0, j)), j.__trim();\n  }\n\n  static __rightShiftByMaximum(a) {\n    return a ? JSBI.__oneDigit(1, !0) : JSBI.__zero();\n  }\n\n  static __toShiftAmount(a) {\n    if (1 < a.length) return -1;\n\n    const b = a.__unsignedDigit(0);\n\n    return b > JSBI.__kMaxLengthBits ? -1 : b;\n  }\n\n  static __toPrimitive(a, b = \"default\") {\n    if (\"object\" != typeof a) return a;\n    if (a.constructor === JSBI) return a;\n    const c = a[Symbol.toPrimitive];\n\n    if (c) {\n      const a = c(b);\n      if (\"object\" != typeof a) return a;\n      throw new TypeError(\"Cannot convert object to primitive value\");\n    }\n\n    const d = a.valueOf;\n\n    if (d) {\n      const b = d.call(a);\n      if (\"object\" != typeof b) return b;\n    }\n\n    const e = a.toString;\n\n    if (e) {\n      const b = e.call(a);\n      if (\"object\" != typeof b) return b;\n    }\n\n    throw new TypeError(\"Cannot convert object to primitive value\");\n  }\n\n  static __toNumeric(a) {\n    return JSBI.__isBigInt(a) ? a : +a;\n  }\n\n  static __isBigInt(a) {\n    return \"object\" == typeof a && a.constructor === JSBI;\n  }\n\n  static __truncateToNBits(a, b) {\n    const c = a + 31 >>> 5,\n          d = new JSBI(c, b.sign),\n          e = c - 1;\n\n    for (let c = 0; c < e; c++) d.__setDigit(c, b.__digit(c));\n\n    let f = b.__digit(e);\n\n    if (0 != (31 & a)) {\n      const b = 32 - (31 & a);\n      f = f << b >>> b;\n    }\n\n    return d.__setDigit(e, f), d.__trim();\n  }\n\n  static __truncateAndSubFromPowerOfTwo(a, b, c) {\n    var d = Math.min;\n    const e = a + 31 >>> 5,\n          f = new JSBI(e, c);\n    let g = 0;\n    const h = e - 1;\n    let j = 0;\n\n    for (const e = d(h, b.length); g < e; g++) {\n      const a = b.__digit(g),\n            c = 0 - (65535 & a) - j;\n\n      j = 1 & c >>> 16;\n      const d = 0 - (a >>> 16) - j;\n      j = 1 & d >>> 16, f.__setDigit(g, 65535 & c | d << 16);\n    }\n\n    for (; g < h; g++) f.__setDigit(g, 0 | -j);\n\n    let k = h < b.length ? b.__digit(h) : 0;\n    const l = 31 & a;\n    let m;\n\n    if (0 == l) {\n      const a = 0 - (65535 & k) - j;\n      j = 1 & a >>> 16;\n      const b = 0 - (k >>> 16) - j;\n      m = 65535 & a | b << 16;\n    } else {\n      const a = 32 - l;\n      k = k << a >>> a;\n      const b = 1 << 32 - a,\n            c = (65535 & b) - (65535 & k) - j;\n      j = 1 & c >>> 16;\n      const d = (b >>> 16) - (k >>> 16) - j;\n      m = 65535 & c | d << 16, m &= b - 1;\n    }\n\n    return f.__setDigit(h, m), f.__trim();\n  }\n\n  __digit(a) {\n    return this[a];\n  }\n\n  __unsignedDigit(a) {\n    return this[a] >>> 0;\n  }\n\n  __setDigit(a, b) {\n    this[a] = 0 | b;\n  }\n\n  __setDigitGrow(a, b) {\n    this[a] = 0 | b;\n  }\n\n  __halfDigitLength() {\n    const a = this.length;\n    return 65535 >= this.__unsignedDigit(a - 1) ? 2 * a - 1 : 2 * a;\n  }\n\n  __halfDigit(a) {\n    return 65535 & this[a >>> 1] >>> ((1 & a) << 4);\n  }\n\n  __setHalfDigit(a, b) {\n    const c = a >>> 1,\n          d = this.__digit(c),\n          e = 1 & a ? 65535 & d | b << 16 : 4294901760 & d | 65535 & b;\n\n    this.__setDigit(c, e);\n  }\n\n  static __digitPow(a, b) {\n    let c = 1;\n\n    for (; 0 < b;) 1 & b && (c *= a), b >>>= 1, a *= a;\n\n    return c;\n  }\n\n}\n\nJSBI.__kMaxLength = 33554432, JSBI.__kMaxLengthBits = JSBI.__kMaxLength << 5, JSBI.__kMaxBitsPerChar = [0, 0, 32, 51, 64, 75, 83, 90, 96, 102, 107, 111, 115, 119, 122, 126, 128, 131, 134, 136, 139, 141, 143, 145, 147, 149, 151, 153, 154, 156, 158, 159, 160, 162, 163, 165, 166], JSBI.__kBitsPerCharTableShift = 5, JSBI.__kBitsPerCharTableMultiplier = 1 << JSBI.__kBitsPerCharTableShift, JSBI.__kConversionChars = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"], JSBI.__kBitConversionBuffer = new ArrayBuffer(8), JSBI.__kBitConversionDouble = new Float64Array(JSBI.__kBitConversionBuffer), JSBI.__kBitConversionInts = new Int32Array(JSBI.__kBitConversionBuffer);\n/**\n * Re-maps a number from one range to another.\n *\n * In the example above, the number '25' is converted from a value in the range\n * 0..100 into a value that ranges from the left edge (0) to the right edge\n * (width) of the screen. Numbers outside the range are not clamped to 0 and 1,\n * because out-of-range values are often intentional and useful.\n *\n * From Processing.js\n *\n * @param {Number} value        The incoming value to be converted\n * @param {Number} istart       Lower bound of the value's current range\n * @param {Number} istop        Upper bound of the value's current range\n * @param {Number} ostart       Lower bound of the value's target range\n * @param {Number} ostop        Upper bound of the value's target range\n * @returns {Number}\n */\n\nfunction map(value, istart, istop, ostart, ostop) {\n  return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));\n}\n/**\n * Normalizes a number from another range into a value between 0 and 1.\n *\n * Identical to map(value, low, high, 0, 1)\n * Numbers outside the range are not clamped to 0 and 1, because out-of-range\n * values are often intentional and useful.\n *\n * From Processing.js\n *\n * @param {Number} aNumber    The incoming value to be converted\n * @param {Number} low        Lower bound of the value's current range\n * @param {Number} high       Upper bound of the value's current range\n * @returns {Number}\n */\n\n\nfunction norm(aNumber, low, high) {\n  return (aNumber - low) / (high - low);\n}\n/**\n * Calculates a number between two numbers at a specific increment. The\n * progress parameter is the amount to interpolate between the two values where\n * 0.0 equal to the first point, 0.1 is very near the first point, 0.5 is\n * half-way in between, etc. The lerp function is convenient for creating\n * motion along a straight path and for drawing dotted lines.\n *\n * From Processing.js\n *\n * @param {Number} progress     between 0.0 and 1.0\n * @param {Number} value1       first value\n * @param {Number} value2       second value\n * @returns {Number}\n */\n\n\nfunction lerp(progress, value1, value2) {\n  return (value2 - value1) * progress + value1;\n}\n/**\n * Constrains a value to not exceed a maximum and minimum value.\n *\n * From Processing.js\n *\n * @param {Number} value   the value to constrain\n * @param {Number} value   minimum limit\n * @param {Number} value   maximum limit\n * @returns {Number}\n */\n\n\nfunction clamp(value) {\n  var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  return Math.min(max, Math.max(min, value));\n}\n/**\n * Returns a random integer between min (included) and max (excluded)\n * Note: Using Math.round() would give a non-uniform distribution\n *\n * From Mozilla MDN\n *\n * @param {Number} min    The minimum number (included)\n * @param {Number} max    The maximum number (excluded)\n * @returns {Number}\n */\n\n\nfunction randomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n/**\n * Random number between two values.\n *\n * From Mozilla MDN\n *\n * @param {Number} min The minimum number (included)\n * @param {Number} max The maximum number (excluded)\n * @returns {Number}\n */\n\n\nfunction random() {\n  var min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n/**\n * Divide and round two big integers.\n *\n * @param {BigInt|string|number} dividend Integer to be divided + rounded\n * @param {BigInt|string|number} divisor  Divisor\n * @returns {string}\n */\n\n\nfunction divideRoundBigInt(dividend, divisor) {\n  dividend = JSBI.BigInt(String(dividend));\n  divisor = JSBI.BigInt(String(divisor));\n  return JSBI.divide(JSBI.add(dividend, JSBI.divide(divisor, JSBI.BigInt(2))), divisor).toString();\n}\n\nexports.JSBI = JSBI;\nexports.clamp = clamp;\nexports.divideRoundBigInt = divideRoundBigInt;\nexports.lerp = lerp;\nexports.map = map;\nexports.norm = norm;\nexports.random = random;\nexports.randomInt = randomInt;","map":{"version":3,"sources":["../node_modules/jsbi/dist/jsbi.mjs","../src/utils/math.js"],"names":["ostart","ostop","value","istop","aNumber","high","value2","min","max","Math","dividend","JSBI","String","divisor"],"mappings":"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","sourcesContent":["class JSBI extends Array{constructor(a,b){if(a>JSBI.__kMaxLength)throw new RangeError(\"Maximum BigInt size exceeded\");super(a),this.sign=b}static BigInt(a){var b=Math.floor,c=Number.isFinite;if(\"number\"==typeof a){if(0===a)return JSBI.__zero();if((0|a)===a)return 0>a?JSBI.__oneDigit(-a,!0):JSBI.__oneDigit(a,!1);if(!c(a)||b(a)!==a)throw new RangeError(\"The number \"+a+\" cannot be converted to BigInt because it is not an integer\");return JSBI.__fromDouble(a)}if(\"string\"==typeof a){const b=JSBI.__fromString(a);if(null===b)throw new SyntaxError(\"Cannot convert \"+a+\" to a BigInt\");return b}if(\"boolean\"==typeof a)return!0===a?JSBI.__oneDigit(1,!1):JSBI.__zero();if(\"object\"==typeof a){if(a.constructor===JSBI)return a;const b=JSBI.__toPrimitive(a);return JSBI.BigInt(b)}throw new TypeError(\"Cannot convert \"+a+\" to a BigInt\")}toDebugString(){const a=[\"BigInt[\"];for(const b of this)a.push((b?(b>>>0).toString(16):b)+\", \");return a.push(\"]\"),a.join(\"\")}toString(a=10){if(2>a||36<a)throw new RangeError(\"toString() radix argument must be between 2 and 36\");return 0===this.length?\"0\":0==(a&a-1)?JSBI.__toStringBasePowerOfTwo(this,a):JSBI.__toStringGeneric(this,a,!1)}static toNumber(a){var b=Math.clz32;const c=a.length;if(0===c)return 0;if(1===c){const b=a.__unsignedDigit(0);return a.sign?-b:b}const d=a.__digit(c-1),e=b(d),f=32*c-e;if(1024<f)return a.sign?-Infinity:1/0;let g=f-1,h=d,i=c-1;const j=e+1;let k=32===j?0:h<<j;k>>>=12;const l=j-12;let m=12<=j?0:h<<20+j,n=20+j;0<l&&0<i&&(i--,h=a.__digit(i),k|=h>>>32-l,m=h<<l,n=l),0<n&&0<i&&(i--,h=a.__digit(i),m|=h>>>32-n,n-=32);const o=JSBI.__decideRounding(a,n,i,h);if((1===o||0===o&&1==(1&m))&&(m=m+1>>>0,0===m&&(k++,0!=k>>>20&&(k=0,g++,1023<g))))return a.sign?-Infinity:1/0;const p=a.sign?-2147483648:0;return g=g+1023<<20,JSBI.__kBitConversionInts[1]=p|g|k,JSBI.__kBitConversionInts[0]=m,JSBI.__kBitConversionDouble[0]}static unaryMinus(a){if(0===a.length)return a;const b=a.__copy();return b.sign=!a.sign,b}static bitwiseNot(a){return a.sign?JSBI.__absoluteSubOne(a).__trim():JSBI.__absoluteAddOne(a,!0)}static exponentiate(a,b){if(b.sign)throw new RangeError(\"Exponent must be positive\");if(0===b.length)return JSBI.__oneDigit(1,!1);if(0===a.length)return a;if(1===a.length&&1===a.__digit(0))return a.sign&&0==(1&b.__digit(0))?JSBI.unaryMinus(a):a;if(1<b.length)throw new RangeError(\"BigInt too big\");let c=b.__unsignedDigit(0);if(1===c)return a;if(c>=JSBI.__kMaxLengthBits)throw new RangeError(\"BigInt too big\");if(1===a.length&&2===a.__digit(0)){const b=1+(c>>>5),d=a.sign&&0!=(1&c),e=new JSBI(b,d);e.__initializeDigits();const f=1<<(31&c);return e.__setDigit(b-1,f),e}let d=null,e=a;for(0!=(1&c)&&(d=a),c>>=1;0!==c;c>>=1)e=JSBI.multiply(e,e),0!=(1&c)&&(null===d?d=e:d=JSBI.multiply(d,e));return d}static multiply(a,b){if(0===a.length)return a;if(0===b.length)return b;let c=a.length+b.length;32<=a.__clzmsd()+b.__clzmsd()&&c--;const d=new JSBI(c,a.sign!==b.sign);d.__initializeDigits();for(let c=0;c<a.length;c++)JSBI.__multiplyAccumulate(b,a.__digit(c),d,c);return d.__trim()}static divide(a,b){if(0===b.length)throw new RangeError(\"Division by zero\");if(0>JSBI.__absoluteCompare(a,b))return JSBI.__zero();const c=a.sign!==b.sign,d=b.__unsignedDigit(0);let e;if(1===b.length&&65535>=d){if(1===d)return c===a.sign?a:JSBI.unaryMinus(a);e=JSBI.__absoluteDivSmall(a,d,null)}else e=JSBI.__absoluteDivLarge(a,b,!0,!1);return e.sign=c,e.__trim()}static remainder(a,b){if(0===b.length)throw new RangeError(\"Division by zero\");if(0>JSBI.__absoluteCompare(a,b))return a;const c=b.__unsignedDigit(0);if(1===b.length&&65535>=c){if(1===c)return JSBI.__zero();const b=JSBI.__absoluteModSmall(a,c);return 0===b?JSBI.__zero():JSBI.__oneDigit(b,a.sign)}const d=JSBI.__absoluteDivLarge(a,b,!1,!0);return d.sign=a.sign,d.__trim()}static add(a,b){const c=a.sign;return c===b.sign?JSBI.__absoluteAdd(a,b,c):0<=JSBI.__absoluteCompare(a,b)?JSBI.__absoluteSub(a,b,c):JSBI.__absoluteSub(b,a,!c)}static subtract(a,b){const c=a.sign;return c===b.sign?0<=JSBI.__absoluteCompare(a,b)?JSBI.__absoluteSub(a,b,c):JSBI.__absoluteSub(b,a,!c):JSBI.__absoluteAdd(a,b,c)}static leftShift(a,b){return 0===b.length||0===a.length?a:b.sign?JSBI.__rightShiftByAbsolute(a,b):JSBI.__leftShiftByAbsolute(a,b)}static signedRightShift(a,b){return 0===b.length||0===a.length?a:b.sign?JSBI.__leftShiftByAbsolute(a,b):JSBI.__rightShiftByAbsolute(a,b)}static unsignedRightShift(){throw new TypeError(\"BigInts have no unsigned right shift; use >> instead\")}static lessThan(a,b){return 0>JSBI.__compareToBigInt(a,b)}static lessThanOrEqual(a,b){return 0>=JSBI.__compareToBigInt(a,b)}static greaterThan(a,b){return 0<JSBI.__compareToBigInt(a,b)}static greaterThanOrEqual(a,b){return 0<=JSBI.__compareToBigInt(a,b)}static equal(a,b){if(a.sign!==b.sign)return!1;if(a.length!==b.length)return!1;for(let c=0;c<a.length;c++)if(a.__digit(c)!==b.__digit(c))return!1;return!0}static notEqual(a,b){return!JSBI.equal(a,b)}static bitwiseAnd(a,b){var c=Math.max;if(!a.sign&&!b.sign)return JSBI.__absoluteAnd(a,b).__trim();if(a.sign&&b.sign){const d=c(a.length,b.length)+1;let e=JSBI.__absoluteSubOne(a,d);const f=JSBI.__absoluteSubOne(b);return e=JSBI.__absoluteOr(e,f,e),JSBI.__absoluteAddOne(e,!0,e).__trim()}return a.sign&&([a,b]=[b,a]),JSBI.__absoluteAndNot(a,JSBI.__absoluteSubOne(b)).__trim()}static bitwiseXor(a,b){var c=Math.max;if(!a.sign&&!b.sign)return JSBI.__absoluteXor(a,b).__trim();if(a.sign&&b.sign){const d=c(a.length,b.length),e=JSBI.__absoluteSubOne(a,d),f=JSBI.__absoluteSubOne(b);return JSBI.__absoluteXor(e,f,e).__trim()}const d=c(a.length,b.length)+1;a.sign&&([a,b]=[b,a]);let e=JSBI.__absoluteSubOne(b,d);return e=JSBI.__absoluteXor(e,a,e),JSBI.__absoluteAddOne(e,!0,e).__trim()}static bitwiseOr(a,b){var c=Math.max;const d=c(a.length,b.length);if(!a.sign&&!b.sign)return JSBI.__absoluteOr(a,b).__trim();if(a.sign&&b.sign){let c=JSBI.__absoluteSubOne(a,d);const e=JSBI.__absoluteSubOne(b);return c=JSBI.__absoluteAnd(c,e,c),JSBI.__absoluteAddOne(c,!0,c).__trim()}a.sign&&([a,b]=[b,a]);let e=JSBI.__absoluteSubOne(b,d);return e=JSBI.__absoluteAndNot(e,a,e),JSBI.__absoluteAddOne(e,!0,e).__trim()}static asIntN(a,b){if(0===b.length)return b;if(0===a)return JSBI.__zero();if(a>=JSBI.__kMaxLengthBits)return b;const c=a+31>>>5;if(b.length<c)return b;const d=b.__unsignedDigit(c-1),e=1<<(31&a-1);if(b.length===c&&d<e)return b;if(!((d&e)===e))return JSBI.__truncateToNBits(a,b);if(!b.sign)return JSBI.__truncateAndSubFromPowerOfTwo(a,b,!0);if(0==(d&e-1)){for(let d=c-2;0<=d;d--)if(0!==b.__digit(d))return JSBI.__truncateAndSubFromPowerOfTwo(a,b,!1);return b.length===c&&d===e?b:JSBI.__truncateToNBits(a,b)}return JSBI.__truncateAndSubFromPowerOfTwo(a,b,!1)}static asUintN(a,b){if(0===b.length)return b;if(0===a)return JSBI.__zero();if(b.sign){if(a>JSBI.__kMaxLengthBits)throw new RangeError(\"BigInt too big\");return JSBI.__truncateAndSubFromPowerOfTwo(a,b,!1)}if(a>=JSBI.__kMaxLengthBits)return b;const c=a+31>>>5;if(b.length<c)return b;const d=31&a;if(b.length==c){if(0===d)return b;const a=b.__digit(c-1);if(0==a>>>d)return b}return JSBI.__truncateToNBits(a,b)}static ADD(a,b){if(a=JSBI.__toPrimitive(a),b=JSBI.__toPrimitive(b),\"string\"==typeof a)return\"string\"!=typeof b&&(b=b.toString()),a+b;if(\"string\"==typeof b)return a.toString()+b;if(a=JSBI.__toNumeric(a),b=JSBI.__toNumeric(b),JSBI.__isBigInt(a)&&JSBI.__isBigInt(b))return JSBI.add(a,b);if(\"number\"==typeof a&&\"number\"==typeof b)return a+b;throw new TypeError(\"Cannot mix BigInt and other types, use explicit conversions\")}static LT(a,b){return JSBI.__compare(a,b,0)}static LE(a,b){return JSBI.__compare(a,b,1)}static GT(a,b){return JSBI.__compare(a,b,2)}static GE(a,b){return JSBI.__compare(a,b,3)}static EQ(a,b){for(;;){if(JSBI.__isBigInt(a))return JSBI.__isBigInt(b)?JSBI.equal(a,b):JSBI.EQ(b,a);if(\"number\"==typeof a){if(JSBI.__isBigInt(b))return JSBI.__equalToNumber(b,a);if(\"object\"!=typeof b)return a==b;b=JSBI.__toPrimitive(b)}else if(\"string\"==typeof a){if(JSBI.__isBigInt(b))return a=JSBI.__fromString(a),null!==a&&JSBI.equal(a,b);if(\"object\"!=typeof b)return a==b;b=JSBI.__toPrimitive(b)}else if(\"boolean\"==typeof a){if(JSBI.__isBigInt(b))return JSBI.__equalToNumber(b,+a);if(\"object\"!=typeof b)return a==b;b=JSBI.__toPrimitive(b)}else if(\"symbol\"==typeof a){if(JSBI.__isBigInt(b))return!1;if(\"object\"!=typeof b)return a==b;b=JSBI.__toPrimitive(b)}else if(\"object\"==typeof a){if(\"object\"==typeof b&&b.constructor!==JSBI)return a==b;a=JSBI.__toPrimitive(a)}else return a==b}}static NE(a,b){return!JSBI.EQ(a,b)}static __zero(){return new JSBI(0,!1)}static __oneDigit(a,b){const c=new JSBI(1,b);return c.__setDigit(0,a),c}__copy(){const a=new JSBI(this.length,this.sign);for(let b=0;b<this.length;b++)a[b]=this[b];return a}__trim(){let a=this.length,b=this[a-1];for(;0===b;)a--,b=this[a-1],this.pop();return 0===a&&(this.sign=!1),this}__initializeDigits(){for(let a=0;a<this.length;a++)this[a]=0}static __decideRounding(a,b,c,d){if(0<b)return-1;let e;if(0>b)e=-b-1;else{if(0===c)return-1;c--,d=a.__digit(c),e=31}let f=1<<e;if(0==(d&f))return-1;if(f-=1,0!=(d&f))return 1;for(;0<c;)if(c--,0!==a.__digit(c))return 1;return 0}static __fromDouble(a){JSBI.__kBitConversionDouble[0]=a;const b=2047&JSBI.__kBitConversionInts[1]>>>20,c=b-1023,d=(c>>>5)+1,e=new JSBI(d,0>a);let f=1048575&JSBI.__kBitConversionInts[1]|1048576,g=JSBI.__kBitConversionInts[0];const h=20,i=31&c;let j,k=0;if(i<20){const a=h-i;k=a+32,j=f>>>a,f=f<<32-a|g>>>a,g<<=32-a}else if(i===20)k=32,j=f,f=g;else{const a=i-h;k=32-a,j=f<<a|g>>>32-a,f=g<<a}e.__setDigit(d-1,j);for(let b=d-2;0<=b;b--)0<k?(k-=32,j=f,f=g):j=0,e.__setDigit(b,j);return e.__trim()}static __isWhitespace(a){return!!(13>=a&&9<=a)||(159>=a?32==a:131071>=a?160==a||5760==a:196607>=a?(a&=131071,10>=a||40==a||41==a||47==a||95==a||4096==a):65279==a)}static __fromString(a,b=0){let c=0;const e=a.length;let f=0;if(f===e)return JSBI.__zero();let g=a.charCodeAt(f);for(;JSBI.__isWhitespace(g);){if(++f===e)return JSBI.__zero();g=a.charCodeAt(f)}if(43===g){if(++f===e)return null;g=a.charCodeAt(f),c=1}else if(45===g){if(++f===e)return null;g=a.charCodeAt(f),c=-1}if(0===b){if(b=10,48===g){if(++f===e)return JSBI.__zero();if(g=a.charCodeAt(f),88===g||120===g){if(b=16,++f===e)return null;g=a.charCodeAt(f)}else if(79===g||111===g){if(b=8,++f===e)return null;g=a.charCodeAt(f)}else if(66===g||98===g){if(b=2,++f===e)return null;g=a.charCodeAt(f)}}}else if(16===b&&48===g){if(++f===e)return JSBI.__zero();if(g=a.charCodeAt(f),88===g||120===g){if(++f===e)return null;g=a.charCodeAt(f)}}for(;48===g;){if(++f===e)return JSBI.__zero();g=a.charCodeAt(f)}const h=e-f;let i=JSBI.__kMaxBitsPerChar[b],j=JSBI.__kBitsPerCharTableMultiplier-1;if(h>1073741824/i)return null;const k=i*h+j>>>JSBI.__kBitsPerCharTableShift,l=new JSBI(k+31>>>5,!1),n=10>b?b:10,o=10<b?b-10:0;if(0==(b&b-1)){i>>=JSBI.__kBitsPerCharTableShift;const b=[],c=[];let d=!1;do{let h=0,j=0;for(;;){let b;if(g-48>>>0<n)b=g-48;else if((32|g)-97>>>0<o)b=(32|g)-87;else{d=!0;break}if(j+=i,h=h<<i|b,++f===e){d=!0;break}if(g=a.charCodeAt(f),32<j+i)break}b.push(h),c.push(j)}while(!d);JSBI.__fillFromParts(l,b,c)}else{l.__initializeDigits();let c=!1,h=0;do{let k=0,p=1;for(;;){let i;if(g-48>>>0<n)i=g-48;else if((32|g)-97>>>0<o)i=(32|g)-87;else{c=!0;break}const d=p*b;if(4294967295<d)break;if(p=d,k=k*b+i,h++,++f===e){c=!0;break}g=a.charCodeAt(f)}j=32*JSBI.__kBitsPerCharTableMultiplier-1;const q=i*h+j>>>JSBI.__kBitsPerCharTableShift+5;l.__inplaceMultiplyAdd(p,k,q)}while(!c)}if(f!==e){if(!JSBI.__isWhitespace(g))return null;for(f++;f<e;f++)if(g=a.charCodeAt(f),!JSBI.__isWhitespace(g))return null}return 0!=c&&10!==b?null:(l.sign=-1==c,l.__trim())}static __fillFromParts(a,b,c){let d=0,e=0,f=0;for(let g=b.length-1;0<=g;g--){const h=b[g],i=c[g];e|=h<<f,f+=i,32===f?(a.__setDigit(d++,e),f=0,e=0):32<f&&(a.__setDigit(d++,e),f-=32,e=h>>>i-f)}if(0!==e){if(d>=a.length)throw new Error(\"implementation bug\");a.__setDigit(d++,e)}for(;d<a.length;d++)a.__setDigit(d,0)}static __toStringBasePowerOfTwo(a,b){var c=Math.clz32;const d=a.length;let e=b-1;e=(85&e>>>1)+(85&e),e=(51&e>>>2)+(51&e),e=(15&e>>>4)+(15&e);const f=e,g=b-1,h=a.__digit(d-1),i=c(h);let j=0|(32*d-i+f-1)/f;if(a.sign&&j++,268435456<j)throw new Error(\"string too long\");const k=Array(j);let l=j-1,m=0,n=0;for(let c=0;c<d-1;c++){const b=a.__digit(c),d=(m|b<<n)&g;k[l--]=JSBI.__kConversionChars[d];const e=f-n;for(m=b>>>e,n=32-e;n>=f;)k[l--]=JSBI.__kConversionChars[m&g],m>>>=f,n-=f}const o=(m|h<<n)&g;for(k[l--]=JSBI.__kConversionChars[o],m=h>>>f-n;0!==m;)k[l--]=JSBI.__kConversionChars[m&g],m>>>=f;if(a.sign&&(k[l--]=\"-\"),-1!=l)throw new Error(\"implementation bug\");return k.join(\"\")}static __toStringGeneric(a,b,c){var d=Math.clz32;const e=a.length;if(0===e)return\"\";if(1===e){let d=a.__unsignedDigit(0).toString(b);return!1===c&&a.sign&&(d=\"-\"+d),d}const f=32*e-d(a.__digit(e-1)),g=JSBI.__kMaxBitsPerChar[b],h=g-1;let i=f*JSBI.__kBitsPerCharTableMultiplier;i+=h-1,i=0|i/h;const j=i+1>>1,k=JSBI.exponentiate(JSBI.__oneDigit(b,!1),JSBI.__oneDigit(j,!1));let l,m;const n=k.__unsignedDigit(0);if(1===k.length&&65535>=n){l=new JSBI(a.length,!1),l.__initializeDigits();let c=0;for(let b=2*a.length-1;0<=b;b--){const d=c<<16|a.__halfDigit(b);l.__setHalfDigit(b,0|d/n),c=0|d%n}m=c.toString(b)}else{const c=JSBI.__absoluteDivLarge(a,k,!0,!0);l=c.quotient;const d=c.remainder.__trim();m=JSBI.__toStringGeneric(d,b,!0)}l.__trim();let o=JSBI.__toStringGeneric(l,b,!0);for(;m.length<j;)m=\"0\"+m;return!1===c&&a.sign&&(o=\"-\"+o),o+m}static __unequalSign(a){return a?-1:1}static __absoluteGreater(a){return a?-1:1}static __absoluteLess(a){return a?1:-1}static __compareToBigInt(a,b){const c=a.sign;if(c!==b.sign)return JSBI.__unequalSign(c);const d=JSBI.__absoluteCompare(a,b);return 0<d?JSBI.__absoluteGreater(c):0>d?JSBI.__absoluteLess(c):0}static __compareToNumber(a,b){if(b|!0){const c=a.sign,d=0>b;if(c!==d)return JSBI.__unequalSign(c);if(0===a.length){if(d)throw new Error(\"implementation bug\");return 0===b?0:-1}if(1<a.length)return JSBI.__absoluteGreater(c);const e=Math.abs(b),f=a.__unsignedDigit(0);return f>e?JSBI.__absoluteGreater(c):f<e?JSBI.__absoluteLess(c):0}return JSBI.__compareToDouble(a,b)}static __compareToDouble(a,b){var c=Math.clz32;if(b!==b)return b;if(b===1/0)return-1;if(b===-Infinity)return 1;const d=a.sign;if(d!==0>b)return JSBI.__unequalSign(d);if(0===b)throw new Error(\"implementation bug: should be handled elsewhere\");if(0===a.length)return-1;JSBI.__kBitConversionDouble[0]=b;const e=2047&JSBI.__kBitConversionInts[1]>>>20;if(2047==e)throw new Error(\"implementation bug: handled elsewhere\");const f=e-1023;if(0>f)return JSBI.__absoluteGreater(d);const g=a.length;let h=a.__digit(g-1);const i=c(h),j=32*g-i,k=f+1;if(j<k)return JSBI.__absoluteLess(d);if(j>k)return JSBI.__absoluteGreater(d);let l=1048576|1048575&JSBI.__kBitConversionInts[1],m=JSBI.__kBitConversionInts[0];const n=20,o=31-i;if(o!==(j-1)%31)throw new Error(\"implementation bug\");let p,q=0;if(20>o){const a=n-o;q=a+32,p=l>>>a,l=l<<32-a|m>>>a,m<<=32-a}else if(20===o)q=32,p=l,l=m;else{const a=o-n;q=32-a,p=l<<a|m>>>32-a,l=m<<a}if(h>>>=0,p>>>=0,h>p)return JSBI.__absoluteGreater(d);if(h<p)return JSBI.__absoluteLess(d);for(let c=g-2;0<=c;c--){0<q?(q-=32,p=l>>>0,l=m,m=0):p=0;const b=a.__unsignedDigit(c);if(b>p)return JSBI.__absoluteGreater(d);if(b<p)return JSBI.__absoluteLess(d)}if(0!==l||0!==m){if(0===q)throw new Error(\"implementation bug\");return JSBI.__absoluteLess(d)}return 0}static __equalToNumber(a,b){var c=Math.abs;return b|0===b?0===b?0===a.length:1===a.length&&a.sign===0>b&&a.__unsignedDigit(0)===c(b):0===JSBI.__compareToDouble(a,b)}static __comparisonResultToBool(a,b){switch(b){case 0:return 0>a;case 1:return 0>=a;case 2:return 0<a;case 3:return 0<=a;}throw new Error(\"unreachable\")}static __compare(a,b,c){if(a=JSBI.__toPrimitive(a),b=JSBI.__toPrimitive(b),\"string\"==typeof a&&\"string\"==typeof b)switch(c){case 0:return a<b;case 1:return a<=b;case 2:return a>b;case 3:return a>=b;}if(JSBI.__isBigInt(a)&&\"string\"==typeof b)return b=JSBI.__fromString(b),null!==b&&JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(a,b),c);if(\"string\"==typeof a&&JSBI.__isBigInt(b))return a=JSBI.__fromString(a),null!==a&&JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(a,b),c);if(a=JSBI.__toNumeric(a),b=JSBI.__toNumeric(b),JSBI.__isBigInt(a)){if(JSBI.__isBigInt(b))return JSBI.__comparisonResultToBool(JSBI.__compareToBigInt(a,b),c);if(\"number\"!=typeof b)throw new Error(\"implementation bug\");return JSBI.__comparisonResultToBool(JSBI.__compareToNumber(a,b),c)}if(\"number\"!=typeof a)throw new Error(\"implementation bug\");if(JSBI.__isBigInt(b))return JSBI.__comparisonResultToBool(JSBI.__compareToNumber(b,a),2^c);if(\"number\"!=typeof b)throw new Error(\"implementation bug\");return 0===c?a<b:1===c?a<=b:2===c?a>b:3===c?a>=b:void 0}__clzmsd(){return Math.clz32(this[this.length-1])}static __absoluteAdd(a,b,c){if(a.length<b.length)return JSBI.__absoluteAdd(b,a,c);if(0===a.length)return a;if(0===b.length)return a.sign===c?a:JSBI.unaryMinus(a);let d=a.length;(0===a.__clzmsd()||b.length===a.length&&0===b.__clzmsd())&&d++;const e=new JSBI(d,c);let f=0,g=0;for(;g<b.length;g++){const c=b.__digit(g),d=a.__digit(g),h=(65535&d)+(65535&c)+f,i=(d>>>16)+(c>>>16)+(h>>>16);f=i>>>16,e.__setDigit(g,65535&h|i<<16)}for(;g<a.length;g++){const b=a.__digit(g),c=(65535&b)+f,d=(b>>>16)+(c>>>16);f=d>>>16,e.__setDigit(g,65535&c|d<<16)}return g<e.length&&e.__setDigit(g,f),e.__trim()}static __absoluteSub(a,b,c){if(0===a.length)return a;if(0===b.length)return a.sign===c?a:JSBI.unaryMinus(a);const d=new JSBI(a.length,c);let e=0,f=0;for(;f<b.length;f++){const c=a.__digit(f),g=b.__digit(f),h=(65535&c)-(65535&g)-e;e=1&h>>>16;const i=(c>>>16)-(g>>>16)-e;e=1&i>>>16,d.__setDigit(f,65535&h|i<<16)}for(;f<a.length;f++){const b=a.__digit(f),c=(65535&b)-e;e=1&c>>>16;const g=(b>>>16)-e;e=1&g>>>16,d.__setDigit(f,65535&c|g<<16)}return d.__trim()}static __absoluteAddOne(a,b,c=null){const d=a.length;null===c?c=new JSBI(d,b):c.sign=b;let e=!0;for(let f,g=0;g<d;g++){if(f=a.__digit(g),e){const a=-1===f;f=0|f+1,e=a}c.__setDigit(g,f)}return e&&c.__setDigitGrow(d,1),c}static __absoluteSubOne(a,b){const c=a.length;b=b||c;const d=new JSBI(b,!1);let e=!0;for(let f,g=0;g<c;g++){if(f=a.__digit(g),e){const a=0===f;f=0|f-1,e=a}d.__setDigit(g,f)}if(e)throw new Error(\"implementation bug\");for(let e=c;e<b;e++)d.__setDigit(e,0);return d}static __absoluteAnd(a,b,c=null){let d=a.length,e=b.length,f=e;if(d<e){f=d;const c=a,g=d;a=b,d=e,b=c,e=g}let g=f;null===c?c=new JSBI(g,!1):g=c.length;let h=0;for(;h<f;h++)c.__setDigit(h,a.__digit(h)&b.__digit(h));for(;h<g;h++)c.__setDigit(h,0);return c}static __absoluteAndNot(a,b,c=null){const d=a.length,e=b.length;let f=e;d<e&&(f=d);let g=d;null===c?c=new JSBI(g,!1):g=c.length;let h=0;for(;h<f;h++)c.__setDigit(h,a.__digit(h)&~b.__digit(h));for(;h<d;h++)c.__setDigit(h,a.__digit(h));for(;h<g;h++)c.__setDigit(h,0);return c}static __absoluteOr(a,b,c=null){let d=a.length,e=b.length,f=e;if(d<e){f=d;const c=a,g=d;a=b,d=e,b=c,e=g}let g=d;null===c?c=new JSBI(g,!1):g=c.length;let h=0;for(;h<f;h++)c.__setDigit(h,a.__digit(h)|b.__digit(h));for(;h<d;h++)c.__setDigit(h,a.__digit(h));for(;h<g;h++)c.__setDigit(h,0);return c}static __absoluteXor(a,b,c=null){let d=a.length,e=b.length,f=e;if(d<e){f=d;const c=a,g=d;a=b,d=e,b=c,e=g}let g=d;null===c?c=new JSBI(g,!1):g=c.length;let h=0;for(;h<f;h++)c.__setDigit(h,a.__digit(h)^b.__digit(h));for(;h<d;h++)c.__setDigit(h,a.__digit(h));for(;h<g;h++)c.__setDigit(h,0);return c}static __absoluteCompare(a,b){const c=a.length-b.length;if(0!=c)return c;let d=a.length-1;for(;0<=d&&a.__digit(d)===b.__digit(d);)d--;return 0>d?0:a.__unsignedDigit(d)>b.__unsignedDigit(d)?1:-1}static __multiplyAccumulate(a,b,c,d){var e=Math.imul;if(0===b)return;const f=65535&b,g=b>>>16;let h=0,j=0,k=0;for(let l=0;l<a.length;l++,d++){let b=c.__digit(d),i=65535&b,m=b>>>16;const n=a.__digit(l),o=65535&n,p=n>>>16,q=e(o,f),r=e(o,g),s=e(p,f),t=e(p,g);i+=j+(65535&q),m+=k+h+(i>>>16)+(q>>>16)+(65535&r)+(65535&s),h=m>>>16,j=(r>>>16)+(s>>>16)+(65535&t)+h,h=j>>>16,j&=65535,k=t>>>16,b=65535&i|m<<16,c.__setDigit(d,b)}for(;0!=h||0!==j||0!==k;d++){let a=c.__digit(d);const b=(65535&a)+j,e=(a>>>16)+(b>>>16)+k+h;j=0,k=0,h=e>>>16,a=65535&b|e<<16,c.__setDigit(d,a)}}static __internalMultiplyAdd(a,b,c,d,e){var f=Math.imul;let g=c,h=0;for(let j=0;j<d;j++){const c=a.__digit(j),d=f(65535&c,b),i=(65535&d)+h+g;g=i>>>16;const k=f(c>>>16,b),l=(65535&k)+(d>>>16)+g;g=l>>>16,h=k>>>16,e.__setDigit(j,l<<16|65535&i)}if(e.length>d)for(e.__setDigit(d++,g+h);d<e.length;)e.__setDigit(d++,0);else if(0!==g+h)throw new Error(\"implementation bug\")}__inplaceMultiplyAdd(a,b,c){var e=Math.imul;c>this.length&&(c=this.length);const f=65535&a,g=a>>>16;let h=0,j=65535&b,k=b>>>16;for(let l=0;l<c;l++){const a=this.__digit(l),b=65535&a,c=a>>>16,d=e(b,f),i=e(b,g),m=e(c,f),n=e(c,g),o=j+(65535&d),p=k+h+(o>>>16)+(d>>>16)+(65535&i)+(65535&m);j=(i>>>16)+(m>>>16)+(65535&n)+(p>>>16),h=j>>>16,j&=65535,k=n>>>16;this.__setDigit(l,65535&o|p<<16)}if(0!=h||0!==j||0!==k)throw new Error(\"implementation bug\")}static __absoluteDivSmall(a,b,c){null===c&&(c=new JSBI(a.length,!1));let d=0;for(let e,f=2*a.length-1;0<=f;f-=2){e=(d<<16|a.__halfDigit(f))>>>0;const g=0|e/b;d=0|e%b,e=(d<<16|a.__halfDigit(f-1))>>>0;const h=0|e/b;d=0|e%b,c.__setDigit(f>>>1,g<<16|h)}return c}static __absoluteModSmall(a,b){let c=0;for(let d=2*a.length-1;0<=d;d--){const e=(c<<16|a.__halfDigit(d))>>>0;c=0|e%b}return c}static __absoluteDivLarge(a,b,d,e){var f=Math.imul;const g=b.__halfDigitLength(),h=b.length,c=a.__halfDigitLength()-g;let i=null;d&&(i=new JSBI(c+2>>>1,!1),i.__initializeDigits());const k=new JSBI(g+2>>>1,!1);k.__initializeDigits();const l=JSBI.__clz16(b.__halfDigit(g-1));0<l&&(b=JSBI.__specialLeftShift(b,l,0));const m=JSBI.__specialLeftShift(a,l,1),n=b.__halfDigit(g-1);let o=0;for(let l,p=c;0<=p;p--){l=65535;const a=m.__halfDigit(p+g);if(a!==n){const c=(a<<16|m.__halfDigit(p+g-1))>>>0;l=0|c/n;let d=0|c%n;const e=b.__halfDigit(g-2),h=m.__halfDigit(p+g-2);for(;f(l,e)>>>0>(d<<16|h)>>>0&&(l--,d+=n,!(65535<d)););}JSBI.__internalMultiplyAdd(b,l,0,h,k);let e=m.__inplaceSub(k,p,g+1);0!==e&&(e=m.__inplaceAdd(b,p,g),m.__setHalfDigit(p+g,m.__halfDigit(p+g)+e),l--),d&&(1&p?o=l<<16:i.__setDigit(p>>>1,o|l))}return e?(m.__inplaceRightShift(l),d?{quotient:i,remainder:m}:m):d?i:void 0}static __clz16(a){return Math.clz32(a)-16}__inplaceAdd(a,b,c){let d=0;for(let e=0;e<c;e++){const c=this.__halfDigit(b+e)+a.__halfDigit(e)+d;d=c>>>16,this.__setHalfDigit(b+e,c)}return d}__inplaceSub(a,b,c){let d=0;if(1&b){b>>=1;let e=this.__digit(b),f=65535&e,g=0;for(;g<c-1>>>1;g++){const c=a.__digit(g),h=(e>>>16)-(65535&c)-d;d=1&h>>>16,this.__setDigit(b+g,h<<16|65535&f),e=this.__digit(b+g+1),f=(65535&e)-(c>>>16)-d,d=1&f>>>16}const h=a.__digit(g),i=(e>>>16)-(65535&h)-d;d=1&i>>>16,this.__setDigit(b+g,i<<16|65535&f);if(b+g+1>=this.length)throw new RangeError(\"out of bounds\");0==(1&c)&&(e=this.__digit(b+g+1),f=(65535&e)-(h>>>16)-d,d=1&f>>>16,this.__setDigit(b+a.length,4294901760&e|65535&f))}else{b>>=1;let e=0;for(;e<a.length-1;e++){const c=this.__digit(b+e),f=a.__digit(e),g=(65535&c)-(65535&f)-d;d=1&g>>>16;const h=(c>>>16)-(f>>>16)-d;d=1&h>>>16,this.__setDigit(b+e,h<<16|65535&g)}const f=this.__digit(b+e),g=a.__digit(e),h=(65535&f)-(65535&g)-d;d=1&h>>>16;let i=0;0==(1&c)&&(i=(f>>>16)-(g>>>16)-d,d=1&i>>>16),this.__setDigit(b+e,i<<16|65535&h)}return d}__inplaceRightShift(a){if(0===a)return;let b=this.__digit(0)>>>a;const c=this.length-1;for(let e=0;e<c;e++){const c=this.__digit(e+1);this.__setDigit(e,c<<32-a|b),b=c>>>a}this.__setDigit(c,b)}static __specialLeftShift(a,b,c){const d=a.length,e=new JSBI(d+c,!1);if(0===b){for(let b=0;b<d;b++)e.__setDigit(b,a.__digit(b));return 0<c&&e.__setDigit(d,0),e}let f=0;for(let g=0;g<d;g++){const c=a.__digit(g);e.__setDigit(g,c<<b|f),f=c>>>32-b}return 0<c&&e.__setDigit(d,f),e}static __leftShiftByAbsolute(a,b){const c=JSBI.__toShiftAmount(b);if(0>c)throw new RangeError(\"BigInt too big\");const e=c>>>5,f=31&c,g=a.length,h=0!==f&&0!=a.__digit(g-1)>>>32-f,j=g+e+(h?1:0),k=new JSBI(j,a.sign);if(0===f){let b=0;for(;b<e;b++)k.__setDigit(b,0);for(;b<j;b++)k.__setDigit(b,a.__digit(b-e))}else{let b=0;for(let a=0;a<e;a++)k.__setDigit(a,0);for(let c=0;c<g;c++){const g=a.__digit(c);k.__setDigit(c+e,g<<f|b),b=g>>>32-f}if(h)k.__setDigit(g+e,b);else if(0!==b)throw new Error(\"implementation bug\")}return k.__trim()}static __rightShiftByAbsolute(a,b){const c=a.length,d=a.sign,e=JSBI.__toShiftAmount(b);if(0>e)return JSBI.__rightShiftByMaximum(d);const f=e>>>5,g=31&e;let h=c-f;if(0>=h)return JSBI.__rightShiftByMaximum(d);let i=!1;if(d){if(0!=(a.__digit(f)&(1<<g)-1))i=!0;else for(let b=0;b<f;b++)if(0!==a.__digit(b)){i=!0;break}}if(i&&0===g){const b=a.__digit(c-1);0==~b&&h++}let j=new JSBI(h,d);if(0===g)for(let b=f;b<c;b++)j.__setDigit(b-f,a.__digit(b));else{let b=a.__digit(f)>>>g;const d=c-f-1;for(let c=0;c<d;c++){const e=a.__digit(c+f+1);j.__setDigit(c,e<<32-g|b),b=e>>>g}j.__setDigit(d,b)}return i&&(j=JSBI.__absoluteAddOne(j,!0,j)),j.__trim()}static __rightShiftByMaximum(a){return a?JSBI.__oneDigit(1,!0):JSBI.__zero()}static __toShiftAmount(a){if(1<a.length)return-1;const b=a.__unsignedDigit(0);return b>JSBI.__kMaxLengthBits?-1:b}static __toPrimitive(a,b=\"default\"){if(\"object\"!=typeof a)return a;if(a.constructor===JSBI)return a;const c=a[Symbol.toPrimitive];if(c){const a=c(b);if(\"object\"!=typeof a)return a;throw new TypeError(\"Cannot convert object to primitive value\")}const d=a.valueOf;if(d){const b=d.call(a);if(\"object\"!=typeof b)return b}const e=a.toString;if(e){const b=e.call(a);if(\"object\"!=typeof b)return b}throw new TypeError(\"Cannot convert object to primitive value\")}static __toNumeric(a){return JSBI.__isBigInt(a)?a:+a}static __isBigInt(a){return\"object\"==typeof a&&a.constructor===JSBI}static __truncateToNBits(a,b){const c=a+31>>>5,d=new JSBI(c,b.sign),e=c-1;for(let c=0;c<e;c++)d.__setDigit(c,b.__digit(c));let f=b.__digit(e);if(0!=(31&a)){const b=32-(31&a);f=f<<b>>>b}return d.__setDigit(e,f),d.__trim()}static __truncateAndSubFromPowerOfTwo(a,b,c){var d=Math.min;const e=a+31>>>5,f=new JSBI(e,c);let g=0;const h=e-1;let j=0;for(const e=d(h,b.length);g<e;g++){const a=b.__digit(g),c=0-(65535&a)-j;j=1&c>>>16;const d=0-(a>>>16)-j;j=1&d>>>16,f.__setDigit(g,65535&c|d<<16)}for(;g<h;g++)f.__setDigit(g,0|-j);let k=h<b.length?b.__digit(h):0;const l=31&a;let m;if(0==l){const a=0-(65535&k)-j;j=1&a>>>16;const b=0-(k>>>16)-j;m=65535&a|b<<16}else{const a=32-l;k=k<<a>>>a;const b=1<<32-a,c=(65535&b)-(65535&k)-j;j=1&c>>>16;const d=(b>>>16)-(k>>>16)-j;m=65535&c|d<<16,m&=b-1}return f.__setDigit(h,m),f.__trim()}__digit(a){return this[a]}__unsignedDigit(a){return this[a]>>>0}__setDigit(a,b){this[a]=0|b}__setDigitGrow(a,b){this[a]=0|b}__halfDigitLength(){const a=this.length;return 65535>=this.__unsignedDigit(a-1)?2*a-1:2*a}__halfDigit(a){return 65535&this[a>>>1]>>>((1&a)<<4)}__setHalfDigit(a,b){const c=a>>>1,d=this.__digit(c),e=1&a?65535&d|b<<16:4294901760&d|65535&b;this.__setDigit(c,e)}static __digitPow(a,b){let c=1;for(;0<b;)1&b&&(c*=a),b>>>=1,a*=a;return c}}JSBI.__kMaxLength=33554432,JSBI.__kMaxLengthBits=JSBI.__kMaxLength<<5,JSBI.__kMaxBitsPerChar=[0,0,32,51,64,75,83,90,96,102,107,111,115,119,122,126,128,131,134,136,139,141,143,145,147,149,151,153,154,156,158,159,160,162,163,165,166],JSBI.__kBitsPerCharTableShift=5,JSBI.__kBitsPerCharTableMultiplier=1<<JSBI.__kBitsPerCharTableShift,JSBI.__kConversionChars=[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"],JSBI.__kBitConversionBuffer=new ArrayBuffer(8),JSBI.__kBitConversionDouble=new Float64Array(JSBI.__kBitConversionBuffer),JSBI.__kBitConversionInts=new Int32Array(JSBI.__kBitConversionBuffer);export default JSBI;\n","import JSBI from 'jsbi'\n\n/**\n * Re-maps a number from one range to another.\n *\n * In the example above, the number '25' is converted from a value in the range\n * 0..100 into a value that ranges from the left edge (0) to the right edge\n * (width) of the screen. Numbers outside the range are not clamped to 0 and 1,\n * because out-of-range values are often intentional and useful.\n *\n * From Processing.js\n *\n * @param {Number} value        The incoming value to be converted\n * @param {Number} istart       Lower bound of the value's current range\n * @param {Number} istop        Upper bound of the value's current range\n * @param {Number} ostart       Lower bound of the value's target range\n * @param {Number} ostop        Upper bound of the value's target range\n * @returns {Number}\n */\nexport function map(value, istart, istop, ostart, ostop) {\n  return ostart + (ostop - ostart) * ((value - istart) / (istop - istart))\n}\n\n/**\n * Normalizes a number from another range into a value between 0 and 1.\n *\n * Identical to map(value, low, high, 0, 1)\n * Numbers outside the range are not clamped to 0 and 1, because out-of-range\n * values are often intentional and useful.\n *\n * From Processing.js\n *\n * @param {Number} aNumber    The incoming value to be converted\n * @param {Number} low        Lower bound of the value's current range\n * @param {Number} high       Upper bound of the value's current range\n * @returns {Number}\n */\nexport function norm(aNumber, low, high) {\n  return (aNumber - low) / (high - low)\n}\n\n/**\n * Calculates a number between two numbers at a specific increment. The\n * progress parameter is the amount to interpolate between the two values where\n * 0.0 equal to the first point, 0.1 is very near the first point, 0.5 is\n * half-way in between, etc. The lerp function is convenient for creating\n * motion along a straight path and for drawing dotted lines.\n *\n * From Processing.js\n *\n * @param {Number} progress     between 0.0 and 1.0\n * @param {Number} value1       first value\n * @param {Number} value2       second value\n * @returns {Number}\n */\nexport function lerp(progress, value1, value2) {\n  return (value2 - value1) * progress + value1\n}\n\n/**\n * Constrains a value to not exceed a maximum and minimum value.\n *\n * From Processing.js\n *\n * @param {Number} value   the value to constrain\n * @param {Number} value   minimum limit\n * @param {Number} value   maximum limit\n * @returns {Number}\n */\nexport function clamp(value, min = 0, max = 1) {\n  return Math.min(max, Math.max(min, value))\n}\n\n/**\n * Returns a random integer between min (included) and max (excluded)\n * Note: Using Math.round() would give a non-uniform distribution\n *\n * From Mozilla MDN\n *\n * @param {Number} min    The minimum number (included)\n * @param {Number} max    The maximum number (excluded)\n * @returns {Number}\n */\nexport function randomInt(min, max) {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  return Math.floor(Math.random() * (max - min)) + min\n}\n\n/**\n * Random number between two values.\n *\n * From Mozilla MDN\n *\n * @param {Number} min The minimum number (included)\n * @param {Number} max The maximum number (excluded)\n * @returns {Number}\n */\nexport function random(min = 0, max = 1) {\n  return Math.floor(Math.random() * (max - min)) + min\n}\n\n/**\n * Divide and round two big integers.\n *\n * @param {BigInt|string|number} dividend Integer to be divided + rounded\n * @param {BigInt|string|number} divisor  Divisor\n * @returns {string}\n */\nexport function divideRoundBigInt(dividend, divisor) {\n  dividend = JSBI.BigInt(String(dividend))\n  divisor = JSBI.BigInt(String(divisor))\n  return JSBI.divide(\n    JSBI.add(dividend, JSBI.divide(divisor, JSBI.BigInt(2))),\n    divisor\n  ).toString()\n}\n"]},"metadata":{},"sourceType":"script"}