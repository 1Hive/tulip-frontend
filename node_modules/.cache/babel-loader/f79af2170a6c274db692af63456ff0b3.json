{"ast":null,"code":"import { _ as _slicedToArray } from './slicedToArray-ad07b557.js';\nimport './unsupportedIterableToArray-aef68344.js';\nimport React, { useState } from 'react';\nimport './_commonjsHelpers-97e6d7b1.js';\nimport { P as PropTypes } from './index-097535f1.js';\nimport './defineProperty-a0480c32.js';\nimport './toConsumableArray-07f01111.js';\nimport _styled from 'styled-components';\nimport './getPrototypeOf-97db713a.js';\nimport './color.js';\nimport './components.js';\nimport './contains-component.js';\nimport './css.js';\nimport './dayjs.min-e57fb69a.js';\nimport './date.js';\nimport { noop } from './miscellaneous.js';\nimport './environment.js';\nimport './font.js';\nimport './math-e6d0e93a.js';\nimport './characters.js';\nimport './format.js';\nimport './keycodes.js';\nimport './url.js';\nimport './web3.js';\nimport { GU } from './constants.js';\nimport './breakpoints.js';\nimport { springs } from './springs.js';\nimport './text-styles.js';\nimport './theme-dark.js';\nimport './theme-light.js';\nimport { useTheme } from './Theme.js';\nimport FocusVisible from './FocusVisible.js';\nimport './objectWithoutPropertiesLoose-9606ad13.js';\nimport 'react-dom';\nimport { e as extendedAnimated, S as Spring } from './web-a351a0a1.js';\nvar BORDER = 1;\nvar WRAPPER_WIDTH = 5 * GU;\nvar WRAPPER_HEIGHT = 2.25 * GU;\n\nvar _StyledSpan = _styled(\"span\").withConfig({\n  displayName: \"Switch___StyledSpan\",\n  componentId: \"sc-1t21muv-0\"\n})([\"position:relative;display:inline-block;width:\", \"px;height:\", \"px;border:\", \"px solid \", \";border-radius:\", \"px;background-color:\", \";cursor:\", \";\", \" \", \";\"], WRAPPER_WIDTH, WRAPPER_HEIGHT, BORDER, function (p) {\n  return p._css;\n}, WRAPPER_HEIGHT, function (p) {\n  return p._css2;\n}, function (p) {\n  return p._css3;\n}, function (p) {\n  return p._css4;\n}, function (p) {\n  return p._css5;\n});\n\nvar _StyledInput = _styled(\"input\").withConfig({\n  displayName: \"Switch___StyledInput\",\n  componentId: \"sc-1t21muv-1\"\n})([\"opacity:0;pointer-events:none;\"]);\n\nvar _StyledAnimatedSpan = _styled(extendedAnimated.span).withConfig({\n  displayName: \"Switch___StyledAnimatedSpan\",\n  componentId: \"sc-1t21muv-2\"\n})([\"position:absolute;left:0;z-index:1;top:\", \"px;width:\", \"px;height:\", \"px;border-radius:\", \"px;background-color:\", \";box-shadow:\", \";\"], BORDER, function (p) {\n  return p._css6;\n}, function (p) {\n  return p._css7;\n}, function (p) {\n  return p._css8;\n}, function (p) {\n  return p._css9;\n}, function (p) {\n  return p._css10;\n});\n\nfunction Switch(_ref) {\n  var checked = _ref.checked,\n      disabled = _ref.disabled,\n      onChange = _ref.onChange;\n  var theme = useTheme();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFocused = _useState2[0],\n      setIsFocused = _useState2[1];\n\n  var handleChange = disabled ? noop : function () {\n    return onChange(!checked);\n  };\n  return /*#__PURE__*/React.createElement(FocusVisible, null, function (_ref2) {\n    var focusVisible = _ref2.focusVisible,\n        _onFocus = _ref2.onFocus;\n    return /*#__PURE__*/React.createElement(_StyledSpan, {\n      onClick: function onClick(e) {\n        e.preventDefault();\n        handleChange();\n      },\n      _css: theme.border,\n      _css2: disabled ? theme.controlBorder : checked ? theme.selected : theme.control,\n      _css3: disabled ? 'default' : 'pointer',\n      _css4: disabled ? '' : \"\\n                  &:active {\\n                    border-color: \".concat(theme.controlBorderPressed, \";\\n                  }\\n                \"),\n      _css5: isFocused && focusVisible ? \"\\n                  &:after {\\n                    content: '';\\n                    position: absolute;\\n                    left: \".concat(-BORDER * 2, \"px;\\n                    top: \").concat(-BORDER * 2, \"px;\\n                    width: \").concat(WRAPPER_WIDTH + BORDER * 2, \"px;\\n                    height: \").concat(WRAPPER_HEIGHT + BORDER * 2, \"px;\\n                    border-radius: \").concat(WRAPPER_HEIGHT, \"px;\\n                    border: 2px solid \").concat(theme.focus, \";\\n                  }\\n                \") : ''\n    }, /*#__PURE__*/React.createElement(_StyledInput, {\n      type: \"checkbox\",\n      onFocus: function onFocus() {\n        setIsFocused(true);\n\n        _onFocus();\n      },\n      onBlur: function onBlur() {\n        return setIsFocused(false);\n      },\n      checked: checked,\n      disabled: disabled,\n      onChange: handleChange\n    }), /*#__PURE__*/React.createElement(Spring, {\n      to: {\n        progress: checked ? WRAPPER_WIDTH - WRAPPER_HEIGHT + BORDER : BORDER\n      },\n      config: springs.smooth,\n      native: true\n    }, function (_ref3) {\n      var progress = _ref3.progress;\n      return /*#__PURE__*/React.createElement(_StyledAnimatedSpan, {\n        style: {\n          transform: progress.interpolate(function (v) {\n            return \"translate3d(\".concat(v, \"px, 0, 0)\");\n          })\n        },\n        _css6: WRAPPER_HEIGHT - BORDER * 4,\n        _css7: WRAPPER_HEIGHT - BORDER * 4,\n        _css8: WRAPPER_HEIGHT - BORDER * 4,\n        _css9: theme.controlSurface,\n        _css10: disabled ? 'none' : '0px 1px 3px rgba(0, 0, 0, 0.15)'\n      });\n    }));\n  });\n}\n\nSwitch.propTypes = {\n  checked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func\n};\nSwitch.defaultProps = {\n  checked: false,\n  disabled: false,\n  onChange: noop\n};\nexport default Switch;","map":null,"metadata":{},"sourceType":"module"}