{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Workflows = void 0;\n\nconst core_1 = require(\"../core\");\n\nclass Workflows extends core_1.CrowdinApi {\n  /**\n   * @param groupId group identifier\n   * @param limit maximum number of items to retrieve (default 25)\n   * @param offset starting offset in the collection (default 0)\n   */\n  listWorkflowTemplates(groupId, limit, offset) {\n    let url = `${this.url}/workflow-templates`;\n    url = this.addQueryParam(url, 'groupId', groupId);\n    return this.getList(url, limit, offset);\n  }\n  /**\n   * @param templateId workflow template identifier\n   */\n\n\n  getWorkflowTemplateInfo(templateId) {\n    const url = `${this.url}/workflow-templates/${templateId}`;\n    return this.get(url, this.defaultConfig());\n  }\n\n}\n\nexports.Workflows = Workflows;","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/node_modules/@crowdin/crowdin-api-client/out/workflows/index.js"],"names":["Object","defineProperty","exports","value","Workflows","core_1","require","CrowdinApi","listWorkflowTemplates","groupId","limit","offset","url","addQueryParam","getList","getWorkflowTemplateInfo","templateId","get","defaultConfig"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,SAAR,GAAoB,KAAK,CAAzB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AACA,MAAMF,SAAN,SAAwBC,MAAM,CAACE,UAA/B,CAA0C;AACtC;AACJ;AACA;AACA;AACA;AACIC,EAAAA,qBAAqB,CAACC,OAAD,EAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AAC1C,QAAIC,GAAG,GAAI,GAAE,KAAKA,GAAI,qBAAtB;AACAA,IAAAA,GAAG,GAAG,KAAKC,aAAL,CAAmBD,GAAnB,EAAwB,SAAxB,EAAmCH,OAAnC,CAAN;AACA,WAAO,KAAKK,OAAL,CAAaF,GAAb,EAAkBF,KAAlB,EAAyBC,MAAzB,CAAP;AACH;AACD;AACJ;AACA;;;AACII,EAAAA,uBAAuB,CAACC,UAAD,EAAa;AAChC,UAAMJ,GAAG,GAAI,GAAE,KAAKA,GAAI,uBAAsBI,UAAW,EAAzD;AACA,WAAO,KAAKC,GAAL,CAASL,GAAT,EAAc,KAAKM,aAAL,EAAd,CAAP;AACH;;AAjBqC;;AAmB1ChB,OAAO,CAACE,SAAR,GAAoBA,SAApB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Workflows = void 0;\nconst core_1 = require(\"../core\");\nclass Workflows extends core_1.CrowdinApi {\n    /**\n     * @param groupId group identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    listWorkflowTemplates(groupId, limit, offset) {\n        let url = `${this.url}/workflow-templates`;\n        url = this.addQueryParam(url, 'groupId', groupId);\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param templateId workflow template identifier\n     */\n    getWorkflowTemplateInfo(templateId) {\n        const url = `${this.url}/workflow-templates/${templateId}`;\n        return this.get(url, this.defaultConfig());\n    }\n}\nexports.Workflows = Workflows;\n"]},"metadata":{},"sourceType":"script"}