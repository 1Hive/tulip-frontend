{"ast":null,"code":"'use strict';\n\nconst CID = require('cids');\n\nconst UnixFs = require('ipfs-unixfs');\n\nconst {\n  DAGNode\n} = require('ipld-dag-pb');\n\nconst log = require('debug')('ipfs:mfs:utils:with-mfs-root');\n\nconst mc = require('multicodec');\n\nconst mh = require('multihashes');\n\nconst {\n  MFS_ROOT_KEY\n} = require('../../../utils');\n\nconst loadMfsRoot = async context => {\n  // Open the repo if it's been closed\n  await context.repo.datastore.open(); // Load the MFS root CID\n\n  let cid;\n\n  try {\n    const buf = await context.repo.datastore.get(MFS_ROOT_KEY);\n    cid = new CID(buf);\n  } catch (err) {\n    if (err.code !== 'ERR_NOT_FOUND') {\n      throw err;\n    }\n\n    log('Creating new MFS root');\n    const node = new DAGNode(new UnixFs({\n      type: 'directory'\n    }).marshal());\n    cid = await context.ipld.put(node, mc.DAG_PB, {\n      cidVersion: 0,\n      hashAlg: mh.names['sha2-256'] // why can't ipld look this up?\n\n    });\n    await context.repo.datastore.put(MFS_ROOT_KEY, cid.buffer);\n  }\n\n  log(`Loaded MFS root /ipfs/${cid}`);\n  return cid;\n};\n\nmodule.exports = loadMfsRoot;","map":null,"metadata":{},"sourceType":"script"}