{"ast":null,"code":"'use strict';\n\nconst hamtShardedDirectoryContent = (cid, node, unixfs, path, resolve, depth, ipld) => {\n  return (options = {}) => {\n    return listDirectory(node, path, resolve, depth, ipld, options);\n  };\n};\n\nasync function* listDirectory(node, path, resolve, depth, ipld, options) {\n  const links = node.Links;\n\n  for (const link of links) {\n    const name = link.Name.substring(2);\n\n    if (name) {\n      const result = await resolve(link.Hash, name, `${path}/${name}`, [], depth + 1, ipld);\n      yield result.entry;\n    } else {\n      // descend into subshard\n      node = await ipld.get(link.Hash);\n\n      for await (const file of listDirectory(node, path, resolve, depth, ipld, options)) {\n        yield file;\n      }\n    }\n  }\n}\n\nmodule.exports = hamtShardedDirectoryContent;","map":null,"metadata":{},"sourceType":"script"}