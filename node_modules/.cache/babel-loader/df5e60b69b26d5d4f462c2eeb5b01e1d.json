{"ast":null,"code":"import './_commonjsHelpers-97e6d7b1.js';\nimport { _ as _defineProperty } from './defineProperty-a0480c32.js';\nimport { d as dayjs } from './dayjs.min-e57fb69a.js';\n\nfunction handleDateSelect(_ref) {\n  var date = _ref.date,\n      startDate = _ref.startDate,\n      endDate = _ref.endDate; // clicking on start date resets it, so it can be re-picked\n\n  if (startDate && dayjs(date).isSame(startDate, 'day')) {\n    return {\n      startDate: null\n    };\n  } // clicking on end date resets it, so it can be re-picked\n\n\n  if (endDate && dayjs(date).isSame(endDate, 'day')) {\n    return {\n      endDate: null\n    };\n  }\n\n  var isValidStartDate = !endDate || !dayjs(date).isAfter(endDate);\n  var isValidEndDate = !startDate || !dayjs(date).isBefore(startDate); // if we have startDate, then `date` is the end date\n\n  var isValidDate = startDate ? isValidEndDate : isValidStartDate; // both dates are selected - if a date is clicked and it's before\n  // start date, it should be the new start date\n  // (this way the start date does not have to be reset before setting)\n  // (the converse case for end date is handled implicitly below, because\n  // after both dates are selected, any selected date will be candidate for\n  // new end date)\n\n  if (startDate && endDate && isValidStartDate && dayjs(date).isBefore(startDate, 'day')) {\n    return {\n      startDate: date\n    };\n  } // one date is selected, but the clicked date is not corresponding\n  // (start selected, but clicked a date before start, and vice-versa)\n  // in this case, reverse the range\n\n\n  if (!startDate && endDate && dayjs(date).isAfter(endDate)) {\n    return {\n      startDate: endDate,\n      endDate: date\n    };\n  }\n\n  if (!endDate && startDate && dayjs(date).isBefore(startDate)) {\n    return {\n      startDate: date,\n      endDate: startDate\n    };\n  }\n\n  if (isValidDate) {\n    return _defineProperty({}, startDate ? 'endDate' : 'startDate', date);\n  }\n}\n\nexport { handleDateSelect };","map":null,"metadata":{},"sourceType":"module"}