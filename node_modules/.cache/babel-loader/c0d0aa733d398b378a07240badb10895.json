{"ast":null,"code":"'use strict';\n\nconst errcode = require('err-code');\n/**\n * Checks a record and ensures it is still valid.\n * It runs the needed validators.\n * If verification fails the returned Promise will reject with the error.\n *\n * @param {Object} validators\n * @param {Record} record\n * @returns {Promise}\n */\n\n\nconst verifyRecord = (validators, record) => {\n  const key = record.key;\n  const parts = key.toString().split('/');\n\n  if (parts.length < 3) {\n    // No validator available\n    return;\n  }\n\n  const validator = validators[parts[1].toString()];\n\n  if (!validator) {\n    const errMsg = 'Invalid record keytype';\n    throw errcode(new Error(errMsg), 'ERR_INVALID_RECORD_KEY_TYPE');\n  }\n\n  return validator.func(key, record.value);\n};\n\nmodule.exports = {\n  verifyRecord: verifyRecord,\n  validators: require('./validators')\n};","map":null,"metadata":{},"sourceType":"script"}