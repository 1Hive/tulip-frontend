{"ast":null,"code":"import React, { useContext } from 'react';\nimport { P as PropTypes } from './index-097535f1.js';\nimport { _ as _defineProperty } from './defineProperty-a0480c32.js';\nimport { _ as _inherits, a as _createClass, b as _classCallCheck, c as _getPrototypeOf, d as _possibleConstructorReturn } from './getPrototypeOf-97db713a.js';\nimport { prefixUrl } from './url.js';\nimport { _ as _extends } from './extends-db4f0c26.js';\nimport { g as getDisplayName } from './getDisplayName-d5fc7707.js';\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar PublicUrlContext = React.createContext('');\nvar Provider = PublicUrlContext.Provider,\n    Consumer = PublicUrlContext.Consumer;\n\nvar PublicUrlProvider = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(PublicUrlProvider, _React$PureComponent);\n\n  var _super = _createSuper(PublicUrlProvider);\n\n  function PublicUrlProvider() {\n    _classCallCheck(this, PublicUrlProvider);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PublicUrlProvider, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          url = _this$props.url,\n          children = _this$props.children;\n      return /*#__PURE__*/React.createElement(Provider, {\n        value: url\n      }, children);\n    }\n  }]);\n\n  return PublicUrlProvider;\n}(React.PureComponent); // HOC wrapper\n\n\n_defineProperty(PublicUrlProvider, \"propTypes\", {\n  url: PropTypes.string.isRequired,\n  children: PropTypes.node\n});\n\nvar hocWrap = function hocWrap(Component) {\n  var HOC = function HOC(props) {\n    return /*#__PURE__*/React.createElement(Consumer, null, function (url) {\n      return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n        publicUrl: url\n      }));\n    });\n  };\n\n  HOC.displayName = \"PublicUrlProvider(\".concat(getDisplayName(Component), \")\");\n  return HOC;\n}; // styled-components utility for URLs\n\n\nvar styledUrl = function styledUrl(url) {\n  return function (_ref) {\n    var publicUrl = _ref.publicUrl;\n    return prefixUrl(url, publicUrl);\n  };\n};\n\nvar PublicUrl = function PublicUrl(props) {\n  return /*#__PURE__*/React.createElement(Consumer, props);\n};\n\nPublicUrl.Provider = PublicUrlProvider;\nPublicUrl.hocWrap = hocWrap;\nPublicUrl.styledUrl = styledUrl;\n\nfunction usePublicUrl() {\n  return useContext(PublicUrlContext);\n}\n\nexport { PublicUrl as P, usePublicUrl as u };","map":null,"metadata":{},"sourceType":"module"}