{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar IdentityProvider = /*#__PURE__*/function () {\n  function IdentityProvider() {\n    _classCallCheck(this, IdentityProvider);\n  }\n\n  _createClass(IdentityProvider, [{\n    key: \"getId\",\n    value:\n    /* Return id of identity (to be signed by orbit-db public key) */\n    function () {\n      var _getId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(options) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getId(_x) {\n        return _getId.apply(this, arguments);\n      }\n\n      return getId;\n    }()\n    /* Return signature of OrbitDB public key signature */\n\n  }, {\n    key: \"signIdentity\",\n    value: function () {\n      var _signIdentity = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data, options) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function signIdentity(_x2, _x3) {\n        return _signIdentity.apply(this, arguments);\n      }\n\n      return signIdentity;\n    }()\n    /* Verify a signature of OrbitDB public key signature */\n\n  }, {\n    key: \"type\",\n    get:\n    /*\n      Return the type for this identity-procider\n      NOTE! This is the only property of the interface that\n      shouldn't be overridden in the inherited IdentityProvider\n    */\n    function get() {\n      return this.constructor.type;\n    }\n  }], [{\n    key: \"verifyIdentity\",\n    value: function () {\n      var _verifyIdentity = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(identity) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function verifyIdentity(_x4) {\n        return _verifyIdentity.apply(this, arguments);\n      }\n\n      return verifyIdentity;\n    }()\n    /* Return the type for this identity provider */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      throw new Error(\"'static get type ()' needs to be defined in the inheriting class\");\n    }\n  }]);\n\n  return IdentityProvider;\n}();\n\nmodule.exports = IdentityProvider;","map":null,"metadata":{},"sourceType":"script"}