{"ast":null,"code":"var _jsxFileName = \"/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Pools/components/PoolCard.tsx\",\n    _s = $RefreshSig$();\n\nimport BigNumber from 'bignumber.js';\nimport React, { useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport { Button, IconButton, useModal, AddIcon, Image } from '@pancakeswap-libs/uikit';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport UnlockButton from 'components/UnlockButton';\nimport Label from 'components/Label';\nimport { useERC20 } from 'hooks/useContract';\nimport { useSousApprove } from 'hooks/useApprove';\nimport useI18n from 'hooks/useI18n';\nimport { useSousStake } from 'hooks/useStake';\nimport { useSousUnstake } from 'hooks/useUnstake';\nimport useBlock from 'hooks/useBlock';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport { useSousHarvest } from 'hooks/useHarvest';\nimport Balance from 'components/Balance';\nimport { QuoteToken, PoolCategory } from 'config/constants/types';\nimport DepositModal from './DepositModal';\nimport WithdrawModal from './WithdrawModal';\nimport CompoundModal from './CompoundModal';\nimport CardTitle from './CardTitle';\nimport Card from './Card';\nimport OldSyrupTitle from './OldSyrupTitle';\nimport HarvestButton from './HarvestButton';\nimport CardFooter from './CardFooter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PoolCard = ({\n  pool\n}) => {\n  _s();\n\n  const {\n    sousId,\n    image,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit\n  } = pool; // Pools using native BNB behave differently than pools using a token\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE;\n  const TranslateString = useI18n();\n  const stakingTokenContract = useERC20(stakingTokenAddress);\n  const {\n    account\n  } = useWallet();\n  const block = useBlock();\n  const {\n    onApprove\n  } = useSousApprove(stakingTokenContract, sousId);\n  const {\n    onStake\n  } = useSousStake(sousId, isBnbPool);\n  const {\n    onUnstake\n  } = useSousUnstake(sousId);\n  const {\n    onReward\n  } = useSousHarvest(sousId, isBnbPool);\n  const [requestedApproval, setRequestedApproval] = useState(false);\n  const [pendingTx, setPendingTx] = useState(false);\n  const allowance = new BigNumber((userData === null || userData === void 0 ? void 0 : userData.allowance) || 0);\n  const stakingTokenBalance = new BigNumber((userData === null || userData === void 0 ? void 0 : userData.stakingTokenBalance) || 0);\n  const stakedBalance = new BigNumber((userData === null || userData === void 0 ? void 0 : userData.stakedBalance) || 0);\n  const earnings = new BigNumber((userData === null || userData === void 0 ? void 0 : userData.pendingReward) || 0);\n  const blocksUntilStart = Math.max(startBlock - block, 0);\n  const blocksRemaining = Math.max(endBlock - block, 0);\n  const isOldSyrup = stakingTokenName === QuoteToken.SYRUP;\n  const accountHasStakedBalance = (stakedBalance === null || stakedBalance === void 0 ? void 0 : stakedBalance.toNumber()) > 0;\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool;\n  const isCardActive = isFinished && accountHasStakedBalance;\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals));\n  const [onPresentDeposit] = useModal( /*#__PURE__*/_jsxDEV(DepositModal, {\n    max: stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance,\n    onConfirm: onStake,\n    tokenName: stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this));\n  const [onPresentCompound] = useModal( /*#__PURE__*/_jsxDEV(CompoundModal, {\n    earnings: earnings,\n    onConfirm: onStake,\n    tokenName: stakingTokenName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this));\n  const [onPresentWithdraw] = useModal( /*#__PURE__*/_jsxDEV(WithdrawModal, {\n    max: stakedBalance,\n    onConfirm: onUnstake,\n    tokenName: stakingTokenName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this));\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true);\n      const txHash = await onApprove(); // user rejected tx or didn't go thru\n\n      if (!txHash) {\n        setRequestedApproval(false);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }, [onApprove, setRequestedApproval]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    isActive: isCardActive,\n    isFinished: isFinished && sousId !== 0,\n    children: [isFinished && sousId !== 0 && /*#__PURE__*/_jsxDEV(PoolFinishedSash, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '24px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n        isFinished: isFinished && sousId !== 0,\n        children: [isOldSyrup && '[OLD]', \" \", tokenName, \" \", TranslateString(348, 'Pool')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '8px',\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: `/images/tokens/${image || tokenName}.png`,\n            width: 64,\n            height: 64,\n            alt: tokenName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), account && harvest && !isOldSyrup && /*#__PURE__*/_jsxDEV(HarvestButton, {\n          disabled: !earnings.toNumber() || pendingTx,\n          text: pendingTx ? 'Collecting' : 'Harvest',\n          onClick: async () => {\n            setPendingTx(true);\n            await onReward();\n            setPendingTx(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), !isOldSyrup ? /*#__PURE__*/_jsxDEV(BalanceAndCompound, {\n        children: [/*#__PURE__*/_jsxDEV(Balance, {\n          value: getBalanceNumber(earnings, tokenDecimals),\n          isDisabled: isFinished\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), sousId === 0 && account && harvest && /*#__PURE__*/_jsxDEV(HarvestButton, {\n          disabled: !earnings.toNumber() || pendingTx,\n          text: pendingTx ? TranslateString(999, 'Compounding') : TranslateString(704, 'Compound'),\n          onClick: onPresentCompound\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(OldSyrupTitle, {\n        hasBalance: accountHasStakedBalance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        isFinished: isFinished && sousId !== 0,\n        text: TranslateString(330, `${tokenName} earned`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledCardActions, {\n        children: [!account && /*#__PURE__*/_jsxDEV(UnlockButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 24\n        }, this), account && (needsApproval && !isOldSyrup ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            disabled: isFinished || requestedApproval,\n            onClick: handleApprove,\n            fullWidth: true,\n            children: `Approve ${stakingTokenName}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            disabled: stakedBalance.eq(new BigNumber(0)) || pendingTx,\n            onClick: isOldSyrup ? async () => {\n              setPendingTx(true);\n              await onUnstake('0');\n              setPendingTx(false);\n            } : onPresentWithdraw,\n            children: `Unstake ${stakingTokenName}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(StyledActionSpacer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this), !isOldSyrup && /*#__PURE__*/_jsxDEV(IconButton, {\n            disabled: isFinished && sousId !== 0,\n            onClick: onPresentDeposit,\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {\n              color: \"background\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledDetails, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: [TranslateString(736, 'APR'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), isFinished || isOldSyrup || !apy || (apy === null || apy === void 0 ? void 0 : apy.isNaN()) || !(apy === null || apy === void 0 ? void 0 : apy.isFinite()) ? '-' : /*#__PURE__*/_jsxDEV(Balance, {\n          fontSize: \"14px\",\n          isDisabled: isFinished,\n          value: apy === null || apy === void 0 ? void 0 : apy.toNumber(),\n          decimals: 2,\n          unit: \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledDetails, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": stakingTokenName,\n            children: [\"\\uD83E\\uDD5E\", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), TranslateString(384, 'Your Stake'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Balance, {\n          fontSize: \"14px\",\n          isDisabled: isFinished,\n          value: getBalanceNumber(stakedBalance)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n      projectLink: projectLink,\n      totalStaked: totalStaked,\n      blocksRemaining: blocksRemaining,\n      isFinished: isFinished,\n      blocksUntilStart: blocksUntilStart,\n      poolCategory: poolCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PoolCard, \"uSI95usSKCPmNaenJSQtkF760/0=\", false, function () {\n  return [useI18n, useERC20, useWallet, useBlock, useSousApprove, useSousStake, useSousUnstake, useSousHarvest, useModal, useModal, useModal];\n});\n\n_c = PoolCard;\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`;\n_c2 = PoolFinishedSash;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`;\n_c3 = StyledCardActions;\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`;\n_c4 = BalanceAndCompound;\nconst StyledActionSpacer = styled.div`\n  height: ${props => props.theme.spacing[4]}px;\n  width: ${props => props.theme.spacing[4]}px;\n`;\n_c5 = StyledActionSpacer;\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n`;\n_c6 = StyledDetails;\nexport default PoolCard;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"PoolCard\");\n$RefreshReg$(_c2, \"PoolFinishedSash\");\n$RefreshReg$(_c3, \"StyledCardActions\");\n$RefreshReg$(_c4, \"BalanceAndCompound\");\n$RefreshReg$(_c5, \"StyledActionSpacer\");\n$RefreshReg$(_c6, \"StyledDetails\");","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Pools/components/PoolCard.tsx"],"names":["BigNumber","React","useCallback","useState","styled","Button","IconButton","useModal","AddIcon","Image","useWallet","UnlockButton","Label","useERC20","useSousApprove","useI18n","useSousStake","useSousUnstake","useBlock","getBalanceNumber","useSousHarvest","Balance","QuoteToken","PoolCategory","DepositModal","WithdrawModal","CompoundModal","CardTitle","Card","OldSyrupTitle","HarvestButton","CardFooter","PoolCard","pool","sousId","image","tokenName","stakingTokenName","stakingTokenAddress","projectLink","harvest","apy","tokenDecimals","poolCategory","totalStaked","startBlock","endBlock","isFinished","userData","stakingLimit","isBnbPool","BINANCE","TranslateString","stakingTokenContract","account","block","onApprove","onStake","onUnstake","onReward","requestedApproval","setRequestedApproval","pendingTx","setPendingTx","allowance","stakingTokenBalance","stakedBalance","earnings","pendingReward","blocksUntilStart","Math","max","blocksRemaining","isOldSyrup","SYRUP","accountHasStakedBalance","toNumber","needsApproval","isCardActive","convertedLimit","multipliedBy","pow","onPresentDeposit","isGreaterThan","onPresentCompound","onPresentWithdraw","handleApprove","txHash","e","console","error","padding","marginBottom","display","alignItems","flex","eq","isNaN","isFinite","PoolFinishedSash","div","StyledCardActions","BalanceAndCompound","StyledActionSpacer","props","theme","spacing","StyledDetails"],"mappings":"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","sourcesContent":["import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport OldSyrupTitle from './OldSyrupTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    image,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n  const { account } = useWallet()\n  const block = useBlock()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n  const isOldSyrup = stakingTokenName === QuoteToken.SYRUP\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished && sousId !== 0}>\n          {isOldSyrup && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/tokens/${image || tokenName}.png`} width={64} height={64} alt={tokenName} />\n          </div>\n          {account && harvest && !isOldSyrup && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        {!isOldSyrup ? (\n          <BalanceAndCompound>\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\n            {sousId === 0 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(704, 'Compound')}\n                onClick={onPresentCompound}\n              />\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${tokenName} earned`)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldSyrup ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\n                  {`Approve ${stakingTokenName}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldSyrup\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0')\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldSyrup && (\n                  <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\n                    <AddIcon color=\"background\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          {isFinished || isOldSyrup || !apy || apy?.isNaN() || !apy?.isFinite() ? (\n            '-'\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label={stakingTokenName}>\n              🥞{' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={projectLink}\n        totalStaked={totalStaked}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n        poolCategory={poolCategory}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n`\n\nexport default PoolCard\n"]},"metadata":{},"sourceType":"module"}