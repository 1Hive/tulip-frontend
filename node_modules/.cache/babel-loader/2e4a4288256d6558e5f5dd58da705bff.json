{"ast":null,"code":"import './slicedToArray-ad07b557.js';\nimport './unsupportedIterableToArray-aef68344.js';\nimport React, { useMemo } from 'react';\nimport './_commonjsHelpers-97e6d7b1.js';\nimport { P as PropTypes } from './index-097535f1.js';\nimport './defineProperty-a0480c32.js';\nimport './toConsumableArray-07f01111.js';\nimport _styled from 'styled-components';\nimport './getPrototypeOf-97db713a.js';\nimport './color.js';\nimport './components.js';\nimport './contains-component.js';\nimport { unselectable } from './css.js';\nimport './dayjs.min-e57fb69a.js';\nimport './date.js';\nimport './miscellaneous.js';\nimport './environment.js';\nimport './font.js';\nimport './math-e6d0e93a.js';\nimport './characters.js';\nimport './format.js';\nimport './keycodes.js';\nimport './url.js';\nimport './web3.js';\nimport { GU } from './constants.js';\nimport './breakpoints.js';\nimport './springs.js';\nimport { textStyle } from './text-styles.js';\nimport './theme-dark.js';\nimport './theme-light.js';\nimport { useTheme } from './Theme.js';\nimport { _ as _extends } from './extends-db4f0c26.js';\nimport { _ as _objectWithoutProperties } from './objectWithoutProperties-234758e1.js';\nvar MODE_INDICATOR = 'indicator';\nvar MODE_IDENTIFIER = 'identifier';\nvar MODE_NEW = 'new';\nvar MODE_ACTIVITY = 'activity';\nvar SIZE_NORMAL = 'normal';\nvar SIZE_SMALL = 'small';\nvar COUNT_DEFAULT = 2;\n\nfunction useMode(mode) {\n  var theme = useTheme();\n\n  if (mode === MODE_IDENTIFIER) {\n    return {\n      background: theme.tagIdentifier,\n      color: theme.tagIdentifierContent,\n      size: SIZE_NORMAL\n    };\n  }\n\n  if (mode === MODE_NEW) {\n    return {\n      background: theme.tagNew,\n      color: theme.tagNewContent,\n      size: SIZE_NORMAL\n    };\n  }\n\n  if (mode === MODE_ACTIVITY) {\n    return {\n      background: theme.tagActivity,\n      color: theme.tagActivityContent,\n      size: SIZE_SMALL\n    };\n  } // mode === MODE_INDICATOR (default)\n\n\n  return {\n    background: theme.tagIndicator,\n    color: theme.tagIndicatorContent,\n    size: SIZE_NORMAL\n  };\n}\n\nfunction getSize(size, _ref) {\n  var uppercase = _ref.uppercase,\n      discMode = _ref.discMode,\n      iconAndLabel = _ref.iconAndLabel;\n\n  if (size === SIZE_SMALL) {\n    return \"\\n      min-width: \".concat(2 * GU, \"px;\\n      width: \").concat(discMode ? \"\".concat(2 * GU, \"px\") : 'auto', \";\\n      height: \").concat(2 * GU, \"px;\\n      padding: \").concat(discMode ? '0' : \"0 \".concat(0.5 * GU, \"px\"), \";\\n      padding-top: \").concat(uppercase ? '0.5px' : 0, \";\\n      border-radius: \").concat(2 * GU, \"px;\\n      \").concat(textStyle('label3'), \";\\n      font-weight: 600;\\n    \");\n  } // normal\n\n\n  return \"\\n    min-width: \".concat(2.5 * GU, \"px;\\n    width: \").concat(discMode ? \"\".concat(3 * GU, \"px\") : 'auto', \";\\n    height: \").concat(2.5 * GU, \"px;\\n    padding: \").concat(discMode ? '0' : \"0 \".concat(1.5 * GU, \"px\"), \" ;\\n    padding-top: \").concat(uppercase ? '1px' : 0, \";\\n    \").concat(iconAndLabel ? \"padding-left: \".concat(1.25 * GU, \"px\") : '', \";\\n    border-radius: \").concat(2.5 * GU, \"px;\\n    \").concat(textStyle('label2'), \";\\n    font-weight: 600;\\n  \");\n}\n\nfunction useLabel(_ref2) {\n  var _ref2$label = _ref2.label,\n      label = _ref2$label === void 0 ? '' : _ref2$label,\n      limitDigits = _ref2.limitDigits;\n  var finalLabel = useMemo(function () {\n    if (limitDigits === false) {\n      return typeof label === 'number' ? String(label) : label || '';\n    }\n\n    var digits = typeof limitDigits === 'number' ? limitDigits : COUNT_DEFAULT;\n    var parsed = parseInt(label, 10);\n\n    if (isNaN(parsed)) {\n      return label || '';\n    }\n\n    var max = Math.pow(10, digits) - 1;\n    var formattedValue = parsed > max ? \"\".concat(max, \"+\") : parsed;\n    return String(formattedValue);\n  }, [label, limitDigits]);\n  return finalLabel;\n}\n\nvar _StyledSpan = _styled(\"span\").withConfig({\n  displayName: \"Tag___StyledSpan\",\n  componentId: \"sc-14tq8po-0\"\n})([\"display:inline-flex;align-items:center;justify-content:center;white-space:nowrap;\", \";\", \";color:\", \";background:\", \";\", \";\"], function (p) {\n  return p._css;\n}, function (p) {\n  return p._css2;\n}, function (p) {\n  return p._css3;\n}, function (p) {\n  return p._css4;\n}, unselectable);\n\nvar _StyledSpan2 = _styled(\"span\").withConfig({\n  displayName: \"Tag___StyledSpan2\",\n  componentId: \"sc-14tq8po-1\"\n})([\"display:flex;align-items:center;margin-right:\", \"px;\"], function (p) {\n  return p._css5;\n});\n\nvar _StyledSpan3 = _styled(\"span\").withConfig({\n  displayName: \"Tag___StyledSpan3\",\n  componentId: \"sc-14tq8po-2\"\n})([\"overflow:hidden;text-overflow:ellipsis;margin-top:\", \";\"], function (p) {\n  return p._css6;\n});\n\nfunction Tag(_ref3) {\n  var background = _ref3.background,\n      children = _ref3.children,\n      color = _ref3.color,\n      limitDigits = _ref3.limitDigits,\n      icon = _ref3.icon,\n      label = _ref3.label,\n      mode = _ref3.mode,\n      size = _ref3.size,\n      uppercase = _ref3.uppercase,\n      props = _objectWithoutProperties(_ref3, [\"background\", \"children\", \"color\", \"limitDigits\", \"icon\", \"label\", \"mode\", \"size\", \"uppercase\"]);\n\n  if ((icon || label !== undefined) && children !== undefined) {\n    throw new Error('Tag: you cannot use icon or label with children.');\n  }\n\n  var modeProps = useMode(mode);\n  var finalSize = size || modeProps.size;\n  var finalLabel = useLabel({\n    label: label !== undefined ? label : children,\n    limitDigits: limitDigits\n  });\n  var sizeStyles = getSize(finalSize, {\n    uppercase: uppercase,\n    discMode: // icon only\n    icon && !finalLabel || // label only, using 1 or 0 chars\n    !icon && typeof finalLabel === 'string' && finalLabel.length < 2,\n    iconAndLabel: icon && finalLabel\n  }); // Slightly tweak the alignment when there are no descenders,\n  // to make the characters look more aligned.\n\n  var alignmentCorrection = finalSize === SIZE_NORMAL && (uppercase || typeof label === 'number' || limitDigits !== false);\n  return /*#__PURE__*/React.createElement(_StyledSpan, _extends({}, props, {\n    _css: sizeStyles,\n    _css2: !uppercase ? 'text-transform: unset' : '',\n    _css3: color || modeProps.color,\n    _css4: background || modeProps.background\n  }), icon && /*#__PURE__*/React.createElement(_StyledSpan2, {\n    _css5: finalLabel ? 0.25 * GU : 0\n  }, icon), /*#__PURE__*/React.createElement(_StyledSpan3, {\n    _css6: alignmentCorrection ? '1px' : '0'\n  }, finalLabel));\n}\n\nTag.propTypes = {\n  background: PropTypes.string,\n  children: PropTypes.node,\n  color: PropTypes.string,\n  limitDigits: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  icon: PropTypes.node,\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.number]),\n  mode: PropTypes.oneOf([MODE_IDENTIFIER, MODE_NEW, MODE_INDICATOR, MODE_ACTIVITY]),\n  size: PropTypes.oneOf([SIZE_NORMAL, SIZE_SMALL]),\n  uppercase: PropTypes.bool\n};\nTag.defaultProps = {\n  uppercase: true,\n  limitDigits: false\n};\nexport default Tag;","map":null,"metadata":{},"sourceType":"module"}