{"ast":null,"code":"var _jsxFileName = \"/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Farms/components/FarmCard/FarmCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport styled, { keyframes } from 'styled-components';\nimport { Flex, Text, Skeleton } from '@pancakeswap-libs/uikit';\nimport { communityFarms } from 'config/constants';\nimport useI18n from 'hooks/useI18n';\nimport ExpandableSectionButton from 'components/ExpandableSectionButton';\nimport { QuoteToken } from 'config/constants/types';\nimport { BASE_ADD_LIQUIDITY_URL } from 'config';\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts';\nimport DetailsSection from './DetailsSection';\nimport CardHeading from './CardHeading';\nimport CardActionsContainer from './CardActionsContainer';\nimport ApyButton from './ApyButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RainbowLight = keyframes`\n\t0% {\n\t\tbackground-position: 0% 50%;\n\t}\n\t50% {\n\t\tbackground-position: 100% 50%;\n\t}\n\t100% {\n\t\tbackground-position: 0% 50%;\n\t}\n`;\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(\n    45deg,\n    rgba(255, 0, 0, 1) 0%,\n    rgba(255, 154, 0, 1) 10%,\n    rgba(208, 222, 33, 1) 20%,\n    rgba(79, 220, 74, 1) 30%,\n    rgba(63, 218, 216, 1) 40%,\n    rgba(47, 201, 226, 1) 50%,\n    rgba(28, 127, 238, 1) 60%,\n    rgba(95, 21, 242, 1) 70%,\n    rgba(186, 12, 248, 1) 80%,\n    rgba(251, 7, 217, 1) 90%,\n    rgba(255, 0, 0, 1) 100%\n  );\n  background-size: 300% 300%;\n  animation: ${RainbowLight} 2s linear infinite;\n  border-radius: 16px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`;\n_c = StyledCardAccent;\nconst FCard = styled.div`\n  align-self: baseline;\n  background: ${props => props.theme.card.background};\n  border-radius: 32px;\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`;\n_c2 = FCard;\nconst Divider = styled.div`\n  background-color: ${({\n  theme\n}) => theme.colors.borderColor};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`;\n_c3 = Divider;\nconst ExpandingWrapper = styled.div`\n  height: ${props => props.expanded ? '100%' : '0px'};\n  overflow: hidden;\n`;\n_c4 = ExpandingWrapper;\n\nconst FarmCard = ({\n  farm,\n  removed,\n  cakePrice,\n  bnbPrice,\n  ethPrice,\n  ethereum,\n  account\n}) => {\n  _s();\n\n  const TranslateString = useI18n();\n  const [showExpandableSection, setShowExpandableSection] = useState(false);\n  const isCommunityFarm = communityFarms.includes(farm.tokenSymbol); // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\n\n  const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase();\n  const totalValue = useMemo(() => {\n    if (!farm.lpTotalInQuoteToken) {\n      return null;\n    }\n\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n      return bnbPrice.times(farm.lpTotalInQuoteToken);\n    }\n\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n      return cakePrice.times(farm.lpTotalInQuoteToken);\n    }\n\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\n      return ethPrice.times(farm.lpTotalInQuoteToken);\n    }\n\n    return farm.lpTotalInQuoteToken;\n  }, [bnbPrice, cakePrice, ethPrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol]);\n  const totalValueFormated = totalValue ? `$${Number(totalValue).toLocaleString(undefined, {\n    maximumFractionDigits: 0\n  })}` : '-';\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '');\n  const earnLabel = farm.dual ? farm.dual.earnLabel : 'CAKE';\n  const farmAPY = farm.apy && farm.apy.times(new BigNumber(100)).toNumber().toLocaleString('en-US').slice(0, -1);\n  const {\n    quoteTokenAdresses,\n    quoteTokenSymbol,\n    tokenAddresses\n  } = farm;\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAdresses,\n    quoteTokenSymbol,\n    tokenAddresses\n  });\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`;\n  return /*#__PURE__*/_jsxDEV(FCard, {\n    children: [farm.tokenSymbol === 'CAKE' && /*#__PURE__*/_jsxDEV(StyledCardAccent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 39\n    }, this), /*#__PURE__*/_jsxDEV(CardHeading, {\n      lpLabel: lpLabel,\n      multiplier: farm.multiplier,\n      isCommunityFarm: isCommunityFarm,\n      farmImage: farmImage,\n      tokenSymbol: farm.tokenSymbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), !removed && /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: [TranslateString(736, 'APR'), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: farm.apy ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ApyButton, {\n            lpLabel: lpLabel,\n            addLiquidityUrl: addLiquidityUrl,\n            cakePrice: cakePrice,\n            apy: farm.apy\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this), farmAPY, \"%\"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Skeleton, {\n          height: 24,\n          width: 80\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: [TranslateString(318, 'Earn'), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        children: earnLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActionsContainer, {\n      farm: farm,\n      ethereum: ethereum,\n      account: account,\n      addLiquidityUrl: addLiquidityUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpandableSectionButton, {\n      onClick: () => setShowExpandableSection(!showExpandableSection),\n      expanded: showExpandableSection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpandingWrapper, {\n      expanded: showExpandableSection,\n      children: /*#__PURE__*/_jsxDEV(DetailsSection, {\n        removed: removed,\n        bscScanAddress: `https://bscscan.com/address/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`,\n        totalValueFormated: totalValueFormated,\n        lpLabel: lpLabel,\n        addLiquidityUrl: addLiquidityUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FarmCard, \"IaZlonpiELGn+kLAbNgoqJ9yBRo=\", false, function () {\n  return [useI18n];\n});\n\n_c5 = FarmCard;\nexport default FarmCard;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"StyledCardAccent\");\n$RefreshReg$(_c2, \"FCard\");\n$RefreshReg$(_c3, \"Divider\");\n$RefreshReg$(_c4, \"ExpandingWrapper\");\n$RefreshReg$(_c5, \"FarmCard\");","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Farms/components/FarmCard/FarmCard.tsx"],"names":["React","useMemo","useState","BigNumber","styled","keyframes","Flex","Text","Skeleton","communityFarms","useI18n","ExpandableSectionButton","QuoteToken","BASE_ADD_LIQUIDITY_URL","getLiquidityUrlPathParts","DetailsSection","CardHeading","CardActionsContainer","ApyButton","RainbowLight","StyledCardAccent","div","FCard","props","theme","card","background","Divider","colors","borderColor","ExpandingWrapper","expanded","FarmCard","farm","removed","cakePrice","bnbPrice","ethPrice","ethereum","account","TranslateString","showExpandableSection","setShowExpandableSection","isCommunityFarm","includes","tokenSymbol","farmImage","lpSymbol","split","toLocaleLowerCase","totalValue","lpTotalInQuoteToken","quoteTokenSymbol","BNB","times","CAKE","ETH","totalValueFormated","Number","toLocaleString","undefined","maximumFractionDigits","lpLabel","toUpperCase","replace","earnLabel","dual","farmAPY","apy","toNumber","slice","quoteTokenAdresses","tokenAddresses","liquidityUrlPathParts","addLiquidityUrl","multiplier","display","alignItems","lpAddresses","process","env","REACT_APP_CHAIN_ID"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { Flex, Text, Skeleton } from '@pancakeswap-libs/uikit'\nimport { communityFarms } from 'config/constants'\nimport { Farm } from 'state/types'\nimport { provider } from 'web3-core'\nimport useI18n from 'hooks/useI18n'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { QuoteToken } from 'config/constants/types'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\n\nexport interface FarmWithStakedValue extends Farm {\n  apy?: BigNumber\n}\n\nconst RainbowLight = keyframes`\n\t0% {\n\t\tbackground-position: 0% 50%;\n\t}\n\t50% {\n\t\tbackground-position: 100% 50%;\n\t}\n\t100% {\n\t\tbackground-position: 0% 50%;\n\t}\n`\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(\n    45deg,\n    rgba(255, 0, 0, 1) 0%,\n    rgba(255, 154, 0, 1) 10%,\n    rgba(208, 222, 33, 1) 20%,\n    rgba(79, 220, 74, 1) 30%,\n    rgba(63, 218, 216, 1) 40%,\n    rgba(47, 201, 226, 1) 50%,\n    rgba(28, 127, 238, 1) 60%,\n    rgba(95, 21, 242, 1) 70%,\n    rgba(186, 12, 248, 1) 80%,\n    rgba(251, 7, 217, 1) 90%,\n    rgba(255, 0, 0, 1) 100%\n  );\n  background-size: 300% 300%;\n  animation: ${RainbowLight} 2s linear infinite;\n  border-radius: 16px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`\n\nconst FCard = styled.div`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border-radius: 32px;\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  removed: boolean\n  cakePrice?: BigNumber\n  bnbPrice?: BigNumber\n  ethPrice?: BigNumber\n  ethereum?: provider\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, bnbPrice, ethPrice, ethereum, account }) => {\n  const TranslateString = useI18n()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const isCommunityFarm = communityFarms.includes(farm.tokenSymbol)\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\n  const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\n\n  const totalValue: BigNumber = useMemo(() => {\n    if (!farm.lpTotalInQuoteToken) {\n      return null\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n      return bnbPrice.times(farm.lpTotalInQuoteToken)\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n      return cakePrice.times(farm.lpTotalInQuoteToken)\n    }\n    if (farm.quoteTokenSymbol === QuoteToken.ETH) {\n      return ethPrice.times(farm.lpTotalInQuoteToken)\n    }\n    return farm.lpTotalInQuoteToken\n  }, [bnbPrice, cakePrice, ethPrice, farm.lpTotalInQuoteToken, farm.quoteTokenSymbol])\n\n  const totalValueFormated = totalValue\n    ? `$${Number(totalValue).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const earnLabel = farm.dual ? farm.dual.earnLabel : 'CAKE'\n  const farmAPY = farm.apy && farm.apy.times(new BigNumber(100)).toNumber().toLocaleString('en-US').slice(0, -1)\n\n  const { quoteTokenAdresses, quoteTokenSymbol, tokenAddresses } = farm\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAdresses, quoteTokenSymbol, tokenAddresses })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  return (\n    <FCard>\n      {farm.tokenSymbol === 'CAKE' && <StyledCardAccent />}\n      <CardHeading\n        lpLabel={lpLabel}\n        multiplier={farm.multiplier}\n        isCommunityFarm={isCommunityFarm}\n        farmImage={farmImage}\n        tokenSymbol={farm.tokenSymbol}\n      />\n      {!removed && (\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Text>{TranslateString(736, 'APR')}:</Text>\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n            {farm.apy ? (\n              <>\n                <ApyButton lpLabel={lpLabel} addLiquidityUrl={addLiquidityUrl} cakePrice={cakePrice} apy={farm.apy} />\n                {farmAPY}%\n              </>\n            ) : (\n              <Skeleton height={24} width={80} />\n            )}\n          </Text>\n        </Flex>\n      )}\n      <Flex justifyContent=\"space-between\">\n        <Text>{TranslateString(318, 'Earn')}:</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex>\n      <CardActionsContainer farm={farm} ethereum={ethereum} account={account} addLiquidityUrl={addLiquidityUrl} />\n      <Divider />\n      <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection\n          removed={removed}\n          bscScanAddress={`https://bscscan.com/address/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`}\n          totalValueFormated={totalValueFormated}\n          lpLabel={lpLabel}\n          addLiquidityUrl={addLiquidityUrl}\n        />\n      </ExpandingWrapper>\n    </FCard>\n  )\n}\n\nexport default FarmCard\n"]},"metadata":{},"sourceType":"module"}