{"ast":null,"code":"import _slicedToArray from\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _createForOfIteratorHelper from\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import{useCallback,useEffect}from'react';import keycodes from'../keycodes';export default function useArrows(){var _ref=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},onUp=_ref.onUp,onLeft=_ref.onLeft,onDown=_ref.onDown,onRight=_ref.onRight;useEffect(function(){var actions=[[keycodes.up,onUp],[keycodes.left,onLeft],[keycodes.down,onDown],[keycodes.right,onRight]];var onKeyDown=function onKeyDown(e){var _iterator=_createForOfIteratorHelper(actions),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _step$value=_slicedToArray(_step.value,2),keyCode=_step$value[0],cb=_step$value[1];if(cb&&e.keyCode===keyCode){e.preventDefault();cb();break;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}};document.addEventListener('keydown',onKeyDown);return function(){document.removeEventListener('keydown',onKeyDown);};},[onUp,onLeft,onDown,onRight]);}export function useEsc(cb){var handlekeyDown=useCallback(function(e){if(e.keyCode===keycodes.esc){cb();}},[cb]);useEffect(function(){window.addEventListener('keydown',handlekeyDown);return function(){return window.removeEventListener('keydown',handlekeyDown);};},[handlekeyDown]);}export function useEnterKey(cb){var handleKeyPress=useCallback(function(_ref2){var keyCode=_ref2.keyCode;if(keyCode===keycodes.enter){cb();}},[cb]);useEffect(function(){window.addEventListener('keypress',handleKeyPress);return function(){return window.removeEventListener('keypress',handleKeyPress);};},[handleKeyPress]);}","map":{"version":3,"sources":["/Users/fabianmolina/Documents/1hive/tulip-frontend/src/hooks/useKeyboardArrows.js"],"names":["useCallback","useEffect","keycodes","useArrows","onUp","onLeft","onDown","onRight","actions","up","left","down","right","onKeyDown","e","keyCode","cb","preventDefault","document","addEventListener","removeEventListener","useEsc","handlekeyDown","esc","window","useEnterKey","handleKeyPress","enter"],"mappings":"0WAAA,OAASA,WAAT,CAAsBC,SAAtB,KAAuC,OAAvC,CACA,MAAOC,CAAAA,QAAP,KAAqB,aAArB,CAEA,cAAe,SAASC,CAAAA,SAAT,EAA2D,oEAAJ,EAAI,CAAtCC,IAAsC,MAAtCA,IAAsC,CAAhCC,MAAgC,MAAhCA,MAAgC,CAAxBC,MAAwB,MAAxBA,MAAwB,CAAhBC,OAAgB,MAAhBA,OAAgB,CACxEN,SAAS,CAAC,UAAM,CACd,GAAMO,CAAAA,OAAO,CAAG,CACd,CAACN,QAAQ,CAACO,EAAV,CAAcL,IAAd,CADc,CAEd,CAACF,QAAQ,CAACQ,IAAV,CAAgBL,MAAhB,CAFc,CAGd,CAACH,QAAQ,CAACS,IAAV,CAAgBL,MAAhB,CAHc,CAId,CAACJ,QAAQ,CAACU,KAAV,CAAiBL,OAAjB,CAJc,CAAhB,CAMA,GAAMM,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,CAAC,CAAI,0CACON,OADP,YACrB,+CAAqC,+CAAzBO,OAAyB,gBAAhBC,EAAgB,gBACnC,GAAIA,EAAE,EAAIF,CAAC,CAACC,OAAF,GAAcA,OAAxB,CAAiC,CAC/BD,CAAC,CAACG,cAAF,GACAD,EAAE,GACF,MACD,CACF,CAPoB,qDAQtB,CARD,CASAE,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,CAAqCN,SAArC,EACA,MAAO,WAAM,CACXK,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,CAAwCP,SAAxC,EACD,CAFD,CAGD,CApBQ,CAoBN,CAACT,IAAD,CAAOC,MAAP,CAAeC,MAAf,CAAuBC,OAAvB,CApBM,CAAT,CAqBD,CAED,MAAO,SAASc,CAAAA,MAAT,CAAgBL,EAAhB,CAAoB,CACzB,GAAMM,CAAAA,aAAa,CAAGtB,WAAW,CAC/B,SAAAc,CAAC,CAAI,CACH,GAAIA,CAAC,CAACC,OAAF,GAAcb,QAAQ,CAACqB,GAA3B,CAAgC,CAC9BP,EAAE,GACH,CACF,CAL8B,CAM/B,CAACA,EAAD,CAN+B,CAAjC,CAQAf,SAAS,CAAC,UAAM,CACduB,MAAM,CAACL,gBAAP,CAAwB,SAAxB,CAAmCG,aAAnC,EACA,MAAO,kBAAME,CAAAA,MAAM,CAACJ,mBAAP,CAA2B,SAA3B,CAAsCE,aAAtC,CAAN,EAAP,CACD,CAHQ,CAGN,CAACA,aAAD,CAHM,CAAT,CAID,CAED,MAAO,SAASG,CAAAA,WAAT,CAAqBT,EAArB,CAAyB,CAC9B,GAAMU,CAAAA,cAAc,CAAG1B,WAAW,CAChC,eAAiB,IAAde,CAAAA,OAAc,OAAdA,OAAc,CACf,GAAIA,OAAO,GAAKb,QAAQ,CAACyB,KAAzB,CAAgC,CAC9BX,EAAE,GACH,CACF,CAL+B,CAMhC,CAACA,EAAD,CANgC,CAAlC,CASAf,SAAS,CAAC,UAAM,CACduB,MAAM,CAACL,gBAAP,CAAwB,UAAxB,CAAoCO,cAApC,EACA,MAAO,kBAAMF,CAAAA,MAAM,CAACJ,mBAAP,CAA2B,UAA3B,CAAuCM,cAAvC,CAAN,EAAP,CACD,CAHQ,CAGN,CAACA,cAAD,CAHM,CAAT,CAID","sourcesContent":["import { useCallback, useEffect } from 'react'\r\nimport keycodes from '../keycodes'\r\n\r\nexport default function useArrows({ onUp, onLeft, onDown, onRight } = {}) {\r\n  useEffect(() => {\r\n    const actions = [\r\n      [keycodes.up, onUp],\r\n      [keycodes.left, onLeft],\r\n      [keycodes.down, onDown],\r\n      [keycodes.right, onRight],\r\n    ]\r\n    const onKeyDown = e => {\r\n      for (const [keyCode, cb] of actions) {\r\n        if (cb && e.keyCode === keyCode) {\r\n          e.preventDefault()\r\n          cb()\r\n          break\r\n        }\r\n      }\r\n    }\r\n    document.addEventListener('keydown', onKeyDown)\r\n    return () => {\r\n      document.removeEventListener('keydown', onKeyDown)\r\n    }\r\n  }, [onUp, onLeft, onDown, onRight])\r\n}\r\n\r\nexport function useEsc(cb) {\r\n  const handlekeyDown = useCallback(\r\n    e => {\r\n      if (e.keyCode === keycodes.esc) {\r\n        cb()\r\n      }\r\n    },\r\n    [cb]\r\n  )\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handlekeyDown)\r\n    return () => window.removeEventListener('keydown', handlekeyDown)\r\n  }, [handlekeyDown])\r\n}\r\n\r\nexport function useEnterKey(cb) {\r\n  const handleKeyPress = useCallback(\r\n    ({ keyCode }) => {\r\n      if (keyCode === keycodes.enter) {\r\n        cb()\r\n      }\r\n    },\r\n    [cb]\r\n  )\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keypress', handleKeyPress)\r\n    return () => window.removeEventListener('keypress', handleKeyPress)\r\n  }, [handleKeyPress])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}