{"ast":null,"code":"'use strict';\n\nconst {\n  repoVersion\n} = require('ipfs-repo');\n\nconst {\n  withTimeoutOption\n} = require('../../utils');\n\nmodule.exports = ({\n  repo\n}) => {\n  /**\n   * If the repo has been initialized, report the current version.\n   * Otherwise report the version that would be initialized.\n   *\n   * @returns {number}\n   */\n  return withTimeoutOption(async function version(options) {\n    try {\n      await repo._checkInitialized(options);\n    } catch (err) {\n      // TODO: (dryajov) This is really hacky, there must be a better way\n      const match = [/Key not found in database \\[\\/version\\]/, /ENOENT/, /repo is not initialized yet/].some(m => {\n        return m.test(err.message);\n      });\n\n      if (match) {\n        // this repo has not been initialized\n        return repoVersion;\n      }\n\n      throw err;\n    }\n\n    return repo.version.get(options);\n  });\n};","map":null,"metadata":{},"sourceType":"script"}