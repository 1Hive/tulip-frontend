{"ast":null,"code":"'use strict';\n/**\n * A list of unique peer infos.\n */\n\nclass PeerList {\n  constructor() {\n    this.list = [];\n  }\n  /**\n   * Add a new info. Returns `true` if it was a new one\n   *\n   * @param {PeerInfo} info\n   * @returns {bool}\n   */\n\n\n  push(info) {\n    if (!this.has(info)) {\n      this.list.push(info);\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Check if this PeerInfo is already in here.\n   *\n   * @param {PeerInfo} info\n   * @returns {bool}\n   */\n\n\n  has(info) {\n    const match = this.list.find(i => i.id.isEqual(info.id));\n    return Boolean(match);\n  }\n  /**\n   * Get the list as an array.\n   *\n   * @returns {Array<PeerInfo>}\n   */\n\n\n  toArray() {\n    return this.list.slice();\n  }\n  /**\n   * Remove the last element\n   *\n   * @returns {PeerInfo}\n   */\n\n\n  pop() {\n    return this.list.pop();\n  }\n  /**\n   * The length of the list\n   *\n   * @type {number}\n   */\n\n\n  get length() {\n    return this.list.length;\n  }\n\n}\n\nmodule.exports = PeerList;","map":null,"metadata":{},"sourceType":"script"}