{"ast":null,"code":"var _jsxFileName = \"/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Home/components/CakeHarvestBalance.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Text } from '@pancakeswap-libs/uikit';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport BigNumber from 'bignumber.js';\nimport useI18n from 'hooks/useI18n';\nimport useAllEarnings from 'hooks/useAllEarnings';\nimport { usePriceCakeBusd } from 'state/hooks';\nimport styled from 'styled-components';\nimport CardValue from './CardValue';\nimport CardBusdValue from './CardBusdValue';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Block = styled.div`\n  margin-bottom: 24px;\n}\n`;\n_c = Block;\n\nconst CakeHarvestBalance = () => {\n  _s();\n\n  const TranslateString = useI18n();\n  const {\n    account\n  } = useWallet();\n  const allEarnings = useAllEarnings();\n  const earningsSum = allEarnings.reduce((accum, earning) => {\n    return accum + new BigNumber(earning).div(new BigNumber(10).pow(18)).toNumber();\n  }, 0);\n  const earningsBusd = new BigNumber(earningsSum).multipliedBy(usePriceCakeBusd()).toNumber();\n\n  if (!account) {\n    return /*#__PURE__*/_jsxDEV(Text, {\n      color: \"textDisabled\",\n      style: {\n        lineHeight: '76px'\n      },\n      children: TranslateString(298, 'Locked')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Block, {\n    children: [/*#__PURE__*/_jsxDEV(CardValue, {\n      value: earningsSum,\n      lineHeight: \"1.5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBusdValue, {\n      value: earningsBusd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CakeHarvestBalance, \"CMc8MjeZKlKc07ieR5+g32Z78zY=\", false, function () {\n  return [useI18n, useWallet, useAllEarnings, usePriceCakeBusd];\n});\n\n_c2 = CakeHarvestBalance;\nexport default CakeHarvestBalance;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Block\");\n$RefreshReg$(_c2, \"CakeHarvestBalance\");","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Home/components/CakeHarvestBalance.tsx"],"names":["React","Text","useWallet","BigNumber","useI18n","useAllEarnings","usePriceCakeBusd","styled","CardValue","CardBusdValue","Block","div","CakeHarvestBalance","TranslateString","account","allEarnings","earningsSum","reduce","accum","earning","pow","toNumber","earningsBusd","multipliedBy","lineHeight"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,KAAK,GAAGH,MAAM,CAACI,GAAI;AACzB;AACA;AACA,CAHA;KAAMD,K;;AAKN,MAAME,kBAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAMC,eAAe,GAAGT,OAAO,EAA/B;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAcZ,SAAS,EAA7B;AACA,QAAMa,WAAW,GAAGV,cAAc,EAAlC;AACA,QAAMW,WAAW,GAAGD,WAAW,CAACE,MAAZ,CAAmB,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACzD,WAAOD,KAAK,GAAG,IAAIf,SAAJ,CAAcgB,OAAd,EAAuBR,GAAvB,CAA2B,IAAIR,SAAJ,CAAc,EAAd,EAAkBiB,GAAlB,CAAsB,EAAtB,CAA3B,EAAsDC,QAAtD,EAAf;AACD,GAFmB,EAEjB,CAFiB,CAApB;AAGA,QAAMC,YAAY,GAAG,IAAInB,SAAJ,CAAca,WAAd,EAA2BO,YAA3B,CAAwCjB,gBAAgB,EAAxD,EAA4De,QAA5D,EAArB;;AAEA,MAAI,CAACP,OAAL,EAAc;AACZ,wBACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,cAAZ;AAA2B,MAAA,KAAK,EAAE;AAAEU,QAAAA,UAAU,EAAE;AAAd,OAAlC;AAAA,gBACGX,eAAe,CAAC,GAAD,EAAM,QAAN;AADlB;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE,QAAC,KAAD;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEG,WAAlB;AAA+B,MAAA,UAAU,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEM;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAvBD;;GAAMV,kB;UACoBR,O,EACJF,S,EACAG,c,EAIyCC,gB;;;MAPzDM,kB;AAyBN,eAAeA,kBAAf","sourcesContent":["import React from 'react'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport useI18n from 'hooks/useI18n'\nimport useAllEarnings from 'hooks/useAllEarnings'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport styled from 'styled-components'\nimport CardValue from './CardValue'\nimport CardBusdValue from './CardBusdValue'\n\nconst Block = styled.div`\n  margin-bottom: 24px;\n}\n`\n\nconst CakeHarvestBalance = () => {\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const allEarnings = useAllEarnings()\n  const earningsSum = allEarnings.reduce((accum, earning) => {\n    return accum + new BigNumber(earning).div(new BigNumber(10).pow(18)).toNumber()\n  }, 0)\n  const earningsBusd = new BigNumber(earningsSum).multipliedBy(usePriceCakeBusd()).toNumber()\n\n  if (!account) {\n    return (\n      <Text color=\"textDisabled\" style={{ lineHeight: '76px' }}>\n        {TranslateString(298, 'Locked')}\n      </Text>\n    )\n  }\n\n  return (\n    <Block>\n      <CardValue value={earningsSum} lineHeight=\"1.5\" />\n      <CardBusdValue value={earningsBusd} />\n    </Block>\n  )\n}\n\nexport default CakeHarvestBalance\n"]},"metadata":{},"sourceType":"module"}