{"ast":null,"code":"var _jsxFileName = \"/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Collectibles/components/GlobalCheckBullHiccupClaimStatus.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport { useModal } from '@pancakeswap-libs/uikit';\nimport useGetBullHiccupClaimableStatus from '../hooks/useGetBullHiccupClaimableStatus';\nimport ClaimBullHiccupNftModal from './ClaimBullHiccupNftModal';\n/**\n * This is represented as a component rather than a hook because we need to keep it\n * inside the Router.\n *\n * TODO: Put global checks in redux or make a generic area to house global checks\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GlobalCheckBullHiccupClaimStatus = () => {\n  _s();\n\n  const hasDisplayedModal = useRef(false);\n  const {\n    isSomeClaimable,\n    isBullClaimable,\n    isHiccupClaimable\n  } = useGetBullHiccupClaimableStatus();\n  const [onPresentGiftModal] = useModal( /*#__PURE__*/_jsxDEV(ClaimBullHiccupNftModal, {\n    isBullClaimable: isBullClaimable,\n    isHiccupClaimable: isHiccupClaimable\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this));\n  const {\n    account\n  } = useWallet();\n  const {\n    pathname\n  } = useLocation();\n  useEffect(() => {\n    if (!pathname.includes('/collectibles') && isSomeClaimable && !hasDisplayedModal.current) {\n      onPresentGiftModal();\n      hasDisplayedModal.current = true;\n    }\n  }, [pathname, isSomeClaimable, hasDisplayedModal, onPresentGiftModal]); // Reset the check flag when account changes\n\n  useEffect(() => {\n    hasDisplayedModal.current = false;\n  }, [account, hasDisplayedModal]);\n  return null;\n};\n\n_s(GlobalCheckBullHiccupClaimStatus, \"WARCp4KL4U7qkrWWgkQJ60Y6wls=\", false, function () {\n  return [useGetBullHiccupClaimableStatus, useModal, useWallet, useLocation];\n});\n\n_c = GlobalCheckBullHiccupClaimStatus;\nexport default GlobalCheckBullHiccupClaimStatus;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalCheckBullHiccupClaimStatus\");","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Collectibles/components/GlobalCheckBullHiccupClaimStatus.tsx"],"names":["React","useEffect","useRef","useLocation","useWallet","useModal","useGetBullHiccupClaimableStatus","ClaimBullHiccupNftModal","GlobalCheckBullHiccupClaimStatus","hasDisplayedModal","isSomeClaimable","isBullClaimable","isHiccupClaimable","onPresentGiftModal","account","pathname","includes","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,OAAOC,+BAAP,MAA4C,0CAA5C;AACA,OAAOC,uBAAP,MAAoC,2BAApC;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,gCAAgC,GAAG,MAAM;AAAA;;AAC7C,QAAMC,iBAAiB,GAAGP,MAAM,CAAC,KAAD,CAAhC;AACA,QAAM;AAAEQ,IAAAA,eAAF;AAAmBC,IAAAA,eAAnB;AAAoCC,IAAAA;AAApC,MAA0DN,+BAA+B,EAA/F;AACA,QAAM,CAACO,kBAAD,IAAuBR,QAAQ,eACnC,QAAC,uBAAD;AAAyB,IAAA,eAAe,EAAEM,eAA1C;AAA2D,IAAA,iBAAiB,EAAEC;AAA9E;AAAA;AAAA;AAAA;AAAA,UADmC,CAArC;AAGA,QAAM;AAAEE,IAAAA;AAAF,MAAcV,SAAS,EAA7B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAeZ,WAAW,EAAhC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACc,QAAQ,CAACC,QAAT,CAAkB,eAAlB,CAAD,IAAuCN,eAAvC,IAA0D,CAACD,iBAAiB,CAACQ,OAAjF,EAA0F;AACxFJ,MAAAA,kBAAkB;AAClBJ,MAAAA,iBAAiB,CAACQ,OAAlB,GAA4B,IAA5B;AACD;AACF,GALQ,EAKN,CAACF,QAAD,EAAWL,eAAX,EAA4BD,iBAA5B,EAA+CI,kBAA/C,CALM,CAAT,CAT6C,CAgB7C;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,iBAAiB,CAACQ,OAAlB,GAA4B,KAA5B;AACD,GAFQ,EAEN,CAACH,OAAD,EAAUL,iBAAV,CAFM,CAAT;AAIA,SAAO,IAAP;AACD,CAtBD;;GAAMD,gC;UAE4DF,+B,EACnCD,Q,EAGTD,S,EACCD,W;;;KAPjBK,gC;AAwBN,eAAeA,gCAAf","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useModal } from '@pancakeswap-libs/uikit'\nimport useGetBullHiccupClaimableStatus from '../hooks/useGetBullHiccupClaimableStatus'\nimport ClaimBullHiccupNftModal from './ClaimBullHiccupNftModal'\n\n/**\n * This is represented as a component rather than a hook because we need to keep it\n * inside the Router.\n *\n * TODO: Put global checks in redux or make a generic area to house global checks\n */\nconst GlobalCheckBullHiccupClaimStatus = () => {\n  const hasDisplayedModal = useRef(false)\n  const { isSomeClaimable, isBullClaimable, isHiccupClaimable } = useGetBullHiccupClaimableStatus()\n  const [onPresentGiftModal] = useModal(\n    <ClaimBullHiccupNftModal isBullClaimable={isBullClaimable} isHiccupClaimable={isHiccupClaimable} />,\n  )\n  const { account } = useWallet()\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    if (!pathname.includes('/collectibles') && isSomeClaimable && !hasDisplayedModal.current) {\n      onPresentGiftModal()\n      hasDisplayedModal.current = true\n    }\n  }, [pathname, isSomeClaimable, hasDisplayedModal, onPresentGiftModal])\n\n  // Reset the check flag when account changes\n  useEffect(() => {\n    hasDisplayedModal.current = false\n  }, [account, hasDisplayedModal])\n\n  return null\n}\n\nexport default GlobalCheckBullHiccupClaimStatus\n"]},"metadata":{},"sourceType":"module"}