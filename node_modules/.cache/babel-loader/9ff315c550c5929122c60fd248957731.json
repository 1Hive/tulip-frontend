{"ast":null,"code":"var _jsxFileName = \"/Users/fabianmolina/Documents/1hive/tulip-frontend/src/providers/Subgraph.js\";\nimport React from 'react';\nimport { createClient, Provider as UrqlProvider, cacheExchange, debugExchange } from 'urql';\nimport { getFetchExchange } from '../graphql-exchanges';\nimport { devtoolsExchange } from '@urql/devtools';\nimport { defaultSubgraphHttpEndpoint } from '../endpoints';\nconst SubgraphContext = /*#__PURE__*/React.createContext({\n  resetSubgraphClient: null\n});\n\nconst newClient = () => createClient({\n  url: defaultSubgraphHttpEndpoint,\n  exchanges: [debugExchange, devtoolsExchange, cacheExchange, getFetchExchange()]\n});\n\nfunction SubGraphProvider({\n  children\n}) {\n  const [client, setClient] = React.useState(newClient());\n  return /*#__PURE__*/React.createElement(SubgraphContext.Provider, {\n    value: {\n      resetSubgraphClient: () => setClient(newClient())\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(UrqlProvider, {\n    value: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, children));\n}\n\nconst useSubgraph = () => React.useContext(SubgraphContext);\n\nexport { SubGraphProvider, useSubgraph };","map":{"version":3,"sources":["/Users/fabianmolina/Documents/1hive/tulip-frontend/src/providers/Subgraph.js"],"names":["React","createClient","Provider","UrqlProvider","cacheExchange","debugExchange","getFetchExchange","devtoolsExchange","defaultSubgraphHttpEndpoint","SubgraphContext","createContext","resetSubgraphClient","newClient","url","exchanges","SubGraphProvider","children","client","setClient","useState","useSubgraph","useContext"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,YADF,EAEEC,QAAQ,IAAIC,YAFd,EAGEC,aAHF,EAIEC,aAJF,QAKO,MALP;AAMA,SAASC,gBAAT,QAAiC,sBAAjC;AAEA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,SAASC,2BAAT,QAA4C,cAA5C;AAEA,MAAMC,eAAe,gBAAGT,KAAK,CAACU,aAAN,CAAoB;AAAEC,EAAAA,mBAAmB,EAAE;AAAvB,CAApB,CAAxB;;AAEA,MAAMC,SAAS,GAAG,MAChBX,YAAY,CAAC;AACXY,EAAAA,GAAG,EAAEL,2BADM;AAEXM,EAAAA,SAAS,EAAE,CACTT,aADS,EAETE,gBAFS,EAGTH,aAHS,EAITE,gBAAgB,EAJP;AAFA,CAAD,CADd;;AAWA,SAASS,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAwC;AACtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBlB,KAAK,CAACmB,QAAN,CAAeP,SAAS,EAAxB,CAA5B;AAEA,sBACE,oBAAC,eAAD,CAAiB,QAAjB;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,mBAAmB,EAAE,MAAMO,SAAS,CAACN,SAAS,EAAV;AAD/B,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEK,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BD,QAA9B,CALF,CADF;AASD;;AAED,MAAMI,WAAW,GAAG,MAAMpB,KAAK,CAACqB,UAAN,CAAiBZ,eAAjB,CAA1B;;AAEA,SAASM,gBAAT,EAA2BK,WAA3B","sourcesContent":["import React from 'react'\r\nimport {\r\n  createClient,\r\n  Provider as UrqlProvider,\r\n  cacheExchange,\r\n  debugExchange,\r\n} from 'urql'\r\nimport { getFetchExchange } from '../graphql-exchanges'\r\n\r\nimport { devtoolsExchange } from '@urql/devtools'\r\nimport { defaultSubgraphHttpEndpoint } from '../endpoints'\r\n\r\nconst SubgraphContext = React.createContext({ resetSubgraphClient: null })\r\n\r\nconst newClient = () =>\r\n  createClient({\r\n    url: defaultSubgraphHttpEndpoint,\r\n    exchanges: [\r\n      debugExchange,\r\n      devtoolsExchange,\r\n      cacheExchange,\r\n      getFetchExchange(),\r\n    ],\r\n  })\r\n\r\nfunction SubGraphProvider({ children }) {\r\n  const [client, setClient] = React.useState(newClient())\r\n\r\n  return (\r\n    <SubgraphContext.Provider\r\n      value={{\r\n        resetSubgraphClient: () => setClient(newClient()),\r\n      }}\r\n    >\r\n      <UrqlProvider value={client}>{children}</UrqlProvider>\r\n    </SubgraphContext.Provider>\r\n  )\r\n}\r\n\r\nconst useSubgraph = () => React.useContext(SubgraphContext)\r\n\r\nexport { SubGraphProvider, useSubgraph }\r\n"]},"metadata":{},"sourceType":"module"}