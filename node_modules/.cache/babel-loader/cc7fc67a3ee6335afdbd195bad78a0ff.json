{"ast":null,"code":"import _defineProperty from \"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/fabianmolina/Documents/1hive/tulip-frontend/src/GlobalErrorHandler.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { captureException, showReportDialog } from '@sentry/browser';\nimport GenericError from './components/Errors/GenericError';\nimport GlobalErrorScreen from './components/Errors/GlobalErrorScreen';\nimport { sentryEnabled } from './sentry';\n\nclass GlobalErrorHandler extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      error: null,\n      errorStack: null\n    });\n\n    _defineProperty(this, \"handleReportClick\", () => {\n      if (sentryEnabled) {\n        const eventId = captureException(this.state.error);\n        showReportDialog({\n          eventId\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleHashchange\", () => {\n      window.location.reload();\n    });\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({\n      error,\n      errorStack: errorInfo.componentStack.replace(/^\\n+|\\n+$/g, '').replace(/^ {4}/gm, '')\n    }); // Once this point is reached, the app can not recover because the routing\n    // system, being below this component in the tree, is not functional\n    // anymore. To make hash changes work despite this (e.g. by pressing the\n    // back button in the browser), the page need to be reloaded.\n\n    window.removeEventListener('hashchange', this.handleHashchange);\n    window.addEventListener('hashchange', this.handleHashchange);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('hashchange', this.handleHashchange);\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    const {\n      error,\n      errorStack\n    } = this.state;\n    return error ? /*#__PURE__*/React.createElement(GlobalErrorScreen, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GenericError, {\n      detailsTitle: error.message,\n      detailsContent: errorStack,\n      reportCallback: this.handleReportClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    })) : children;\n  }\n\n}\n\n_defineProperty(GlobalErrorHandler, \"propTypes\", {\n  children: PropTypes.node\n});\n\nexport default GlobalErrorHandler;","map":{"version":3,"sources":["/Users/fabianmolina/Documents/1hive/tulip-frontend/src/GlobalErrorHandler.js"],"names":["React","PropTypes","captureException","showReportDialog","GenericError","GlobalErrorScreen","sentryEnabled","GlobalErrorHandler","Component","error","errorStack","eventId","state","window","location","reload","componentDidCatch","errorInfo","setState","componentStack","replace","removeEventListener","handleHashchange","addEventListener","componentWillUnmount","render","children","props","message","handleReportClick","node"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,iBAAnD;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,SAASC,aAAT,QAA8B,UAA9B;;AAEA,MAAMC,kBAAN,SAAiCP,KAAK,CAACQ,SAAvC,CAAiD;AAAA;AAAA;;AAAA,mCAKvC;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,UAAU,EAAE;AAA3B,KALuC;;AAAA,+CA2B3B,MAAM;AACxB,UAAIJ,aAAJ,EAAmB;AACjB,cAAMK,OAAO,GAAGT,gBAAgB,CAAC,KAAKU,KAAL,CAAWH,KAAZ,CAAhC;AACAN,QAAAA,gBAAgB,CAAC;AAAEQ,UAAAA;AAAF,SAAD,CAAhB;AACD;AACF,KAhC8C;;AAAA,8CAkC5B,MAAM;AACvBE,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,KApC8C;AAAA;;AAO/CC,EAAAA,iBAAiB,CAACP,KAAD,EAAQQ,SAAR,EAAmB;AAClC,SAAKC,QAAL,CAAc;AACZT,MAAAA,KADY;AAEZC,MAAAA,UAAU,EAAEO,SAAS,CAACE,cAAV,CACTC,OADS,CACD,YADC,EACa,EADb,EAETA,OAFS,CAED,SAFC,EAEU,EAFV;AAFA,KAAd,EADkC,CAQlC;AACA;AACA;AACA;;AACAP,IAAAA,MAAM,CAACQ,mBAAP,CAA2B,YAA3B,EAAyC,KAAKC,gBAA9C;AACAT,IAAAA,MAAM,CAACU,gBAAP,CAAwB,YAAxB,EAAsC,KAAKD,gBAA3C;AACD;;AAEDE,EAAAA,oBAAoB,GAAG;AACrBX,IAAAA,MAAM,CAACQ,mBAAP,CAA2B,YAA3B,EAAyC,KAAKC,gBAA9C;AACD;;AAaDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,UAAM;AAAElB,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAwB,KAAKE,KAAnC;AAEA,WAAOH,KAAK,gBACV,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACE,MAAA,YAAY,EAAEA,KAAK,CAACmB,OADtB;AAEE,MAAA,cAAc,EAAElB,UAFlB;AAGE,MAAA,cAAc,EAAE,KAAKmB,iBAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADU,GASVH,QATF;AAWD;;AArD8C;;gBAA3CnB,kB,eACe;AACjBmB,EAAAA,QAAQ,EAAEzB,SAAS,CAAC6B;AADH,C;;AAuDrB,eAAevB,kBAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { captureException, showReportDialog } from '@sentry/browser'\nimport GenericError from './components/Errors/GenericError'\nimport GlobalErrorScreen from './components/Errors/GlobalErrorScreen'\nimport { sentryEnabled } from './sentry'\n\nclass GlobalErrorHandler extends React.Component {\n  static propTypes = {\n    children: PropTypes.node,\n  }\n\n  state = { error: null, errorStack: null }\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({\n      error,\n      errorStack: errorInfo.componentStack\n        .replace(/^\\n+|\\n+$/g, '')\n        .replace(/^ {4}/gm, ''),\n    })\n\n    // Once this point is reached, the app can not recover because the routing\n    // system, being below this component in the tree, is not functional\n    // anymore. To make hash changes work despite this (e.g. by pressing the\n    // back button in the browser), the page need to be reloaded.\n    window.removeEventListener('hashchange', this.handleHashchange)\n    window.addEventListener('hashchange', this.handleHashchange)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('hashchange', this.handleHashchange)\n  }\n\n  handleReportClick = () => {\n    if (sentryEnabled) {\n      const eventId = captureException(this.state.error)\n      showReportDialog({ eventId })\n    }\n  }\n\n  handleHashchange = () => {\n    window.location.reload()\n  }\n\n  render() {\n    const { children } = this.props\n    const { error, errorStack } = this.state\n\n    return error ? (\n      <GlobalErrorScreen>\n        <GenericError\n          detailsTitle={error.message}\n          detailsContent={errorStack}\n          reportCallback={this.handleReportClick}\n        />\n      </GlobalErrorScreen>\n    ) : (\n      children\n    )\n  }\n}\n\nexport default GlobalErrorHandler\n"]},"metadata":{},"sourceType":"module"}