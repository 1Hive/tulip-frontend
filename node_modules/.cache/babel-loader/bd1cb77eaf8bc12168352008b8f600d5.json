{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Counter = require('crdts/src/G-Counter');\n\nvar CounterIndex = /*#__PURE__*/function () {\n  function CounterIndex(id) {\n    _classCallCheck(this, CounterIndex);\n\n    this._index = new Counter(id);\n  }\n\n  _createClass(CounterIndex, [{\n    key: \"get\",\n    value: function get() {\n      return this._index;\n    }\n  }, {\n    key: \"updateIndex\",\n    value: function updateIndex(oplog) {\n      var _this = this;\n\n      if (this._index) {\n        var createCounter = function createCounter(e) {\n          return Counter.from(e.payload.value);\n        };\n\n        var mergeToIndex = function mergeToIndex(e) {\n          return _this._index.merge(e);\n        };\n\n        oplog.values.filter(function (e) {\n          return e && e.payload.op === 'COUNTER';\n        }).map(createCounter).forEach(mergeToIndex);\n      }\n    }\n  }]);\n\n  return CounterIndex;\n}();\n\nmodule.exports = CounterIndex;","map":null,"metadata":{},"sourceType":"script"}