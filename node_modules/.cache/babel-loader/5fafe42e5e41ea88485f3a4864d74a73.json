{"ast":null,"code":"var _jsxFileName = \"/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Profile/components/AchievementDescription.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Text } from '@pancakeswap-libs/uikit';\nimport useI18n from 'hooks/useI18n';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Description = styled(Text).attrs({\n  as: 'p',\n  fontSize: '14px'\n})`\n  display: none;\n\n  ${({\n  theme\n}) => theme.mediaQueries.md} {\n    display: block;\n  }\n`;\n_c = Description;\n\nconst AchievementDescription = ({\n  description,\n  ...props\n}) => {\n  _s();\n\n  const TranslateString = useI18n();\n\n  if (!description) {\n    return null;\n  }\n\n  if (typeof description === 'string') {\n    return /*#__PURE__*/_jsxDEV(Text, {\n      as: \"p\",\n      color: \"textSubtle\",\n      fontSize: \"14px\",\n      ...props,\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n  const {\n    id,\n    fallback,\n    data = {}\n  } = description;\n  return /*#__PURE__*/_jsxDEV(Description, {\n    color: \"textSubtle\",\n    ...props,\n    children: TranslateString(id, fallback, data)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AchievementDescription, \"SC/Zc+rnUQSfBje7TuuyRy0lI/g=\", false, function () {\n  return [useI18n];\n});\n\n_c2 = AchievementDescription;\nexport default AchievementDescription;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Description\");\n$RefreshReg$(_c2, \"AchievementDescription\");","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Profile/components/AchievementDescription.tsx"],"names":["React","Text","useI18n","styled","Description","attrs","as","fontSize","theme","mediaQueries","md","AchievementDescription","description","props","TranslateString","id","fallback","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAgC,yBAAhC;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;;AAMA,MAAMC,WAAW,GAAGD,MAAM,CAACF,IAAD,CAAN,CAAaI,KAAb,CAAmB;AAAEC,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,QAAQ,EAAE;AAArB,CAAnB,CAAkD;AACtE;AACA;AACA,IAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAAN,CAAmBC,EAAG;AACzC;AACA;AACA,CANA;KAAMN,W;;AAQN,MAAMO,sBAA6D,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAe,KAAGC;AAAlB,CAAD,KAA+B;AAAA;;AACnG,QAAMC,eAAe,GAAGZ,OAAO,EAA/B;;AAEA,MAAI,CAACU,WAAL,EAAkB;AAChB,WAAO,IAAP;AACD;;AAED,MAAI,OAAOA,WAAP,KAAuB,QAA3B,EAAqC;AACnC,wBACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,KAAK,EAAC,YAAnB;AAAgC,MAAA,QAAQ,EAAC,MAAzC;AAAA,SAAoDC,KAApD;AAAA,gBACGD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,QAAM;AAAEG,IAAAA,EAAF;AAAMC,IAAAA,QAAN;AAAgBC,IAAAA,IAAI,GAAG;AAAvB,MAA8BL,WAApC;AAEA,sBACE,QAAC,WAAD;AAAa,IAAA,KAAK,EAAC,YAAnB;AAAA,OAAoCC,KAApC;AAAA,cACGC,eAAe,CAACC,EAAD,EAAKC,QAAL,EAAeC,IAAf;AADlB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAtBD;;GAAMN,sB;UACoBT,O;;;MADpBS,sB;AAwBN,eAAeA,sBAAf","sourcesContent":["import React from 'react'\nimport { Text, TextProps } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { TranslatableText as AchievementDescriptionType } from 'state/types'\nimport styled from 'styled-components'\n\ninterface AchievementDescriptionProps extends TextProps {\n  description?: AchievementDescriptionType\n}\n\nconst Description = styled(Text).attrs({ as: 'p', fontSize: '14px' })`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst AchievementDescription: React.FC<AchievementDescriptionProps> = ({ description, ...props }) => {\n  const TranslateString = useI18n()\n\n  if (!description) {\n    return null\n  }\n\n  if (typeof description === 'string') {\n    return (\n      <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\" {...props}>\n        {description}\n      </Text>\n    )\n  }\n\n  const { id, fallback, data = {} } = description\n\n  return (\n    <Description color=\"textSubtle\" {...props}>\n      {TranslateString(id, fallback, data)}\n    </Description>\n  )\n}\n\nexport default AchievementDescription\n"]},"metadata":{},"sourceType":"module"}