{"ast":null,"code":"import { getProfileContract } from 'utils/contractHelpers';\nimport { campaignMap } from 'config/constants/campaigns';\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements';\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\n\nexport const getUserPointIncreaseEvents = async account => {\n  try {\n    const profileContract = getProfileContract();\n    const events = await profileContract.getPastEvents('UserPointIncrease', {\n      fromBlock: 'earliest',\n      toBlock: 'latest',\n      filter: {\n        userAddress: account\n      }\n    });\n    return events;\n  } catch (error) {\n    return [];\n  }\n};\n/**\n * Gets all user point increase events and adds achievement meta\n */\n\nexport const getAchievements = async account => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account);\n  return pointIncreaseEvents.reduce((accum, event) => {\n    if (!campaignMap.has(event.returnValues.campaignId)) {\n      return accum;\n    }\n\n    const campaignMeta = campaignMap.get(event.returnValues.campaignId);\n    return [...accum, {\n      id: event.returnValues.campaignId,\n      type: campaignMeta.type,\n      address: event.address,\n      title: getAchievementTitle(campaignMeta),\n      description: getAchievementDescription(campaignMeta),\n      badge: campaignMeta.badge,\n      points: Number(event.returnValues.numberPoints)\n    }];\n  }, []);\n};","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/state/achievements/helpers.ts"],"names":["getProfileContract","campaignMap","getAchievementTitle","getAchievementDescription","getUserPointIncreaseEvents","account","profileContract","events","getPastEvents","fromBlock","toBlock","filter","userAddress","error","getAchievements","pointIncreaseEvents","reduce","accum","event","has","returnValues","campaignId","campaignMeta","get","id","type","address","title","description","badge","points","Number","numberPoints"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,uBAAnC;AACA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,SAASC,mBAAT,EAA8BC,yBAA9B,QAA+D,oBAA/D;AAEA;AACA;AACA;;AACA,OAAO,MAAMC,0BAA0B,GAAG,MAAOC,OAAP,IAA2B;AACnE,MAAI;AACF,UAAMC,eAAe,GAAGN,kBAAkB,EAA1C;AACA,UAAMO,MAAM,GAAG,MAAMD,eAAe,CAACE,aAAhB,CAA8B,mBAA9B,EAAmD;AACtEC,MAAAA,SAAS,EAAE,UAD2D;AAEtEC,MAAAA,OAAO,EAAE,QAF6D;AAGtEC,MAAAA,MAAM,EAAE;AACNC,QAAAA,WAAW,EAAEP;AADP;AAH8D,KAAnD,CAArB;AAQA,WAAOE,MAAP;AACD,GAXD,CAWE,OAAOM,KAAP,EAAc;AACd,WAAO,EAAP;AACD;AACF,CAfM;AAiBP;AACA;AACA;;AACA,OAAO,MAAMC,eAAe,GAAG,MAAOT,OAAP,IAAmD;AAChF,QAAMU,mBAAmB,GAAG,MAAMX,0BAA0B,CAACC,OAAD,CAA5D;AAEA,SAAOU,mBAAmB,CAACC,MAApB,CAA2B,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAClD,QAAI,CAACjB,WAAW,CAACkB,GAAZ,CAAgBD,KAAK,CAACE,YAAN,CAAmBC,UAAnC,CAAL,EAAqD;AACnD,aAAOJ,KAAP;AACD;;AAED,UAAMK,YAAY,GAAGrB,WAAW,CAACsB,GAAZ,CAAgBL,KAAK,CAACE,YAAN,CAAmBC,UAAnC,CAArB;AAEA,WAAO,CACL,GAAGJ,KADE,EAEL;AACEO,MAAAA,EAAE,EAAEN,KAAK,CAACE,YAAN,CAAmBC,UADzB;AAEEI,MAAAA,IAAI,EAAEH,YAAY,CAACG,IAFrB;AAGEC,MAAAA,OAAO,EAAER,KAAK,CAACQ,OAHjB;AAIEC,MAAAA,KAAK,EAAEzB,mBAAmB,CAACoB,YAAD,CAJ5B;AAKEM,MAAAA,WAAW,EAAEzB,yBAAyB,CAACmB,YAAD,CALxC;AAMEO,MAAAA,KAAK,EAAEP,YAAY,CAACO,KANtB;AAOEC,MAAAA,MAAM,EAAEC,MAAM,CAACb,KAAK,CAACE,YAAN,CAAmBY,YAApB;AAPhB,KAFK,CAAP;AAYD,GAnBM,EAmBJ,EAnBI,CAAP;AAoBD,CAvBM","sourcesContent":["import { getProfileContract } from 'utils/contractHelpers'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string) => {\n  try {\n    const profileContract = getProfileContract()\n    const events = await profileContract.getPastEvents('UserPointIncrease', {\n      fromBlock: 'earliest',\n      toBlock: 'latest',\n      filter: {\n        userAddress: account,\n      },\n    })\n\n    return events\n  } catch (error) {\n    return []\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  return pointIncreaseEvents.reduce((accum, event) => {\n    if (!campaignMap.has(event.returnValues.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(event.returnValues.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: event.returnValues.campaignId,\n        type: campaignMeta.type,\n        address: event.address,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(event.returnValues.numberPoints),\n      },\n    ]\n  }, [])\n}\n"]},"metadata":{},"sourceType":"module"}