{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nrequire('./slicedToArray-a8a77f0e.js');\n\nrequire('./unsupportedIterableToArray-f175acfa.js');\n\nvar React = require('react');\n\nrequire('./_commonjsHelpers-1b94f6bc.js');\n\nvar index = require('./index-46d0e707.js');\n\nrequire('./defineProperty-3cad0327.js');\n\nrequire('./toConsumableArray-cc0d28a9.js');\n\nvar _styled = require('styled-components');\n\nrequire('./getPrototypeOf-55c9e80c.js');\n\nrequire('./color.js');\n\nrequire('./css.js');\n\nrequire('./miscellaneous.js');\n\nrequire('./environment.js');\n\nrequire('./font.js');\n\nrequire('./keycodes.js');\n\nvar constants = require('./constants.js');\n\nrequire('./breakpoints.js');\n\nrequire('./text-styles.js');\n\nrequire('./theme-dark.js');\n\nrequire('./theme-light.js');\n\nvar Theme = require('./Theme.js');\n\nrequire('./extends-023d783e.js');\n\nrequire('./objectWithoutProperties-c6d3675c.js');\n\nrequire('./index-4def0554.js');\n\nrequire('./_baseGetTag-42b4dd3e.js');\n\nrequire('./Viewport-819c53c9.js');\n\nrequire('./Layout.js');\n\nrequire('./FocusVisible.js');\n\nrequire('./ButtonBase.js');\n\nrequire('./IconPropTypes-12cd7567.js');\n\nvar IconDown = require('./IconDown.js');\n\nvar IconUp = require('./IconUp.js');\n\nrequire('./Button.js');\n\nvar ButtonIcon = require('./ButtonIcon.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\nvar _styled__default = /*#__PURE__*/_interopDefaultLegacy(_styled);\n\nvar _StyledButtonIcon = _styled__default['default'](ButtonIcon.default).withConfig({\n  displayName: \"ToggleButton___StyledButtonIcon\",\n  componentId: \"sc-1fkpeh6-0\"\n})([\"display:flex;flex-direction:column;color:\", \";& > div{display:flex;transform-origin:50% 50%;transition:transform 250ms ease-in-out;}\"], function (p) {\n  return p._css;\n});\n\nvar _StyledDiv = _styled__default['default'](\"div\").withConfig({\n  displayName: \"ToggleButton___StyledDiv\",\n  componentId: \"sc-1fkpeh6-1\"\n})([\"transform:rotate3d(\", \",0,0,180deg);transform:rotate3d(0,0,\", \",180deg);\"], function (p) {\n  return p._css2;\n}, function (p) {\n  return p._css3;\n});\n\nvar _StyledDiv2 = _styled__default['default'](\"div\").withConfig({\n  displayName: \"ToggleButton___StyledDiv2\",\n  componentId: \"sc-1fkpeh6-2\"\n})([\"transform:rotate3d(\", \",0,0,180deg);transform:rotate3d(0,0,\", \",180deg);\"], function (p) {\n  return p._css4;\n}, function (p) {\n  return p._css5;\n});\n\nfunction ToggleButton(_ref) {\n  var onClick = _ref.onClick,\n      opened = _ref.opened;\n  var theme = Theme.useTheme();\n  return /*#__PURE__*/React__default['default'].createElement(_StyledButtonIcon, {\n    label: opened ? 'Close' : 'Open',\n    focusRingRadius: constants.RADIUS,\n    onClick: onClick,\n    _css: theme.surfaceContentSecondary\n  }, /*#__PURE__*/React__default['default'].createElement(_StyledDiv, {\n    _css2: opened ? 1 : 0,\n    _css3: opened ? 1 : 0\n  }, /*#__PURE__*/React__default['default'].createElement(IconUp.default, {\n    size: \"small\"\n  })), /*#__PURE__*/React__default['default'].createElement(_StyledDiv2, {\n    _css4: opened ? -1 : 0,\n    _css5: opened ? -1 : 0\n  }, /*#__PURE__*/React__default['default'].createElement(IconDown.default, {\n    size: \"small\"\n  })));\n}\n\nToggleButton.propTypes = {\n  onClick: index.propTypes.func.isRequired,\n  opened: index.propTypes.bool.isRequired\n};\nexports.ToggleButton = ToggleButton;","map":{"version":3,"sources":["../src/components/DataView/ToggleButton.js"],"names":["onClick","opened","theme","useTheme","RADIUS","surfaceContentSecondary","IconUp","IconDown","ToggleButton","PropTypes","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,SAAA,YAAA,CAAA,IAAA,EAA2C;AAAA,MAAnBA,OAAmB,GAAA,IAAA,CAAnBA,OAAmB;AAAA,MAAVC,MAAU,GAAA,IAAA,CAAVA,MAAU;AACzC,MAAMC,KAAK,GAAGC,KAAAA,CAAd,QAAcA,EAAd;AACA,SAAA,aACE,cAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,iBAAA,EAAA;AACE,IAAA,KAAK,EAAEF,MAAM,GAAA,OAAA,GADf,MAAA;AAEE,IAAA,eAAe,EAAEG,SAAAA,CAFnB,MAAA;AAGE,IAAA,OAAO,EAHT,OAAA;AAAA,IAAA,IAAA,EAOaF,KAAK,CAACG;AAPnB,GAAA,EAAA,aAeE,cAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AAAA,IAAA,KAAA,EAE0BJ,MAAM,GAAA,CAAA,GAFhC,CAAA;AAAA,IAAA,KAAA,EAGgCA,MAAM,GAAA,CAAA,GAAO;AAH7C,GAAA,EAAA,aAME,cAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAACK,MAAAA,CAAD,OAAA,EAAA;AAAQ,IAAA,IAAI,EAAC;AAAb,GAAA,CANF,CAfF,EAAA,aAuBE,cAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,WAAA,EAAA;AAAA,IAAA,KAAA,EAE0BL,MAAM,GAAG,CAAH,CAAA,GAFhC,CAAA;AAAA,IAAA,KAAA,EAGgCA,MAAM,GAAG,CAAH,CAAA,GAAQ;AAH9C,GAAA,EAAA,aAME,cAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAACM,QAAAA,CAAD,OAAA,EAAA;AAAU,IAAA,IAAI,EAAC;AAAf,GAAA,CANF,CAvBF,CADF;AAkCD;;AAEDC,YAAY,CAAZA,SAAAA,GAAyB;AACvBR,EAAAA,OAAO,EAAES,KAAAA,CAAAA,SAAAA,CAAAA,IAAAA,CADc,UAAA;AAEvBR,EAAAA,MAAM,EAAEQ,KAAAA,CAAAA,SAAAA,CAAAA,IAAAA,CAAeC;AAFA,CAAzBF","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport ButtonIcon from '../Button/ButtonIcon'\nimport { IconDown, IconUp } from '../../icons'\nimport { useTheme } from '../../theme'\nimport { RADIUS } from '../../style'\n\nfunction ToggleButton({ onClick, opened }) {\n  const theme = useTheme()\n  return (\n    <ButtonIcon\n      label={opened ? 'Close' : 'Open'}\n      focusRingRadius={RADIUS}\n      onClick={onClick}\n      css={`\n        display: flex;\n        flex-direction: column;\n        color: ${theme.surfaceContentSecondary};\n        & > div {\n          display: flex;\n          transform-origin: 50% 50%;\n          transition: transform 250ms ease-in-out;\n        }\n      `}\n    >\n      <div\n        css={`\n          transform: rotate3d(${opened ? 1 : 0}, 0, 0, 180deg);\n          transform: rotate3d(0, 0, ${opened ? 1 : 0}, 180deg);\n        `}\n      >\n        <IconUp size=\"small\" />\n      </div>\n      <div\n        css={`\n          transform: rotate3d(${opened ? -1 : 0}, 0, 0, 180deg);\n          transform: rotate3d(0, 0, ${opened ? -1 : 0}, 180deg);\n        `}\n      >\n        <IconDown size=\"small\" />\n      </div>\n    </ButtonIcon>\n  )\n}\n\nToggleButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  opened: PropTypes.bool.isRequired,\n}\n\nexport { ToggleButton }\n"]},"metadata":{},"sourceType":"script"}