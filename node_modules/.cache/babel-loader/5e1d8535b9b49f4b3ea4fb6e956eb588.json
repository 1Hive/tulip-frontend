{"ast":null,"code":"'use strict';\n\nconst getIterator = require('get-iterator'); // a pair of streams where one drains from the other\n\n\nmodule.exports = function pair() {\n  let _source, onSource;\n\n  const sink = async source => {\n    if (_source) throw new Error('already piped');\n    _source = getIterator(source);\n    if (onSource) onSource(_source);\n  };\n\n  const source = {\n    [Symbol.asyncIterator]() {\n      return this;\n    },\n\n    next() {\n      if (_source) return _source.next();\n      return new Promise(resolve => {\n        onSource = source => {\n          onSource = null;\n          resolve(source.next());\n        };\n      });\n    }\n\n  };\n  return {\n    sink,\n    source\n  };\n};","map":null,"metadata":{},"sourceType":"script"}