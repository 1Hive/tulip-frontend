{"ast":null,"code":"var _jsxFileName = \"/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/components/Balance.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport CountUp from 'react-countup';\nimport styled from 'styled-components';\nimport { Text } from '@pancakeswap-libs/uikit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledText = styled(Text)`\n  color: ${({\n  isDisabled,\n  color,\n  theme\n}) => isDisabled ? theme.colors.textDisabled : color};\n`;\n_c = StyledText;\n\nconst Balance = ({\n  value,\n  fontSize,\n  color,\n  decimals,\n  isDisabled,\n  unit\n}) => {\n  _s();\n\n  const previousValue = useRef(0);\n  useEffect(() => {\n    previousValue.current = value;\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(StyledText, {\n    bold: true,\n    color: color,\n    fontSize: fontSize,\n    isDisabled: isDisabled,\n    children: [/*#__PURE__*/_jsxDEV(CountUp, {\n      start: previousValue.current,\n      end: value,\n      decimals: decimals,\n      duration: 1,\n      separator: \",\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), value && unit && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: unit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Balance, \"7sxqKrCAfH7mvAmhUempIz0vd8c=\");\n\n_c2 = Balance;\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3\n};\nexport default Balance;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledText\");\n$RefreshReg$(_c2, \"Balance\");","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/components/Balance.tsx"],"names":["React","useEffect","useRef","CountUp","styled","Text","StyledText","isDisabled","color","theme","colors","textDisabled","Balance","value","fontSize","decimals","unit","previousValue","current","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,QAAqB,yBAArB;;AAcA,MAAMC,UAAU,GAAGF,MAAM,CAACC,IAAD,CAAkB;AAC3C,WAAW,CAAC;AAAEE,EAAAA,UAAF;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA;AAArB,CAAD,KAAmCF,UAAU,GAAGE,KAAK,CAACC,MAAN,CAAaC,YAAhB,GAA+BH,KAAO;AAC9F,CAFA;KAAMF,U;;AAIN,MAAMM,OAA+B,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBN,EAAAA,KAAnB;AAA0BO,EAAAA,QAA1B;AAAoCR,EAAAA,UAApC;AAAgDS,EAAAA;AAAhD,CAAD,KAA4D;AAAA;;AAClG,QAAMC,aAAa,GAAGf,MAAM,CAAC,CAAD,CAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,aAAa,CAACC,OAAd,GAAwBL,KAAxB;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,sBACE,QAAC,UAAD;AAAY,IAAA,IAAI,MAAhB;AAAiB,IAAA,KAAK,EAAEL,KAAxB;AAA+B,IAAA,QAAQ,EAAEM,QAAzC;AAAmD,IAAA,UAAU,EAAEP,UAA/D;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEU,aAAa,CAACC,OAA9B;AAAuC,MAAA,GAAG,EAAEL,KAA5C;AAAmD,MAAA,QAAQ,EAAEE,QAA7D;AAAuE,MAAA,QAAQ,EAAE,CAAjF;AAAoF,MAAA,SAAS,EAAC;AAA9F;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,KAAK,IAAIG,IAAT,iBAAiB;AAAA,gBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,YAFpB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAbD;;GAAMJ,O;;MAAAA,O;AAeNA,OAAO,CAACO,YAAR,GAAuB;AACrBL,EAAAA,QAAQ,EAAE,MADW;AAErBP,EAAAA,UAAU,EAAE,KAFS;AAGrBC,EAAAA,KAAK,EAAE,MAHc;AAIrBO,EAAAA,QAAQ,EAAE;AAJW,CAAvB;AAOA,eAAeH,OAAf","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n"]},"metadata":{},"sourceType":"module"}