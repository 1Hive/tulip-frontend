{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nrequire('./slicedToArray-a8a77f0e.js');\n\nrequire('./unsupportedIterableToArray-f175acfa.js');\n\nvar React = require('react');\n\nrequire('./_commonjsHelpers-1b94f6bc.js');\n\nvar index = require('./index-46d0e707.js');\n\nrequire('./defineProperty-3cad0327.js');\n\nrequire('./toConsumableArray-cc0d28a9.js');\n\nvar _styled = require('styled-components');\n\nrequire('./getPrototypeOf-55c9e80c.js');\n\nrequire('./color.js');\n\nrequire('./css.js');\n\nvar miscellaneous = require('./miscellaneous.js');\n\nrequire('./environment.js');\n\nrequire('./font.js');\n\nrequire('./keycodes.js');\n\nvar constants = require('./constants.js');\n\nrequire('./breakpoints.js');\n\nrequire('./springs.js');\n\nrequire('./text-styles.js');\n\nrequire('./theme-dark.js');\n\nrequire('./theme-light.js');\n\nvar Theme = require('./Theme.js');\n\nvar _extends = require('./extends-023d783e.js');\n\nrequire('./objectWithoutProperties-c6d3675c.js');\n\nrequire('./index-4def0554.js');\n\nrequire('./_baseGetTag-42b4dd3e.js');\n\nrequire('./Viewport-819c53c9.js');\n\nrequire('./Layout.js');\n\nrequire('./FocusVisible.js');\n\nvar ButtonBase = require('./ButtonBase.js');\n\nrequire('./IconPropTypes-12cd7567.js');\n\nrequire('./IconCross.js');\n\nrequire('./IconSearch.js');\n\nrequire('./objectWithoutPropertiesLoose-1af20ad0.js');\n\nrequire('react-dom');\n\nrequire('./web-7cbdbd84.js');\n\nrequire('./Button.js');\n\nrequire('./ButtonIcon.js');\n\nrequire('./TextInput.js');\n\nrequire('./useArrowKeysFocus.js');\n\nrequire('./useClickOutside.js');\n\nrequire('./useFocusLeave.js');\n\nrequire('./useImageExists.js');\n\nrequire('./useKeyDown.js');\n\nrequire('./SearchInput.js');\n\nvar AutoComplete = require('./AutoComplete.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\nvar _styled__default = /*#__PURE__*/_interopDefaultLegacy(_styled);\n\nvar _StyledButtonBase = _styled__default['default'](ButtonBase.default).withConfig({\n  displayName: \"AutoCompleteSelected___StyledButtonBase\",\n  componentId: \"sc-15vq9oz-0\"\n})([\"height:40px;width:100%;text-align:left;background:\", \";cursor:pointer;border:1px solid \", \";padding:4px 8px;\", \";\"], function (p) {\n  return p._css;\n}, function (p) {\n  return p._css2;\n}, function (p) {\n  return p._css3;\n});\n\nfunction AutoCompleteSelected(_ref) {\n  var forwardedRef = _ref.forwardedRef,\n      itemButtonStyles = _ref.itemButtonStyles,\n      items = _ref.items,\n      onChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      _ref$onSelectedClick = _ref.onSelectedClick,\n      onSelectedClick = _ref$onSelectedClick === void 0 ? miscellaneous.noop : _ref$onSelectedClick,\n      placeholder = _ref.placeholder,\n      renderItem = _ref.renderItem,\n      required = _ref.required,\n      _ref$renderSelected = _ref.renderSelected,\n      renderSelected = _ref$renderSelected === void 0 ? miscellaneous.identity : _ref$renderSelected,\n      selected = _ref.selected,\n      _ref$selectedButtonSt = _ref.selectedButtonStyles,\n      selectedButtonStyles = _ref$selectedButtonSt === void 0 ? '' : _ref$selectedButtonSt,\n      value = _ref.value,\n      wide = _ref.wide;\n  var theme = Theme.useTheme();\n  var ref = forwardedRef;\n  var selectedRef = React.useRef();\n  var handleSelect = React.useCallback(function (selected) {\n    onSelect(selected);\n    setTimeout(function () {\n      selectedRef.current.focus();\n    }, 0);\n  }, [onSelect]);\n  var handleSelectedClick = React.useCallback(function () {\n    onSelectedClick();\n    setTimeout(function () {\n      if (ref && ref.current) {\n        ref.current.select();\n        ref.current.focus();\n      }\n    }, 0);\n  }, [ref, onSelectedClick]);\n\n  if (selected) {\n    return /*#__PURE__*/React__default['default'].createElement(_StyledButtonBase, {\n      onClick: handleSelectedClick,\n      ref: selectedRef,\n      focusRingRadius: constants.RADIUS,\n      focusRingSpacing: 1,\n      _css: theme.surface,\n      _css2: theme.border,\n      _css3: selectedButtonStyles\n    }, renderSelected(selected));\n  }\n\n  return /*#__PURE__*/React__default['default'].createElement(AutoComplete.default, {\n    itemButtonStyles: itemButtonStyles,\n    items: items,\n    onChange: onChange,\n    onSelect: handleSelect,\n    placeholder: placeholder,\n    ref: ref,\n    renderItem: renderItem,\n    required: required,\n    value: value,\n    wide: wide\n  });\n}\n\nAutoCompleteSelected.propTypes = {\n  forwardedRef: index.propTypes.object,\n  itemButtonStyles: index.propTypes.string,\n  items: index.propTypes.array.isRequired,\n  onChange: index.propTypes.func.isRequired,\n  onSelect: index.propTypes.func.isRequired,\n  onSelectedClick: index.propTypes.func,\n  placeholder: index.propTypes.string,\n  renderItem: index.propTypes.func,\n  renderSelected: index.propTypes.func,\n  required: index.propTypes.bool,\n  selected: index.propTypes.object,\n  selectedButtonStyles: index.propTypes.string,\n  value: index.propTypes.string,\n  wide: index.propTypes.bool\n};\nvar AutoCompleteSelectedMemo = /*#__PURE__*/React__default['default'].memo(AutoCompleteSelected);\nvar AutoCompleteSelected$1 = /*#__PURE__*/React__default['default'].forwardRef(function (props, ref) {\n  return /*#__PURE__*/React__default['default'].createElement(AutoCompleteSelectedMemo, _extends._extends_1({}, props, {\n    forwardedRef: ref\n  }));\n});\nexports.default = AutoCompleteSelected$1;","map":{"version":3,"sources":["../src/components/AutoComplete/AutoCompleteSelected.js"],"names":["forwardedRef","itemButtonStyles","items","onChange","onSelect","onSelectedClick","noop","placeholder","renderItem","required","renderSelected","identity","selected","selectedButtonStyles","value","wide","theme","useTheme","ref","selectedRef","useRef","handleSelect","useCallback","setTimeout","handleSelectedClick","RADIUS","AutoComplete","AutoCompleteSelected","PropTypes","bool","AutoCompleteSelectedMemo","React"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { RADIUS } from '../../style'\nimport { useTheme } from '../../theme'\nimport { identity, noop } from '../../utils'\nimport ButtonBase from '../ButtonBase/ButtonBase'\nimport AutoComplete from './AutoComplete'\n\nfunction AutoCompleteSelected({\n  forwardedRef,\n  itemButtonStyles,\n  items,\n  onChange,\n  onSelect,\n  onSelectedClick = noop,\n  placeholder,\n  renderItem,\n  required,\n  renderSelected = identity,\n  selected,\n  selectedButtonStyles = '',\n  value,\n  wide,\n}) {\n  const theme = useTheme()\n\n  const ref = forwardedRef\n  const selectedRef = useRef()\n\n  const handleSelect = useCallback(\n    selected => {\n      onSelect(selected)\n      setTimeout(() => {\n        selectedRef.current.focus()\n      }, 0)\n    },\n    [onSelect]\n  )\n  const handleSelectedClick = useCallback(() => {\n    onSelectedClick()\n    setTimeout(() => {\n      if (ref && ref.current) {\n        ref.current.select()\n        ref.current.focus()\n      }\n    }, 0)\n  }, [ref, onSelectedClick])\n\n  if (selected) {\n    return (\n      <ButtonBase\n        onClick={handleSelectedClick}\n        ref={selectedRef}\n        focusRingRadius={RADIUS}\n        focusRingSpacing={1}\n        css={`\n          height: 40px;\n          width: 100%;\n          text-align: left;\n          background: ${theme.surface};\n          cursor: pointer;\n          border: 1px solid ${theme.border};\n          padding: 4px 8px;\n          ${selectedButtonStyles};\n        `}\n      >\n        {renderSelected(selected)}\n      </ButtonBase>\n    )\n  }\n\n  return (\n    <AutoComplete\n      itemButtonStyles={itemButtonStyles}\n      items={items}\n      onChange={onChange}\n      onSelect={handleSelect}\n      placeholder={placeholder}\n      ref={ref}\n      renderItem={renderItem}\n      required={required}\n      value={value}\n      wide={wide}\n    />\n  )\n}\n\nAutoCompleteSelected.propTypes = {\n  forwardedRef: PropTypes.object,\n  itemButtonStyles: PropTypes.string,\n  items: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  onSelectedClick: PropTypes.func,\n  placeholder: PropTypes.string,\n  renderItem: PropTypes.func,\n  renderSelected: PropTypes.func,\n  required: PropTypes.bool,\n  selected: PropTypes.object,\n  selectedButtonStyles: PropTypes.string,\n  value: PropTypes.string,\n  wide: PropTypes.bool,\n}\n\nconst AutoCompleteSelectedMemo = React.memo(AutoCompleteSelected)\n\nexport default React.forwardRef((props, ref) => (\n  <AutoCompleteSelectedMemo {...props} forwardedRef={ref} />\n))\n"]},"metadata":{},"sourceType":"script"}