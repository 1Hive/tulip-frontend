{"ast":null,"code":"'use strict';\n\nconst debug = require('debug');\n\nconst log = debug('repo-migrations:repo_mem_lock');\nconst lockFile = 'repo.lock';\nconst LOCKS = {};\n/**\n * Lock the repo in the given dir and for given repo version.\n * @param {int} version\n * @param {string} dir\n * @returns {Promise<Object>}\n */\n\nexports.lock = async function lock(version, dir) {\n  // eslint-disable-line require-await\n  const file = dir + '/' + lockFile;\n  log('locking %s', file);\n\n  if (LOCKS[file] === true) {\n    throw Error(`There is already present lock for: ${file}`);\n  }\n\n  LOCKS[file] = true;\n  return {\n    close() {\n      if (LOCKS[file]) {\n        log('releasing lock %s', file);\n        delete LOCKS[file];\n      }\n    }\n\n  };\n};","map":null,"metadata":{},"sourceType":"script"}