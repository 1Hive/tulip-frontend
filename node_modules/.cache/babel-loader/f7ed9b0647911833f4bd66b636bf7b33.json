{"ast":null,"code":"const pageResults = require('graph-results-pager');\n\nconst ws = require('isomorphic-ws');\n\nconst {\n  SubscriptionClient\n} = require('subscriptions-transport-ws');\n\nconst {\n  request,\n  gql\n} = require('graphql-request');\n\nconst {\n  graphAPIEndpoints,\n  graphWSEndpoints\n} = require('./../constants');\n\nconst {\n  timestampToBlock\n} = require('./../utils');\n\nmodule.exports = {\n  async user({\n    block = undefined,\n    timestamp = undefined,\n    user_address = undefined\n  } = {}) {\n    return pageResults({\n      api: graphAPIEndpoints.lockup,\n      query: {\n        entity: 'users',\n        selection: {\n          where: {\n            address: `\\\\\"${user_address.toLowerCase()}\\\\\"`\n          }\n        },\n        block: block ? {\n          number: block\n        } : timestamp ? {\n          number: await timestampToBlock(timestamp)\n        } : undefined,\n        properties: user.properties\n      }\n    }).then(results => user.callback(results)).catch(err => console.log(err));\n  }\n\n};\nconst user = {\n  properties: ['id', 'address', 'amount', 'rewardDebt', 'pool { id, balance, accSushiPerShare }', 'sushiAtLockup', 'sushiHarvestedSinceLockup', 'sushiLocked'],\n\n  callback(results) {\n    return results.map(entry => ({\n      id: entry.id,\n      address: entry.address,\n      amount: Number(entry.amount),\n      rewardDebt: BigInt(entry.rewardDebt),\n      pool: {\n        id: entry.pool.id,\n        balance: Number(entry.pool.balance),\n        accSushiPerShare: BigInt(accSushiPerShare)\n      },\n      sushiAtLockup: Number(entry.sushiAtLockup),\n      sushiHarvestedSinceLockup: Number(entry.sushiHarvestedSinceLockup),\n      sushiLocked: Number(entry.sushiLocked)\n    }));\n  }\n\n};","map":null,"metadata":{},"sourceType":"script"}