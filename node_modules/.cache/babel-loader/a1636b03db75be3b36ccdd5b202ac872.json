{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar levelup = require('levelup');\n\nvar level = require('level');\n\nvar fs = typeof window === 'object' || typeof self === 'object' ? null : eval('require(\"fs\")'); // eslint-disable-line\n// Should work for all abstract-leveldown compliant stores\n\n/*\n * createIfMissing (boolean, default: true): If true, will initialise an empty database at the specified location if one doesn't already exist. If false and a database doesn't exist you will receive an error in your open() callback and your database won't open.\n *\n * errorIfExists (boolean, default: false): If true, you will receive an error in your open() callback if the database exists at the specified location.\n *\n * compression (boolean, default: true): If true, all compressible data will be run through the Snappy compression algorithm before being stored. Snappy is very fast and shouldn't gain much speed by disabling so leave this on unless you have good reason to turn it off.\n *\n * cacheSize (number, default: 8 * 1024 * 1024 = 8MB): The size (in bytes) of the in-memory LRU cache with frequently used uncompressed block contents.\n */\n\nvar Storage = /*#__PURE__*/function () {\n  function Storage(storage) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Storage);\n\n    var defaults = {\n      createIfMissing: true,\n      errorIfExists: false,\n      compression: true,\n      cacheSize: 8 * 1024 * 1024\n    };\n    this.storage = storage;\n    this.preCreate = options.preCreate ? options.preCreate : function () {};\n    var leveldownOptions = Object.assign({}, options, defaults);\n    delete leveldownOptions.preCreate;\n    this.options = {\n      down: leveldownOptions\n    };\n  }\n\n  _createClass(Storage, [{\n    key: \"createStore\",\n    value: function createStore() {\n      var _this = this;\n\n      var directory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : './orbitdb';\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return new Promise( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(resolve, reject) {\n          var store, db, _db;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _this.options.up = options;\n                  _context.next = 3;\n                  return _this.preCreate(directory, _this.options);\n\n                case 3:\n                  if (!_this.storage) {\n                    _context.next = 11;\n                    break;\n                  }\n\n                  db = _this.storage(directory, _this.options.down); // For compatibility with older abstract-leveldown stores\n\n                  if (!db.status) db.status = 'unknown-shim';\n                  if (!db.location) db.location = directory;\n                  store = levelup(db, options);\n                  store.open(function (err) {\n                    if (err) {\n                      return reject(err);\n                    } // More backwards compatibility\n\n\n                    if (db && db.status === 'unknown-shim') db.status = 'open';\n                    resolve(store);\n                  });\n                  _context.next = 16;\n                  break;\n\n                case 11:\n                  // Default leveldown or level-js store with directory creation\n                  if (fs && fs.mkdirSync) fs.mkdirSync(directory, {\n                    recursive: true\n                  });\n                  _db = level(directory, options);\n                  _context.next = 15;\n                  return _db.open();\n\n                case 15:\n                  resolve(_db);\n\n                case 16:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy(store) {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        // TODO: Clean this up\n        if (!_this2.storage.destroy) resolve();\n\n        _this2.storage.destroy(store._db.location, function (err) {\n          if (err) {\n            return reject(err);\n          }\n\n          resolve();\n        });\n      });\n    }\n  }, {\n    key: \"preCreate\",\n    value: function () {\n      var _preCreate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(directory, options) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function preCreate(_x3, _x4) {\n        return _preCreate.apply(this, arguments);\n      }\n\n      return preCreate;\n    }() // to be overridden\n\n  }]);\n\n  return Storage;\n}();\n\nmodule.exports = function (storage, options) {\n  return new Storage(storage, options);\n};","map":null,"metadata":{},"sourceType":"script"}