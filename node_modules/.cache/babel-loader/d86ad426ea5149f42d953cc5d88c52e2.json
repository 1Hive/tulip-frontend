{"ast":null,"code":"var _jsxFileName = \"/Users/fabianmolina/Documents/1hive/tulip-frontend/src/providers/Wallet.js\";\nimport React, { useContext, useMemo } from 'react';\nimport { providers as EthersProviders } from 'ethers';\nimport { UseWalletProvider, useWallet } from 'use-wallet';\nimport { getUseWalletConnectors } from '../lib/web3-utils';\nimport env from '../environment';\nconst WalletAugmentedContext = /*#__PURE__*/React.createContext();\n\nfunction useWalletAugmented() {\n  return useContext(WalletAugmentedContext);\n} // Adds Ethers.js to the useWallet() object\n\n\nfunction WalletAugmented({\n  children\n}) {\n  const wallet = useWallet();\n  const {\n    ethereum\n  } = wallet;\n  const ethers = useMemo(() => ethereum ? new EthersProviders.Web3Provider(ethereum) : null, [ethereum]);\n  const contextValue = useMemo(() => ({ ...wallet,\n    ethers\n  }), [wallet, ethers]);\n  return /*#__PURE__*/React.createElement(WalletAugmentedContext.Provider, {\n    value: contextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nfunction WalletProvider({\n  children\n}) {\n  return /*#__PURE__*/React.createElement(UseWalletProvider, {\n    chainId: env('CHAIN_ID'),\n    connectors: getUseWalletConnectors(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(WalletAugmented, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, children));\n}\n\nexport { useWalletAugmented as useWallet, WalletProvider };","map":{"version":3,"sources":["/Users/fabianmolina/Documents/1hive/tulip-frontend/src/providers/Wallet.js"],"names":["React","useContext","useMemo","providers","EthersProviders","UseWalletProvider","useWallet","getUseWalletConnectors","env","WalletAugmentedContext","createContext","useWalletAugmented","WalletAugmented","children","wallet","ethereum","ethers","Web3Provider","contextValue","WalletProvider"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,OAA5B,QAA2C,OAA3C;AACA,SAASC,SAAS,IAAIC,eAAtB,QAA6C,QAA7C;AACA,SAASC,iBAAT,EAA4BC,SAA5B,QAA6C,YAA7C;AACA,SAASC,sBAAT,QAAuC,mBAAvC;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AAEA,MAAMC,sBAAsB,gBAAGT,KAAK,CAACU,aAAN,EAA/B;;AAEA,SAASC,kBAAT,GAA8B;AAC5B,SAAOV,UAAU,CAACQ,sBAAD,CAAjB;AACD,C,CAED;;;AACA,SAASG,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAAuC;AACrC,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAM;AAAES,IAAAA;AAAF,MAAeD,MAArB;AAEA,QAAME,MAAM,GAAGd,OAAO,CACpB,MAAOa,QAAQ,GAAG,IAAIX,eAAe,CAACa,YAApB,CAAiCF,QAAjC,CAAH,GAAgD,IAD3C,EAEpB,CAACA,QAAD,CAFoB,CAAtB;AAKA,QAAMG,YAAY,GAAGhB,OAAO,CAAC,OAAO,EAAE,GAAGY,MAAL;AAAaE,IAAAA;AAAb,GAAP,CAAD,EAAgC,CAACF,MAAD,EAASE,MAAT,CAAhC,CAA5B;AAEA,sBACE,oBAAC,sBAAD,CAAwB,QAAxB;AAAiC,IAAA,KAAK,EAAEE,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,QADH,CADF;AAKD;;AAED,SAASM,cAAT,CAAwB;AAAEN,EAAAA;AAAF,CAAxB,EAAsC;AACpC,sBACE,oBAAC,iBAAD;AACE,IAAA,OAAO,EAAEL,GAAG,CAAC,UAAD,CADd;AAEE,IAAA,UAAU,EAAED,sBAAsB,EAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBM,QAAlB,CAJF,CADF;AAQD;;AAED,SAASF,kBAAkB,IAAIL,SAA/B,EAA0Ca,cAA1C","sourcesContent":["import React, { useContext, useMemo } from 'react'\r\nimport { providers as EthersProviders } from 'ethers'\r\nimport { UseWalletProvider, useWallet } from 'use-wallet'\r\nimport { getUseWalletConnectors } from '../lib/web3-utils'\r\nimport env from '../environment'\r\n\r\nconst WalletAugmentedContext = React.createContext()\r\n\r\nfunction useWalletAugmented() {\r\n  return useContext(WalletAugmentedContext)\r\n}\r\n\r\n// Adds Ethers.js to the useWallet() object\r\nfunction WalletAugmented({ children }) {\r\n  const wallet = useWallet()\r\n  const { ethereum } = wallet\r\n\r\n  const ethers = useMemo(\r\n    () => (ethereum ? new EthersProviders.Web3Provider(ethereum) : null),\r\n    [ethereum]\r\n  )\r\n\r\n  const contextValue = useMemo(() => ({ ...wallet, ethers }), [wallet, ethers])\r\n\r\n  return (\r\n    <WalletAugmentedContext.Provider value={contextValue}>\r\n      {children}\r\n    </WalletAugmentedContext.Provider>\r\n  )\r\n}\r\n\r\nfunction WalletProvider({ children }) {\r\n  return (\r\n    <UseWalletProvider\r\n      chainId={env('CHAIN_ID')}\r\n      connectors={getUseWalletConnectors()}\r\n    >\r\n      <WalletAugmented>{children}</WalletAugmented>\r\n    </UseWalletProvider>\r\n  )\r\n}\r\n\r\nexport { useWalletAugmented as useWallet, WalletProvider }\r\n"]},"metadata":{},"sourceType":"module"}