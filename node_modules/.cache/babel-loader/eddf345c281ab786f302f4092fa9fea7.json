{"ast":null,"code":"'use strict';\n\nvar CID = require('cids');\n/**\n* Stringify a CID encoded in the requested base, upgrading to v1 if necessary.\n*\n* Setting upgrade to false will disable automatic CID upgrading from v0 to v1\n* which is necessary if the multibase is something other than base58btc. Note\n* that it will also not apply the encoding (since v0 CIDs can only be encoded\n* as base58btc).\n*\n* @param {CID|Buffer|String} cid The CID to encode\n* @param {Object} [options] Optional options\n* @param {String} [options.base] Name of multibase codec to encode the CID with\n* @param {Boolean} [options.upgrade] Automatically upgrade v0 CIDs to v1 when\n* necessary. Default: true.\n* @returns {String}\n*/\n\n\nexports.cidToString = function (cid, options) {\n  options = options || {};\n  options.upgrade = options.upgrade !== false;\n\n  if (!CID.isCID(cid)) {\n    cid = new CID(cid);\n  }\n\n  if (cid.version === 0 && options.base && options.base !== 'base58btc') {\n    if (!options.upgrade) return cid.toString();\n    cid = cid.toV1();\n  }\n\n  return cid.toBaseEncodedString(options.base);\n};","map":null,"metadata":{},"sourceType":"script"}