{"ast":null,"code":"var _jsxFileName = \"/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Lottery/components/TicketCard/TicketActions.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Button, useModal } from '@pancakeswap-libs/uikit';\nimport useI18n from 'hooks/useI18n';\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn';\nimport { useLotteryAllowance } from 'hooks/useAllowance';\nimport useTickets from 'hooks/useTickets';\nimport useTokenBalance from 'hooks/useTokenBalance';\nimport { getCakeAddress } from 'utils/addressHelpers';\nimport { useApproval } from 'hooks/useApproval';\nimport BuyTicketModal from './BuyTicketModal';\nimport MyTicketsModal from './UserTicketsModal';\nimport PurchaseWarningModal from './PurchaseWarningModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${props => props.theme.spacing[3]}px;\n\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    justify-content: space-between;\n  }\n`;\n_c = CardActions;\n\nconst TicketCard = () => {\n  _s();\n\n  const TranslateString = useI18n();\n  const allowance = useLotteryAllowance();\n  const lotteryHasDrawn = useGetLotteryHasDrawn();\n  const cakeBalance = useTokenBalance(getCakeAddress());\n  const tickets = useTickets();\n  const ticketsLength = tickets.length;\n  const [onPresentMyTickets] = useModal( /*#__PURE__*/_jsxDEV(MyTicketsModal, {\n    myTicketNumbers: tickets,\n    from: \"buy\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 41\n  }, this));\n  const [onPresentApprove] = useModal( /*#__PURE__*/_jsxDEV(PurchaseWarningModal, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 39\n  }, this));\n  const [onPresentBuy] = useModal( /*#__PURE__*/_jsxDEV(BuyTicketModal, {\n    max: cakeBalance,\n    tokenName: \"CAKE\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 35\n  }, this));\n  const {\n    handleApprove,\n    requestedApproval\n  } = useApproval(onPresentApprove);\n\n  const renderLotteryTicketButtons = () => {\n    if (!allowance.toNumber()) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          disabled: true,\n          children: TranslateString(432, 'View your tickets')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          disabled: requestedApproval,\n          onClick: handleApprove,\n          children: TranslateString(494, 'Approve CAKE')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginRight: '8px'\n        },\n        fullWidth: true,\n        disabled: ticketsLength === 0,\n        variant: \"secondary\",\n        onClick: onPresentMyTickets,\n        children: TranslateString(432, 'View your tickets')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        id: \"lottery-buy-start\",\n        fullWidth: true,\n        onClick: onPresentBuy,\n        children: TranslateString(430, 'Buy ticket')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CardActions, {\n    children: lotteryHasDrawn ? /*#__PURE__*/_jsxDEV(Button, {\n      disabled: true,\n      children: [\" \", TranslateString(874, 'On sale soon')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : renderLotteryTicketButtons()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TicketCard, \"iQyjykmXYaGeYYb2//XEflUy3Js=\", false, function () {\n  return [useI18n, useLotteryAllowance, useGetLotteryHasDrawn, useTokenBalance, useTickets, useModal, useModal, useModal, useApproval];\n});\n\n_c2 = TicketCard;\nexport default TicketCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CardActions\");\n$RefreshReg$(_c2, \"TicketCard\");","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Lottery/components/TicketCard/TicketActions.tsx"],"names":["React","styled","Button","useModal","useI18n","useGetLotteryHasDrawn","useLotteryAllowance","useTickets","useTokenBalance","getCakeAddress","useApproval","BuyTicketModal","MyTicketsModal","PurchaseWarningModal","CardActions","div","props","theme","spacing","mediaQueries","lg","TicketCard","TranslateString","allowance","lotteryHasDrawn","cakeBalance","tickets","ticketsLength","length","onPresentMyTickets","onPresentApprove","onPresentBuy","handleApprove","requestedApproval","renderLotteryTicketButtons","toNumber","marginRight"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useLotteryAllowance } from 'hooks/useAllowance'\nimport useTickets from 'hooks/useTickets'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { useApproval } from 'hooks/useApproval'\nimport BuyTicketModal from './BuyTicketModal'\nimport MyTicketsModal from './UserTicketsModal'\nimport PurchaseWarningModal from './PurchaseWarningModal'\n\nconst CardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    justify-content: space-between;\n  }\n`\n\nconst TicketCard: React.FC = () => {\n  const TranslateString = useI18n()\n  const allowance = useLotteryAllowance()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} tokenName=\"CAKE\" />)\n  const { handleApprove, requestedApproval } = useApproval(onPresentApprove)\n\n  const renderLotteryTicketButtons = () => {\n    if (!allowance.toNumber()) {\n      return (\n        <>\n          <Button fullWidth disabled>\n            {TranslateString(432, 'View your tickets')}\n          </Button>\n          <Button fullWidth disabled={requestedApproval} onClick={handleApprove}>\n            {TranslateString(494, 'Approve CAKE')}\n          </Button>\n        </>\n      )\n    }\n    return (\n      <>\n        <Button\n          style={{ marginRight: '8px' }}\n          fullWidth\n          disabled={ticketsLength === 0}\n          variant=\"secondary\"\n          onClick={onPresentMyTickets}\n        >\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n        <Button id=\"lottery-buy-start\" fullWidth onClick={onPresentBuy}>\n          {TranslateString(430, 'Buy ticket')}\n        </Button>\n      </>\n    )\n  }\n\n  return (\n    <CardActions>\n      {lotteryHasDrawn ? (\n        <Button disabled> {TranslateString(874, 'On sale soon')}</Button>\n      ) : (\n        renderLotteryTicketButtons()\n      )}\n    </CardActions>\n  )\n}\n\nexport default TicketCard\n"]},"metadata":{},"sourceType":"module"}