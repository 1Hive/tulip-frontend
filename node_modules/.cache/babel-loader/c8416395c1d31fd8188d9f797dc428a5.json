{"ast":null,"code":"'use strict';\n\nconst {\n  isValidMultiaddr\n} = require('./utils');\n\nconst {\n  withTimeoutOption\n} = require('../../utils');\n\nmodule.exports = ({\n  repo\n}) => {\n  return withTimeoutOption(async function rm(multiaddr, options) {\n    options = options || {};\n\n    if (multiaddr && !isValidMultiaddr(multiaddr)) {\n      throw new Error(`${multiaddr} is not a valid Multiaddr`);\n    }\n\n    let res = [];\n    const config = await repo.config.get();\n\n    if (options.all) {\n      res = config.Bootstrap || [];\n      config.Bootstrap = [];\n    } else {\n      config.Bootstrap = (config.Bootstrap || []).filter(ma => ma !== multiaddr);\n    }\n\n    await repo.config.set(config);\n\n    if (!options.all && multiaddr) {\n      res.push(multiaddr);\n    }\n\n    return {\n      Peers: res\n    };\n  });\n};","map":null,"metadata":{},"sourceType":"script"}