{"ast":null,"code":"var _jsxFileName = \"/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport { Button, Heading, Won, useModal } from '@pancakeswap-libs/uikit';\nimport useI18n from 'hooks/useI18n';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery';\nimport useTickets, { useTotalClaim } from 'hooks/useTickets';\nimport Loading from '../Loading';\nimport MyTicketsModal from '../TicketCard/UserTicketsModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WinningsWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`;\n_c = WinningsWrapper;\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`;\n_c2 = IconWrapper;\nconst StyledCardActions = styled.div`\n  margin-top: ${props => props.theme.spacing[3]}px;\n`;\n_c3 = StyledCardActions;\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n_c4 = StyledCardContentInner;\nconst StyledButton = styled(Button)`\n  margin-top: ${props => props.theme.spacing[1]}px;\n`;\n_c5 = StyledButton;\n\nconst PrizesWonContent = () => {\n  _s();\n\n  const [requestedClaim, setRequestedClaim] = useState(false);\n  const TranslateString = useI18n();\n  const {\n    claimLoading,\n    claimAmount\n  } = useTotalClaim();\n  const {\n    onMultiClaim\n  } = useMultiClaimLottery();\n  const tickets = useTickets();\n  const [onPresentMyTickets] = useModal( /*#__PURE__*/_jsxDEV(MyTicketsModal, {\n    myTicketNumbers: tickets,\n    from: \"buy\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 41\n  }, this));\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true);\n      const txHash = await onMultiClaim(); // user rejected tx or didn't go thru\n\n      if (txHash) {\n        setRequestedClaim(false);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }, [onMultiClaim, setRequestedClaim]);\n  const winnings = getBalanceNumber(claimAmount).toFixed(2);\n  return /*#__PURE__*/_jsxDEV(StyledCardContentInner, {\n    children: [/*#__PURE__*/_jsxDEV(IconWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Won, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h3\",\n      size: \"lg\",\n      color: \"secondary\",\n      children: TranslateString(660, 'You won!')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), claimLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 24\n    }, this), !claimLoading && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(WinningsWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h4\",\n          size: \"xl\",\n          style: {\n            marginRight: '6px'\n          },\n          children: winnings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h4\",\n          size: \"lg\",\n          children: \"CAKE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(StyledCardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        disabled: requestedClaim,\n        onClick: handleClaim,\n        children: TranslateString(1056, 'Collect')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n      variant: \"text\",\n      onClick: onPresentMyTickets,\n      children: TranslateString(432, 'View your tickets')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrizesWonContent, \"BZRTBQQxtesWOMVokDd32gonAQU=\", false, function () {\n  return [useI18n, useTotalClaim, useMultiClaimLottery, useTickets, useModal];\n});\n\n_c6 = PrizesWonContent;\nexport default PrizesWonContent;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"WinningsWrapper\");\n$RefreshReg$(_c2, \"IconWrapper\");\n$RefreshReg$(_c3, \"StyledCardActions\");\n$RefreshReg$(_c4, \"StyledCardContentInner\");\n$RefreshReg$(_c5, \"StyledButton\");\n$RefreshReg$(_c6, \"PrizesWonContent\");","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx"],"names":["React","useCallback","useState","styled","Button","Heading","Won","useModal","useI18n","getBalanceNumber","useMultiClaimLottery","useTickets","useTotalClaim","Loading","MyTicketsModal","WinningsWrapper","div","IconWrapper","StyledCardActions","props","theme","spacing","StyledCardContentInner","StyledButton","PrizesWonContent","requestedClaim","setRequestedClaim","TranslateString","claimLoading","claimAmount","onMultiClaim","tickets","onPresentMyTickets","handleClaim","txHash","e","console","error","winnings","toFixed","marginRight"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Won, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\nimport Loading from '../Loading'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst WinningsWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`\n\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst StyledCardActions = styled.div`\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[1]}px;\n`\n\nconst PrizesWonContent: React.FC = () => {\n  const [requestedClaim, setRequestedClaim] = useState(false)\n  const TranslateString = useI18n()\n  const { claimLoading, claimAmount } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedClaim(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiClaim, setRequestedClaim])\n\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\n\n  return (\n    <StyledCardContentInner>\n      <IconWrapper>\n        <Won />\n      </IconWrapper>\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\n        {TranslateString(660, 'You won!')}\n      </Heading>\n      {claimLoading && <Loading />}\n      {!claimLoading && (\n        <>\n          <WinningsWrapper>\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\n              {winnings}\n            </Heading>\n            <Heading as=\"h4\" size=\"lg\">\n              CAKE\n            </Heading>\n          </WinningsWrapper>\n        </>\n      )}\n      <StyledCardActions>\n        <Button fullWidth disabled={requestedClaim} onClick={handleClaim}>\n          {TranslateString(1056, 'Collect')}\n        </Button>\n      </StyledCardActions>\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n        {TranslateString(432, 'View your tickets')}\n      </StyledButton>\n    </StyledCardContentInner>\n  )\n}\n\nexport default PrizesWonContent\n"]},"metadata":{},"sourceType":"module"}