{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar Key = require('interface-datastore').Key;\n\nvar sortKeys = require('sort-keys');\n\nvar specKey = new Key('datastore_spec');\n\nmodule.exports = function (store) {\n  return {\n    /**\n     * Check if a datastore spec file exists.\n     *\n     * @returns {Promise<bool>}\n     */\n    exists: function exists() {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", store.has(specKey));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n\n    /**\n     * Get the current datastore spec.\n     *\n     * @returns {Promise<Buffer>}\n     */\n    get: function get() {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var buf;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return store.get(specKey);\n\n              case 2:\n                buf = _context2.sent;\n                return _context2.abrupt(\"return\", JSON.parse(buf.toString()));\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n\n    /**\n     * Set the datastore spec of the repo, writing it to the underlying store.\n     * TODO unclear on what the type should be or if it's required\n     * @param {number} spec\n     * @returns {Promise<void>}\n     */\n    set: function set(spec) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", store.put(specKey, Buffer.from(JSON.stringify(sortKeys(spec, {\n                  deep: true\n                })))));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script"}