{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar protons = require('protons');\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar pb = protons(require('./record.proto')).Record;\n\nvar utils = require('./utils');\n\nvar Record = /*#__PURE__*/function () {\n  /**\n   * @param {Buffer} [key]\n   * @param {Buffer} [value]\n   * @param {Date} [recvtime]\n   */\n  function Record(key, value, recvtime) {\n    _classCallCheck(this, Record);\n\n    if (key && !Buffer.isBuffer(key)) {\n      throw new Error('key must be a Buffer');\n    }\n\n    if (value && !Buffer.isBuffer(value)) {\n      throw new Error('value must be a buffer');\n    }\n\n    this.key = key;\n    this.value = value;\n    this.timeReceived = recvtime;\n  }\n  /**\n   * @returns {Buffer}\n   */\n\n\n  _createClass(Record, [{\n    key: \"serialize\",\n    value: function serialize() {\n      return pb.encode(this.prepareSerialize());\n    }\n    /**\n     * Return the object format ready to be given to the protobuf library.\n     *\n     * @returns {Object}\n     */\n\n  }, {\n    key: \"prepareSerialize\",\n    value: function prepareSerialize() {\n      return {\n        key: this.key,\n        value: this.value,\n        timeReceived: this.timeReceived && utils.toRFC3339(this.timeReceived)\n      };\n    }\n    /**\n     * Decode a protobuf encoded record.\n     *\n     * @param {Buffer} raw\n     * @returns {Record}\n     */\n\n  }], [{\n    key: \"deserialize\",\n    value: function deserialize(raw) {\n      var dec = pb.decode(raw);\n      return Record.fromDeserialized(dec);\n    }\n    /**\n     * Create a record from the raw object returned from the protobuf library.\n     *\n     * @param {Object} obj\n     * @returns {Record}\n     */\n\n  }, {\n    key: \"fromDeserialized\",\n    value: function fromDeserialized(obj) {\n      var recvtime;\n\n      if (obj.timeReceived) {\n        recvtime = utils.parseRFC3339(obj.timeReceived);\n      }\n\n      var rec = new Record(obj.key, obj.value, recvtime);\n      return rec;\n    }\n  }]);\n\n  return Record;\n}();\n\nmodule.exports = Record;","map":null,"metadata":{},"sourceType":"script"}