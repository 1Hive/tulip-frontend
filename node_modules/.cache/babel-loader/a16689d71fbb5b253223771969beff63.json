{"ast":null,"code":"import _styled8 from \"styled-components\";\nimport _styled7 from \"styled-components\";\nimport _styled6 from \"styled-components\";\nimport _styled5 from \"styled-components\";\nimport _styled4 from \"styled-components\";\nimport _styled3 from \"styled-components\";\nimport _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/fabianmolina/Documents/1hive/tulip-frontend/src/components/Account/ScreenConnecting.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { keyframes } from 'styled-components';\nimport { GU, useTheme, textStyle, Link } from '@1hive/1hive-ui';\nimport { getProviderFromUseWalletId, getProviderString } from '../../ethereum-providers';\nimport loadingRing from \"./assets/loading-ring.svg\";\nconst spin = keyframes([\"from{transform:rotate(0deg);}to{transform:rotate(360deg);}\"]);\n\nvar _StyledSection = _styled(\"section\").withConfig({\n  displayName: \"ScreenConnecting___StyledSection\",\n  componentId: \"sc-1i7tesy-0\"\n})([\"display:flex;flex-direction:column;align-items:center;justify-content:center;padding:\", \"px;height:100%;\"], p => p._css);\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"ScreenConnecting___StyledDiv\",\n  componentId: \"sc-1i7tesy-1\"\n})([\"flex-grow:1;display:flex;flex-direction:column;align-items:center;justify-content:center;text-align:center;\"]);\n\nvar _StyledDiv2 = _styled(\"div\").withConfig({\n  displayName: \"ScreenConnecting___StyledDiv2\",\n  componentId: \"sc-1i7tesy-2\"\n})([\"position:relative;width:\", \"px;height:\", \"px;\"], p => p._css2, p => p._css3);\n\nvar _StyledDiv3 = _styled(\"div\").withConfig({\n  displayName: \"ScreenConnecting___StyledDiv3\",\n  componentId: \"sc-1i7tesy-3\"\n})([\"position:absolute;top:0;left:0;right:0;bottom:0;background:url(\", \") no-repeat 0 0;animation-duration:1s;animation-iteration-count:infinite;animation-timing-function:linear;animation-name:\", \";backface-visibility:hidden;\"], loadingRing, spin);\n\nvar _StyledDiv4 = _styled(\"div\").withConfig({\n  displayName: \"ScreenConnecting___StyledDiv4\",\n  componentId: \"sc-1i7tesy-4\"\n})([\"position:absolute;top:0;left:0;right:0;bottom:0;background:50% 50% / auto \", \"px no-repeat url(\", \");\"], p => p._css4, p => p._css5);\n\nvar _StyledH = _styled(\"h1\").withConfig({\n  displayName: \"ScreenConnecting___StyledH\",\n  componentId: \"sc-1i7tesy-5\"\n})([\"padding-top:\", \"px;\", \";font-weight:600;\"], p => p._css6, p => p._css7);\n\nvar _StyledP = _styled(\"p\").withConfig({\n  displayName: \"ScreenConnecting___StyledP\",\n  componentId: \"sc-1i7tesy-6\"\n})([\"width:\", \"px;color:\", \";\"], p => p._css8, p => p._css9);\n\nvar _StyledDiv5 = _styled(\"div\").withConfig({\n  displayName: \"ScreenConnecting___StyledDiv5\",\n  componentId: \"sc-1i7tesy-7\"\n})([\"flex-grow:0;\"]);\n\nfunction AccountModuleConnectingScreen({\n  onCancel,\n  providerId\n}) {\n  const theme = useTheme();\n  const provider = getProviderFromUseWalletId(providerId);\n  return /*#__PURE__*/React.createElement(_StyledSection, {\n    _css: 2 * GU,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_StyledDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_StyledDiv2, {\n    _css2: 10.5 * GU,\n    _css3: 10.5 * GU,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_StyledDiv3, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(_StyledDiv4, {\n    _css4: 5 * GU,\n    _css5: provider.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(_StyledH, {\n    _css6: 2 * GU,\n    _css7: textStyle('body1'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Connecting to \", provider.name), /*#__PURE__*/React.createElement(_StyledP, {\n    _css8: 36 * GU,\n    _css9: theme.surfaceContentSecondary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Log into \", getProviderString('your Ethereum wallet', provider.id), \". You may be temporarily redirected to a new screen.\")), /*#__PURE__*/React.createElement(_StyledDiv5, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"Cancel\")));\n}\n\nAccountModuleConnectingScreen.propTypes = {\n  providerId: PropTypes.string,\n  onCancel: PropTypes.func.isRequired\n};\nexport default AccountModuleConnectingScreen;","map":{"version":3,"sources":["/Users/fabianmolina/Documents/1hive/tulip-frontend/src/components/Account/ScreenConnecting.js"],"names":["React","PropTypes","keyframes","GU","useTheme","textStyle","Link","getProviderFromUseWalletId","getProviderString","spin","loadingRing","AccountModuleConnectingScreen","onCancel","providerId","theme","provider","image","name","surfaceContentSecondary","id","propTypes","string","func","isRequired"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,EAAT,EAAaC,QAAb,EAAuBC,SAAvB,EAAkCC,IAAlC,QAA8C,iBAA9C;AACA,SACEC,0BADF,EAEEC,iBAFF,QAGO,0BAHP;;AAOA,MAAMC,IAAI,GAAGP,SAAH,gEAAV;;;;;;;;;;;;;;;;;;;;qOA+CgCQ,W,EAIAD,I;;;;;;;;;;;;;;;;;;;;;;AA1ChC,SAASE,6BAAT,CAAuC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAvC,EAAiE;AAC/D,QAAMC,KAAK,GAAGV,QAAQ,EAAtB;AACA,QAAMW,QAAQ,GAAGR,0BAA0B,CAACM,UAAD,CAA3C;AACA,sBACE;AAAA,UAMe,IAAIV,EANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE;AAAA,WAGa,OAAOA,EAHpB;AAAA,WAIc,OAAOA,EAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAuBE;AAAA,WAOiC,IAAIA,EAPrC;AAAA,WAQYY,QAAQ,CAACC,KARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,CAVF,eA6CE;AAAA,WAEmB,IAAIb,EAFvB;AAAA,WAGME,SAAS,CAAC,OAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAOiBU,QAAQ,CAACE,IAP1B,CA7CF,eAsDE;AAAA,WAEa,KAAKd,EAFlB;AAAA,WAGaW,KAAK,CAACI,uBAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMYV,iBAAiB,CAAC,sBAAD,EAAyBO,QAAQ,CAACI,EAAlC,CAN7B,yDAtDF,CAVF,eA0EE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAEP,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CA1EF,CADF;AAoFD;;AAEDD,6BAA6B,CAACS,SAA9B,GAA0C;AACxCP,EAAAA,UAAU,EAAEZ,SAAS,CAACoB,MADkB;AAExCT,EAAAA,QAAQ,EAAEX,SAAS,CAACqB,IAAV,CAAeC;AAFe,CAA1C;AAKA,eAAeZ,6BAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { keyframes } from 'styled-components'\nimport { GU, useTheme, textStyle, Link } from '@1hive/1hive-ui'\nimport {\n  getProviderFromUseWalletId,\n  getProviderString,\n} from '../../ethereum-providers'\n\nimport loadingRing from './assets/loading-ring.svg'\n\nconst spin = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nfunction AccountModuleConnectingScreen({ onCancel, providerId }) {\n  const theme = useTheme()\n  const provider = getProviderFromUseWalletId(providerId)\n  return (\n    <section\n      css={`\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        padding: ${2 * GU}px;\n        height: 100%;\n      `}\n    >\n      <div\n        css={`\n          flex-grow: 1;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          justify-content: center;\n          text-align: center;\n        `}\n      >\n        <div\n          css={`\n            position: relative;\n            width: ${10.5 * GU}px;\n            height: ${10.5 * GU}px;\n          `}\n        >\n          <div\n            css={`\n              position: absolute;\n              top: 0;\n              left: 0;\n              right: 0;\n              bottom: 0;\n              background: url(${loadingRing}) no-repeat 0 0;\n              animation-duration: 1s;\n              animation-iteration-count: infinite;\n              animation-timing-function: linear;\n              animation-name: ${spin};\n              // prevents flickering on Firefox\n              backface-visibility: hidden;\n            `}\n          />\n          <div\n            css={`\n              position: absolute;\n              top: 0;\n              left: 0;\n              right: 0;\n              bottom: 0;\n              background: 50% 50% / auto ${5 * GU}px no-repeat\n                url(${provider.image});\n            `}\n          />\n        </div>\n        <h1\n          css={`\n            padding-top: ${2 * GU}px;\n            ${textStyle('body1')};\n            font-weight: 600;\n          `}\n        >\n          Connecting to {provider.name}\n        </h1>\n        <p\n          css={`\n            width: ${36 * GU}px;\n            color: ${theme.surfaceContentSecondary};\n          `}\n        >\n          Log into {getProviderString('your Ethereum wallet', provider.id)}. You\n          may be temporarily redirected to a new screen.\n        </p>\n      </div>\n      <div\n        css={`\n          flex-grow: 0;\n        `}\n      >\n        <Link onClick={onCancel}>Cancel</Link>\n      </div>\n    </section>\n  )\n}\n\nAccountModuleConnectingScreen.propTypes = {\n  providerId: PropTypes.string,\n  onCancel: PropTypes.func.isRequired,\n}\n\nexport default AccountModuleConnectingScreen\n"]},"metadata":{},"sourceType":"module"}