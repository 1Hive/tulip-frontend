{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$(),\n    _s9 = $RefreshSig$(),\n    _s10 = $RefreshSig$(),\n    _s11 = $RefreshSig$(),\n    _s12 = $RefreshSig$(),\n    _s13 = $RefreshSig$(),\n    _s14 = $RefreshSig$(),\n    _s15 = $RefreshSig$(),\n    _s16 = $RefreshSig$(),\n    _s17 = $RefreshSig$(),\n    _s18 = $RefreshSig$();\n\nimport { useEffect, useMemo } from 'react';\nimport BigNumber from 'bignumber.js';\nimport { kebabCase } from 'lodash';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport { toastTypes } from '@pancakeswap-libs/uikit';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useRefresh from 'hooks/useRefresh';\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync, push as pushToast, remove as removeToast, clear as clearToast } from './actions';\nimport { fetchProfile } from './profile';\nimport { fetchTeam, fetchTeams } from './teams';\nimport { fetchAchievements } from './achievements';\nconst ZERO = new BigNumber(0);\nexport const useFetchPublicData = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    slowRefresh\n  } = useRefresh();\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync());\n    dispatch(fetchPoolsPublicDataAsync());\n  }, [dispatch, slowRefresh]);\n}; // Farms\n\n_s(useFetchPublicData, \"62xjdgPJn/QiIg6iwBNbkeZ7l4I=\", false, function () {\n  return [useDispatch, useRefresh];\n});\n\nexport const useFarms = () => {\n  _s2();\n\n  const farms = useSelector(state => state.farms.data);\n  return farms;\n};\n\n_s2(useFarms, \"40tjDYBLbzKzCIdd0cwm+UIfe9E=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFarmFromPid = pid => {\n  _s3();\n\n  const farm = useSelector(state => state.farms.data.find(f => f.pid === pid));\n  return farm;\n};\n\n_s3(useFarmFromPid, \"TOdL9+Oz8AEj+wmjEA7Olv/caxU=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFarmFromSymbol = lpSymbol => {\n  _s4();\n\n  const farm = useSelector(state => state.farms.data.find(f => f.lpSymbol === lpSymbol));\n  return farm;\n};\n\n_s4(useFarmFromSymbol, \"TOdL9+Oz8AEj+wmjEA7Olv/caxU=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFarmUser = pid => {\n  _s5();\n\n  const farm = useFarmFromPid(pid);\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0)\n  };\n}; // Pools\n\n_s5(useFarmUser, \"kxbBDHm0i5EJweIp+RPzOgw8PRU=\", false, function () {\n  return [useFarmFromPid];\n});\n\nexport const usePools = account => {\n  _s6();\n\n  const {\n    fastRefresh\n  } = useRefresh();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account));\n    }\n  }, [account, dispatch, fastRefresh]);\n  const pools = useSelector(state => state.pools.data);\n  return pools;\n};\n\n_s6(usePools, \"WIyMD4ufrhPkRVRaHSFmHSaimvo=\", false, function () {\n  return [useRefresh, useDispatch, useSelector];\n});\n\nexport const usePoolFromPid = sousId => {\n  _s7();\n\n  const pool = useSelector(state => state.pools.data.find(p => p.sousId === sousId));\n  return pool;\n}; // Prices\n\n_s7(usePoolFromPid, \"NElEvYvoNsaNFrfsmEnHfa4jRII=\", false, function () {\n  return [useSelector];\n});\n\nexport const usePriceBnbBusd = () => {\n  _s8();\n\n  const pid = 2; // BUSD-BNB LP\n\n  const farm = useFarmFromPid(pid);\n  return farm.tokenPriceVsQuote ? new BigNumber(1).div(farm.tokenPriceVsQuote) : ZERO;\n};\n\n_s8(usePriceBnbBusd, \"kxbBDHm0i5EJweIp+RPzOgw8PRU=\", false, function () {\n  return [useFarmFromPid];\n});\n\nexport const usePriceCakeBusd = () => {\n  _s9();\n\n  const pid = 1; // CAKE-BNB LP\n\n  const bnbPriceUSD = usePriceBnbBusd();\n  const farm = useFarmFromPid(pid);\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO;\n};\n\n_s9(usePriceCakeBusd, \"XFAtU4CCq8QZhqqSng08R0qLgoc=\", false, function () {\n  return [usePriceBnbBusd, useFarmFromPid];\n});\n\nexport const usePriceEthBusd = () => {\n  _s10();\n\n  const pid = 14; // ETH-BNB LP\n\n  const bnbPriceUSD = usePriceBnbBusd();\n  const farm = useFarmFromPid(pid);\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO;\n};\n\n_s10(usePriceEthBusd, \"XFAtU4CCq8QZhqqSng08R0qLgoc=\", false, function () {\n  return [usePriceBnbBusd, useFarmFromPid];\n});\n\nexport const usePriceEthBnb = () => {\n  _s11();\n\n  const priceBnbBusd = usePriceBnbBusd();\n  const priceEthBusd = usePriceEthBusd();\n  return priceEthBusd.div(priceBnbBusd);\n}; // Toasts\n\n_s11(usePriceEthBnb, \"ENQ56QUQJdnjOyZgdYOsS2rHgvA=\", false, function () {\n  return [usePriceBnbBusd, usePriceEthBusd];\n});\n\nexport const useToast = () => {\n  _s12();\n\n  const dispatch = useDispatch();\n  const helpers = useMemo(() => {\n    const push = toast => dispatch(pushToast(toast));\n\n    return {\n      toastError: (title, description) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.DANGER,\n          title,\n          description\n        });\n      },\n      toastInfo: (title, description) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.INFO,\n          title,\n          description\n        });\n      },\n      toastSuccess: (title, description) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.SUCCESS,\n          title,\n          description\n        });\n      },\n      toastWarning: (title, description) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.WARNING,\n          title,\n          description\n        });\n      },\n      push,\n      remove: id => dispatch(removeToast(id)),\n      clear: () => dispatch(clearToast())\n    };\n  }, [dispatch]);\n  return helpers;\n}; // Profile\n\n_s12(useToast, \"sUDVWQm6KuNx8WS5X7Vf7K7gwmw=\", false, function () {\n  return [useDispatch];\n});\n\nexport const useFetchProfile = () => {\n  _s13();\n\n  const {\n    account\n  } = useWallet();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchProfile(account));\n  }, [account, dispatch]);\n};\n\n_s13(useFetchProfile, \"KJDrZXnMFQz2bbu5/SlMGMWu3Vk=\", false, function () {\n  return [useWallet, useDispatch];\n});\n\nexport const useProfile = () => {\n  _s14();\n\n  const {\n    isInitialized,\n    isLoading,\n    data,\n    hasRegistered\n  } = useSelector(state => state.profile);\n  return {\n    profile: data,\n    hasProfile: isInitialized && hasRegistered,\n    isInitialized,\n    isLoading\n  };\n}; // Teams\n\n_s14(useProfile, \"IKFRbj5HxYVQqavhAzR0F+CGiS4=\", false, function () {\n  return [useSelector];\n});\n\nexport const useTeam = id => {\n  _s15();\n\n  const team = useSelector(state => state.teams.data[id]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchTeam(id));\n  }, [id, dispatch]);\n  return team;\n};\n\n_s15(useTeam, \"6Ydgnb/W+c1o8rmdL98MENaH9iY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\nexport const useTeams = () => {\n  _s16();\n\n  const {\n    isInitialized,\n    isLoading,\n    data\n  } = useSelector(state => state.teams);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchTeams());\n  }, [dispatch]);\n  return {\n    teams: data,\n    isInitialized,\n    isLoading\n  };\n}; // Achievements\n\n_s16(useTeams, \"vMuTF9KT93zJ/SDKYNNM9rZzenw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\nexport const useFetchAchievements = () => {\n  _s17();\n\n  const {\n    account\n  } = useWallet();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account));\n    }\n  }, [account, dispatch]);\n};\n\n_s17(useFetchAchievements, \"KJDrZXnMFQz2bbu5/SlMGMWu3Vk=\", false, function () {\n  return [useWallet, useDispatch];\n});\n\nexport const useAchievements = () => {\n  _s18();\n\n  const achievements = useSelector(state => state.achievements.data);\n  return achievements;\n};\n\n_s18(useAchievements, \"YSK51t5rwnyiHZ93Q8BnGfHM9jA=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/state/hooks.ts"],"names":["useEffect","useMemo","BigNumber","kebabCase","useWallet","toastTypes","useSelector","useDispatch","useRefresh","fetchFarmsPublicDataAsync","fetchPoolsPublicDataAsync","fetchPoolsUserDataAsync","push","pushToast","remove","removeToast","clear","clearToast","fetchProfile","fetchTeam","fetchTeams","fetchAchievements","ZERO","useFetchPublicData","dispatch","slowRefresh","useFarms","farms","state","data","useFarmFromPid","pid","farm","find","f","useFarmFromSymbol","lpSymbol","useFarmUser","allowance","userData","tokenBalance","stakedBalance","earnings","usePools","account","fastRefresh","pools","usePoolFromPid","sousId","pool","p","usePriceBnbBusd","tokenPriceVsQuote","div","usePriceCakeBusd","bnbPriceUSD","times","usePriceEthBusd","usePriceEthBnb","priceBnbBusd","priceEthBusd","useToast","helpers","toast","toastError","title","description","id","type","DANGER","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","useFetchProfile","useProfile","isInitialized","isLoading","hasRegistered","profile","hasProfile","useTeam","team","teams","useTeams","useFetchAchievements","useAchievements","achievements"],"mappings":"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","sourcesContent":["import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { kebabCase } from 'lodash'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Toast, toastTypes } from '@pancakeswap-libs/uikit'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Team } from 'config/constants/types'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchFarmsPublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  push as pushToast,\n  remove as removeToast,\n  clear as clearToast,\n} from './actions'\nimport { State, Farm, Pool, ProfileState, TeamsState, AchievementState } from './types'\nimport { fetchProfile } from './profile'\nimport { fetchTeam, fetchTeams } from './teams'\nimport { fetchAchievements } from './achievements'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 2 // BUSD-BNB LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(1).div(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const pid = 1 // CAKE-BNB LP\n  const bnbPriceUSD = usePriceBnbBusd()\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceEthBusd = (): BigNumber => {\n  const pid = 14 // ETH-BNB LP\n  const bnbPriceUSD = usePriceBnbBusd()\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceEthBnb = (): BigNumber => {\n  const priceBnbBusd = usePriceBnbBusd()\n  const priceEthBusd = usePriceEthBusd()\n  return priceEthBusd.div(priceBnbBusd)\n}\n\n// Toasts\nexport const useToast = () => {\n  const dispatch = useDispatch()\n  const helpers = useMemo(() => {\n    const push = (toast: Toast) => dispatch(pushToast(toast))\n\n    return {\n      toastError: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.DANGER, title, description })\n      },\n      toastInfo: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.INFO, title, description })\n      },\n      toastSuccess: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.SUCCESS, title, description })\n      },\n      toastWarning: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.WARNING, title, description })\n      },\n      push,\n      remove: (id: string) => dispatch(removeToast(id)),\n      clear: () => dispatch(clearToast()),\n    }\n  }, [dispatch])\n\n  return helpers\n}\n\n// Profile\n\nexport const useFetchProfile = () => {\n  const { account } = useWallet()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\n// Teams\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n\n// Achievements\n\nexport const useFetchAchievements = () => {\n  const { account } = useWallet()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n"]},"metadata":{},"sourceType":"module"}