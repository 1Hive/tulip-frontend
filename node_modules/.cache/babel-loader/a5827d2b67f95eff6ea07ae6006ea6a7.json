{"ast":null,"code":"var _jsxFileName = \"/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Skeleton, Text } from '@pancakeswap-libs/uikit';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport { useDispatch } from 'react-redux';\nimport nftList from 'config/constants/nfts';\nimport { useProfile, useToast } from 'state/hooks';\nimport useI18n from 'hooks/useI18n';\nimport { fetchProfile } from 'state/profile';\nimport useGetWalletNfts from 'hooks/useGetWalletNfts';\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction';\nimport { usePancakeRabbits, useProfile as useProfileContract } from 'hooks/useContract';\nimport { getPancakeProfileAddress, getPancakeRabbitsAddress } from 'utils/addressHelpers';\nimport SelectionCard from '../SelectionCard';\nimport ApproveConfirmButtons from '../ApproveConfirmButtons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChangeProfilePicPage = ({\n  onDismiss\n}) => {\n  _s();\n\n  const [tokenId, setTokenId] = useState(null);\n  const TranslateString = useI18n();\n  const {\n    isLoading,\n    nfts: nftsInWallet\n  } = useGetWalletNfts();\n  const dispatch = useDispatch();\n  const {\n    profile\n  } = useProfile();\n  const pancakeRabbitsContract = usePancakeRabbits();\n  const profileContract = useProfileContract();\n  const {\n    account\n  } = useWallet();\n  const {\n    toastSuccess\n  } = useToast();\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm\n  } = useApproveConfirmTransaction({\n    onApprove: () => {\n      return pancakeRabbitsContract.methods.approve(getPancakeProfileAddress(), tokenId).send({\n        from: account\n      });\n    },\n    onConfirm: () => {\n      if (!profile.isActive) {\n        return profileContract.methods.reactivateProfile(getPancakeRabbitsAddress(), tokenId).send({\n          from: account\n        });\n      }\n\n      return profileContract.methods.updateProfile(getPancakeRabbitsAddress(), tokenId).send({\n        from: account\n      });\n    },\n    onSuccess: async () => {\n      // Re-fetch profile\n      await dispatch(fetchProfile(account));\n      toastSuccess('Profile Updated!');\n      onDismiss();\n    }\n  });\n  const bunnyIds = Object.keys(nftsInWallet).map(nftWalletItem => Number(nftWalletItem));\n  const walletNfts = nftList.filter(nft => bunnyIds.includes(nft.bunnyId));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      as: \"p\",\n      color: \"textSubtle\",\n      mb: \"24px\",\n      children: TranslateString(999, 'Choose a new Collectible to use as your profile pic.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n      height: \"80px\",\n      mb: \"16px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : walletNfts.map(walletNft => {\n      const [firstTokenId] = nftsInWallet[walletNft.bunnyId].tokenIds;\n      return /*#__PURE__*/_jsxDEV(SelectionCard, {\n        name: \"profilePicture\",\n        value: firstTokenId,\n        image: `/images/nfts/${walletNft.images.md}`,\n        isChecked: firstTokenId === tokenId,\n        onChange: value => setTokenId(parseInt(value, 10)),\n        disabled: isApproving || isConfirming || isConfirmed,\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          children: walletNft.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)\n      }, walletNft.bunnyId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this);\n    }), !isLoading && walletNfts.length === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        as: \"p\",\n        color: \"textSubtle\",\n        mb: \"16px\",\n        children: TranslateString(999, 'Sorry! You donâ€™t have any eligible Collectibles in your wallet to use!')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        as: \"p\",\n        color: \"textSubtle\",\n        mb: \"24px\",\n        children: TranslateString(999, 'Make sure you have a Pancake Collectible in your wallet and try again!')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ApproveConfirmButtons, {\n      isApproveDisabled: isConfirmed || isConfirming || isApproved || tokenId === null,\n      isApproving: isApproving,\n      isConfirmDisabled: !isApproved || isConfirmed || tokenId === null,\n      isConfirming: isConfirming,\n      onApprove: handleApprove,\n      onConfirm: handleConfirm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"text\",\n      fullWidth: true,\n      onClick: onDismiss,\n      disabled: isApproving || isConfirming,\n      children: TranslateString(999, 'Close Window')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChangeProfilePicPage, \"kQn7XPEYhhaO+dxhTerie+M1u/I=\", false, function () {\n  return [useI18n, useGetWalletNfts, useDispatch, useProfile, usePancakeRabbits, useProfileContract, useWallet, useToast, useApproveConfirmTransaction];\n});\n\n_c = ChangeProfilePicPage;\nexport default ChangeProfilePicPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeProfilePicPage\");","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx"],"names":["React","useState","Button","Skeleton","Text","useWallet","useDispatch","nftList","useProfile","useToast","useI18n","fetchProfile","useGetWalletNfts","useApproveConfirmTransaction","usePancakeRabbits","useProfileContract","getPancakeProfileAddress","getPancakeRabbitsAddress","SelectionCard","ApproveConfirmButtons","ChangeProfilePicPage","onDismiss","tokenId","setTokenId","TranslateString","isLoading","nfts","nftsInWallet","dispatch","profile","pancakeRabbitsContract","profileContract","account","toastSuccess","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","onApprove","methods","approve","send","from","onConfirm","isActive","reactivateProfile","updateProfile","onSuccess","bunnyIds","Object","keys","map","nftWalletItem","Number","walletNfts","filter","nft","includes","bunnyId","walletNft","firstTokenId","tokenIds","images","md","value","parseInt","name","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Button, InjectedModalProps, Skeleton, Text } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport nftList from 'config/constants/nfts'\nimport { useProfile, useToast } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { fetchProfile } from 'state/profile'\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { usePancakeRabbits, useProfile as useProfileContract } from 'hooks/useContract'\nimport { getPancakeProfileAddress, getPancakeRabbitsAddress } from 'utils/addressHelpers'\nimport SelectionCard from '../SelectionCard'\nimport ApproveConfirmButtons from '../ApproveConfirmButtons'\n\ntype ChangeProfilePicPageProps = InjectedModalProps\n\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\n  const [tokenId, setTokenId] = useState(null)\n  const TranslateString = useI18n()\n  const { isLoading, nfts: nftsInWallet } = useGetWalletNfts()\n  const dispatch = useDispatch()\n  const { profile } = useProfile()\n  const pancakeRabbitsContract = usePancakeRabbits()\n  const profileContract = useProfileContract()\n  const { account } = useWallet()\n  const { toastSuccess } = useToast()\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onApprove: () => {\n      return pancakeRabbitsContract.methods.approve(getPancakeProfileAddress(), tokenId).send({ from: account })\n    },\n    onConfirm: () => {\n      if (!profile.isActive) {\n        return profileContract.methods.reactivateProfile(getPancakeRabbitsAddress(), tokenId).send({ from: account })\n      }\n\n      return profileContract.methods.updateProfile(getPancakeRabbitsAddress(), tokenId).send({ from: account })\n    },\n    onSuccess: async () => {\n      // Re-fetch profile\n      await dispatch(fetchProfile(account))\n      toastSuccess('Profile Updated!')\n\n      onDismiss()\n    },\n  })\n  const bunnyIds = Object.keys(nftsInWallet).map((nftWalletItem) => Number(nftWalletItem))\n  const walletNfts = nftList.filter((nft) => bunnyIds.includes(nft.bunnyId))\n\n  return (\n    <>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(999, 'Choose a new Collectible to use as your profile pic.')}\n      </Text>\n      {isLoading ? (\n        <Skeleton height=\"80px\" mb=\"16px\" />\n      ) : (\n        walletNfts.map((walletNft) => {\n          const [firstTokenId] = nftsInWallet[walletNft.bunnyId].tokenIds\n\n          return (\n            <SelectionCard\n              name=\"profilePicture\"\n              key={walletNft.bunnyId}\n              value={firstTokenId}\n              image={`/images/nfts/${walletNft.images.md}`}\n              isChecked={firstTokenId === tokenId}\n              onChange={(value: string) => setTokenId(parseInt(value, 10))}\n              disabled={isApproving || isConfirming || isConfirmed}\n            >\n              <Text bold>{walletNft.name}</Text>\n            </SelectionCard>\n          )\n        })\n      )}\n      {!isLoading && walletNfts.length === 0 && (\n        <>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {TranslateString(999, 'Sorry! You donâ€™t have any eligible Collectibles in your wallet to use!')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(999, 'Make sure you have a Pancake Collectible in your wallet and try again!')}\n          </Text>\n        </>\n      )}\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || tokenId === null}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed || tokenId === null}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n      <Button variant=\"text\" fullWidth onClick={onDismiss} disabled={isApproving || isConfirming}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default ChangeProfilePicPage\n"]},"metadata":{},"sourceType":"module"}