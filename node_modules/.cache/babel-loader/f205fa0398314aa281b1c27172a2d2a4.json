{"ast":null,"code":"import _regeneratorRuntime from\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import{getProfileForAccount}from'../lib/profile';var addressCache=new Map();export default function useProfileName(account){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),profileName=_useState2[0],setProfileName=_useState2[1];useEffect(function(){var cancelled=false;function fetchProfile(){return _fetchProfile.apply(this,arguments);}function _fetchProfile(){_fetchProfile=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var profile;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!addressCache.get(account)){_context.next=3;break;}setProfileName(addressCache.get(account));return _context.abrupt(\"return\");case 3:_context.next=5;return getProfileForAccount(account);case 5:profile=_context.sent;if(profile&&!cancelled){setProfileName(profile.name);addressCache.set(account,profile.name);}case 7:case\"end\":return _context.stop();}}},_callee);}));return _fetchProfile.apply(this,arguments);}fetchProfile();return function(){cancelled=true;};},[account]);return profileName;}","map":{"version":3,"sources":["/Users/fabianmolina/Documents/1hive/tulip-frontend/src/hooks/useProfileName.js"],"names":["useEffect","useState","getProfileForAccount","addressCache","Map","useProfileName","account","profileName","setProfileName","cancelled","fetchProfile","get","profile","name","set"],"mappings":"wfAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,oBAAT,KAAqC,gBAArC,CAEA,GAAMC,CAAAA,YAAY,CAAG,GAAIC,CAAAA,GAAJ,EAArB,CAEA,cAAe,SAASC,CAAAA,cAAT,CAAwBC,OAAxB,CAAiC,eACRL,QAAQ,CAAC,IAAD,CADA,wCACvCM,WADuC,eAC1BC,cAD0B,eAG9CR,SAAS,CAAC,UAAM,CACd,GAAIS,CAAAA,SAAS,CAAG,KAAhB,CADc,QAECC,CAAAA,YAFD,8IAEd,mJACMP,YAAY,CAACQ,GAAb,CAAiBL,OAAjB,CADN,yBAEIE,cAAc,CAACL,YAAY,CAACQ,GAAb,CAAiBL,OAAjB,CAAD,CAAd,CAFJ,8DAKwBJ,CAAAA,oBAAoB,CAACI,OAAD,CAL5C,QAKQM,OALR,eAME,GAAIA,OAAO,EAAI,CAACH,SAAhB,CAA2B,CACzBD,cAAc,CAACI,OAAO,CAACC,IAAT,CAAd,CACAV,YAAY,CAACW,GAAb,CAAiBR,OAAjB,CAA0BM,OAAO,CAACC,IAAlC,EACD,CATH,sDAFc,+CAcdH,YAAY,GACZ,MAAO,WAAM,CACXD,SAAS,CAAG,IAAZ,CACD,CAFD,CAGD,CAlBQ,CAkBN,CAACH,OAAD,CAlBM,CAAT,CAoBA,MAAOC,CAAAA,WAAP,CACD","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { getProfileForAccount } from '../lib/profile'\r\n\r\nconst addressCache = new Map()\r\n\r\nexport default function useProfileName(account) {\r\n  const [profileName, setProfileName] = useState(null)\r\n\r\n  useEffect(() => {\r\n    let cancelled = false\r\n    async function fetchProfile() {\r\n      if (addressCache.get(account)) {\r\n        setProfileName(addressCache.get(account))\r\n        return\r\n      }\r\n      const profile = await getProfileForAccount(account)\r\n      if (profile && !cancelled) {\r\n        setProfileName(profile.name)\r\n        addressCache.set(account, profile.name)\r\n      }\r\n    }\r\n\r\n    fetchProfile()\r\n    return () => {\r\n      cancelled = true\r\n    }\r\n  }, [account])\r\n\r\n  return profileName\r\n}\r\n"]},"metadata":{},"sourceType":"module"}