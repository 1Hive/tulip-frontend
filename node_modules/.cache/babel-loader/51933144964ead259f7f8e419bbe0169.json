{"ast":null,"code":"'use strict';\n\nconst WS = require('libp2p-websockets');\n\nconst WebRTCStar = require('libp2p-webrtc-star');\n\nconst Multiplex = require('libp2p-mplex');\n\nconst {\n  NOISE\n} = require('libp2p-noise');\n\nconst SECIO = require('libp2p-secio');\n\nconst KadDHT = require('libp2p-kad-dht');\n\nconst GossipSub = require('libp2p-gossipsub');\n\nconst ipnsUtils = require('../ipns/routing/utils');\n\nmodule.exports = () => {\n  return {\n    dialer: {\n      maxParallelDials: 150,\n      // 150 total parallel multiaddr dials\n      maxDialsPerPeer: 4,\n      // Allow 4 multiaddrs to be dialed per peer in parallel\n      dialTimeout: 10e3 // 10 second dial timeout per peer dial\n\n    },\n    modules: {\n      transport: [WS, WebRTCStar],\n      streamMuxer: [Multiplex],\n      connEncryption: [SECIO, NOISE],\n      peerDiscovery: [],\n      dht: KadDHT,\n      pubsub: GossipSub\n    },\n    config: {\n      peerDiscovery: {\n        autoDial: true,\n        bootstrap: {\n          enabled: true\n        },\n        webRTCStar: {\n          enabled: true\n        },\n        websocketStar: {\n          enabled: true\n        }\n      },\n      dht: {\n        kBucketSize: 20,\n        enabled: false,\n        randomWalk: {\n          enabled: false\n        },\n        validators: {\n          ipns: ipnsUtils.validator\n        },\n        selectors: {\n          ipns: ipnsUtils.selector\n        }\n      },\n      pubsub: {\n        enabled: true,\n        emitSelf: true\n      }\n    },\n    metrics: {\n      enabled: true\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script"}