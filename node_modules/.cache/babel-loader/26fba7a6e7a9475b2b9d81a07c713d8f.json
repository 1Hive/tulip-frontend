{"ast":null,"code":"import { _ as _slicedToArray } from './slicedToArray-ad07b557.js';\nimport './unsupportedIterableToArray-aef68344.js';\nimport React, { useCallback } from 'react';\nimport './_commonjsHelpers-97e6d7b1.js';\nimport { P as PropTypes } from './index-097535f1.js';\nimport { _ as _defineProperty } from './defineProperty-a0480c32.js';\nimport './toConsumableArray-07f01111.js';\nimport _styled from 'styled-components';\nimport './getPrototypeOf-97db713a.js';\nimport './color.js';\nimport './components.js';\nimport './contains-component.js';\nimport { unselectable } from './css.js';\nimport './dayjs.min-e57fb69a.js';\nimport './date.js';\nimport './miscellaneous.js';\nimport { warnOnce } from './environment.js';\nimport './font.js';\nimport './math-e6d0e93a.js';\nimport './characters.js';\nimport './format.js';\nimport { KEY_ENTER } from './keycodes.js';\nimport './url.js';\nimport './web3.js';\nimport { MEDIUM_RADIUS } from './constants.js';\nimport './breakpoints.js';\nimport './springs.js';\nimport { textStyle } from './text-styles.js';\nimport './theme-dark.js';\nimport './theme-light.js';\nimport { useTheme } from './Theme.js';\nimport { _ as _extends } from './extends-db4f0c26.js';\nimport { _ as _objectWithoutProperties } from './objectWithoutProperties-234758e1.js';\nimport FocusVisible from './FocusVisible.js';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction getElementProps(_ref) {\n  var element = _ref.element,\n      href = _ref.href,\n      disabled = _ref.disabled,\n      external = _ref.external; // <button> (handles key events)\n\n  if (element === 'button') {\n    return ['button', {\n      type: 'button',\n      disabled: disabled\n    }];\n  } // <a href=\"\"> (handles key events)\n\n\n  if (element === 'a' && href) {\n    return ['anchor', disabled ? {} : _objectSpread({\n      href: href,\n      rel: 'noopener noreferrer'\n    }, external ? {\n      target: '_blank'\n    } : {})];\n  } // <a> or <div> (doesnâ€™t handle key events)\n\n\n  return ['basic', {\n    role: 'button',\n    tabIndex: disabled ? '-1' : '0'\n  }];\n}\n\nvar _StyledButton = _styled(\"button\").withConfig({\n  displayName: \"ButtonBase___StyledButton\",\n  componentId: \"sc-1asovfx-0\"\n})([\"position:relative;display:inline-block;padding:0;white-space:nowrap;\", \";text-decoration:none;text-align:center;background:none;border-radius:\", \"px;border:0;outline:0;cursor:\", \";\", \";&::-moz-focus-inner{border:0;}&:focus:after{content:'';display:\", \";position:absolute;top:\", \"px;left:\", \"px;right:\", \"px;bottom:\", \"px;border-radius:\", \"px;border:2px solid \", \";}\"], function (p) {\n  return p._css;\n}, MEDIUM_RADIUS, function (p) {\n  return p._css2;\n}, function (p) {\n  return p._css3;\n}, function (p) {\n  return p._css4;\n}, function (p) {\n  return p._css5;\n}, function (p) {\n  return p._css6;\n}, function (p) {\n  return p._css7;\n}, function (p) {\n  return p._css8;\n}, function (p) {\n  return p._css9;\n}, function (p) {\n  return p._css10;\n});\n\nfunction ButtonBase(_ref2) {\n  var disabled = _ref2.disabled,\n      element = _ref2.element,\n      external = _ref2.external,\n      focusRingRadius = _ref2.focusRingRadius,\n      focusRingSpacing = _ref2.focusRingSpacing,\n      focusVisible = _ref2.focusVisible,\n      href = _ref2.href,\n      innerRef = _ref2.innerRef,\n      onClick = _ref2.onClick,\n      onKeyDown = _ref2.onKeyDown,\n      showFocusRing = _ref2.showFocusRing,\n      props = _objectWithoutProperties(_ref2, [\"disabled\", \"element\", \"external\", \"focusRingRadius\", \"focusRingSpacing\", \"focusVisible\", \"href\", \"innerRef\", \"onClick\", \"onKeyDown\", \"showFocusRing\"]);\n\n  var theme = useTheme(); // `external` defaults to `true` if `href` is present, `false` otherwise.\n\n  if (external === undefined) {\n    external = Boolean(href);\n  }\n\n  if (typeof focusRingSpacing === 'number') {\n    focusRingSpacing = [focusRingSpacing, focusRingSpacing];\n  }\n\n  if (!element) {\n    element = href ? 'a' : 'button';\n  }\n\n  var _getElementProps = getElementProps({\n    element: element,\n    href: href,\n    disabled: disabled,\n    external: external\n  }),\n      _getElementProps2 = _slicedToArray(_getElementProps, 2),\n      elementType = _getElementProps2[0],\n      elementProps = _getElementProps2[1];\n\n  var handleKeyDown = useCallback(function (event) {\n    // Only applies to cases where the enter key is not handled already\n    if (elementType === 'basic' && event.keyCode === KEY_ENTER && onClick) {\n      onClick();\n    } // Pass the event up\n\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  }, [elementType, onClick, onKeyDown]);\n  return /*#__PURE__*/React.createElement(_StyledButton, _extends({\n    as: element,\n    ref: innerRef,\n    onClick: disabled ? undefined : onClick,\n    onKeyDown: disabled ? undefined : handleKeyDown\n  }, elementProps, props, {\n    _css: textStyle('body3'),\n    _css2: disabled ? 'default' : 'pointer',\n    _css3: elementType === 'basic' ? unselectable : '',\n    _css4: focusVisible && showFocusRing ? 'block' : 'none',\n    _css5: -focusRingSpacing[1],\n    _css6: -focusRingSpacing[0],\n    _css7: -focusRingSpacing[0],\n    _css8: -focusRingSpacing[1],\n    _css9: focusRingRadius,\n    _css10: theme.focus\n  }));\n}\n\nButtonBase.propTypes = {\n  disabled: PropTypes.bool,\n  external: PropTypes.bool,\n  focusRingRadius: PropTypes.number,\n  focusRingSpacing: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]),\n  focusVisible: PropTypes.bool,\n  href: PropTypes.string,\n  innerRef: PropTypes.any,\n  onClick: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  showFocusRing: PropTypes.bool,\n  element: PropTypes.oneOf(['button', 'div', 'a'])\n};\nButtonBase.defaultProps = {\n  disabled: false,\n  focusRingRadius: 0,\n  focusRingSpacing: 0,\n  showFocusRing: true\n};\nvar ButtonBaseWithFocus = React.forwardRef(function (_ref3, ref) {\n  var onFocusProp = _ref3.onFocus,\n      props = _objectWithoutProperties(_ref3, [\"onFocus\"]);\n\n  return /*#__PURE__*/React.createElement(FocusVisible, null, function (_ref4) {\n    var focusVisible = _ref4.focusVisible,\n        onFocus = _ref4.onFocus; // support external onFocus handlers\n\n    var handleFocus = function handleFocus(event) {\n      if (onFocusProp) {\n        onFocusProp(event);\n      }\n\n      onFocus(event);\n    };\n\n    return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n      innerRef: ref,\n      onFocus: handleFocus,\n      focusVisible: focusVisible\n    }, props));\n  });\n});\nButtonBaseWithFocus.propTypes = _objectSpread({}, ButtonBase.propTypes, {\n  onFocus: PropTypes.func\n});\nvar LinkBase = React.forwardRef(function (props, ref) {\n  warnOnce('LinkBase', 'LinkBase is deprecated: please use ButtonBase with a href prop instead.');\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    ref: ref\n  }, props));\n});\nexport default ButtonBaseWithFocus;\nexport { LinkBase };","map":null,"metadata":{},"sourceType":"module"}