{"ast":null,"code":"'use strict';\n\nconst {\n  Buffer\n} = require('buffer');\n\nconst webcrypto = require('../webcrypto');\n\nconst lengths = require('./lengths');\n\nconst hashTypes = {\n  SHA1: 'SHA-1',\n  SHA256: 'SHA-256',\n  SHA512: 'SHA-512'\n};\n\nconst sign = async (key, data) => {\n  return Buffer.from(await webcrypto.get().subtle.sign({\n    name: 'HMAC'\n  }, key, data));\n};\n\nexports.create = async function (hashType, secret) {\n  const hash = hashTypes[hashType];\n  const key = await webcrypto.get().subtle.importKey('raw', secret, {\n    name: 'HMAC',\n    hash: {\n      name: hash\n    }\n  }, false, ['sign']);\n  return {\n    async digest(data) {\n      // eslint-disable-line require-await\n      return sign(key, data);\n    },\n\n    length: lengths[hashType]\n  };\n};","map":null,"metadata":{},"sourceType":"script"}