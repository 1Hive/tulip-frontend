{"ast":null,"code":"'use strict';\n\nconst io = require('orbit-db-io');\n\nclass AccessControllerManifest {\n  constructor(type, params = {}) {\n    this.type = type;\n    this.params = params;\n  }\n\n  static async resolve(ipfs, manifestHash, options = {}) {\n    if (options.skipManifest) {\n      if (!options.type) {\n        throw new Error('No manifest, access-controller type required');\n      }\n\n      return new AccessControllerManifest(options.type, {\n        address: manifestHash\n      });\n    } else {\n      // TODO: ensure this is a valid multihash\n      if (manifestHash.indexOf('/ipfs') === 0) {\n        manifestHash = manifestHash.split('/')[2];\n      }\n\n      const {\n        type,\n        params\n      } = await io.read(ipfs, manifestHash);\n      return new AccessControllerManifest(type, params);\n    }\n  }\n\n  static async create(ipfs, type, params) {\n    if (params.skipManifest) {\n      return params.address;\n    }\n\n    const manifest = {\n      type: type,\n      params: params\n    };\n    return io.write(ipfs, 'dag-cbor', manifest);\n  }\n\n}\n\nmodule.exports = AccessControllerManifest;","map":null,"metadata":{},"sourceType":"script"}