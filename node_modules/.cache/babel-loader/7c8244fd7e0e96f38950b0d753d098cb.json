{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nrequire('./slicedToArray-a8a77f0e.js');\n\nrequire('./unsupportedIterableToArray-f175acfa.js');\n\nvar React = require('react');\n\nrequire('./_commonjsHelpers-1b94f6bc.js');\n\nrequire('./index-46d0e707.js');\n\nrequire('./defineProperty-3cad0327.js');\n\nrequire('./toConsumableArray-cc0d28a9.js');\n\nvar _styled = require('styled-components');\n\nrequire('./getPrototypeOf-55c9e80c.js');\n\nrequire('./color.js');\n\nrequire('./components.js');\n\nrequire('./css.js');\n\nrequire('./miscellaneous.js');\n\nrequire('./environment.js');\n\nrequire('./font.js');\n\nrequire('./keycodes.js');\n\nvar web3 = require('./web3-4e58c255.js');\n\nvar constants = require('./constants.js');\n\nrequire('./breakpoints.js');\n\nrequire('./springs.js');\n\nrequire('./text-styles.js');\n\nrequire('./theme-dark.js');\n\nrequire('./theme-light.js');\n\nrequire('./Theme.js');\n\nrequire('./extends-023d783e.js');\n\nrequire('./objectWithoutProperties-c6d3675c.js');\n\nrequire('./index-4def0554.js');\n\nrequire('./_baseGetTag-42b4dd3e.js');\n\nrequire('./Viewport-819c53c9.js');\n\nrequire('./Layout.js');\n\nrequire('./FocusVisible.js');\n\nrequire('./ButtonBase.js');\n\nrequire('./IconPropTypes-12cd7567.js');\n\nrequire('./IconCopy.js');\n\nrequire('./IconCross.js');\n\nrequire('./objectWithoutPropertiesLoose-1af20ad0.js');\n\nrequire('react-dom');\n\nrequire('./web-7cbdbd84.js');\n\nrequire('./Button.js');\n\nrequire('./ButtonIcon.js');\n\nvar Link = require('./Link.js');\n\nrequire('./TextInput.js');\n\nrequire('./ToastHub.js');\n\nrequire('./Root-8693e46b.js');\n\nrequire('./RootPortal.js');\n\nrequire('./TextCopy.js');\n\nrequire('./EthIdenticon.js');\n\nvar AddressField = require('./AddressField.js');\n\nvar BadgePopoverActionType = require('./BadgePopoverActionType.js');\n\nvar Tag = require('./Tag.js');\n\nvar proptypes = require('./proptypes-9c58a90f.js');\n\nrequire('./Popover.js');\n\nvar BadgePopoverBase = require('./BadgePopoverBase.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\nvar _styled__default = /*#__PURE__*/_interopDefaultLegacy(_styled);\n\nvar _StyledTag = _styled__default['default'](Tag.default).withConfig({\n  displayName: \"IdentityBadgePopover___StyledTag\",\n  componentId: \"sc-1yeyfty-0\"\n})([\"margin-left:\", \"px;\"], function (p) {\n  return p._css;\n});\n\nvar IdentityBadgePopover = /*#__PURE__*/React__default['default'].memo(function IdentityBadgePopover(_ref) {\n  var address = _ref.address,\n      connectedAccount = _ref.connectedAccount,\n      networkType = _ref.networkType,\n      onClose = _ref.onClose,\n      opener = _ref.opener,\n      popoverAction = _ref.popoverAction,\n      title = _ref.title,\n      visible = _ref.visible;\n  var etherscanUrl = web3.blockExplorerUrl('address', address, {\n    networkType: networkType\n  });\n  return /*#__PURE__*/React__default['default'].createElement(BadgePopoverBase.default, {\n    addressField: /*#__PURE__*/React__default['default'].createElement(AddressField.default, {\n      address: address\n    }),\n    link: etherscanUrl && /*#__PURE__*/React__default['default'].createElement(Link.default, {\n      href: etherscanUrl\n    }, \"See on Etherscan\"),\n    onClose: onClose,\n    opener: opener,\n    popoverAction: popoverAction,\n    title: title,\n    titleTag: connectedAccount && /*#__PURE__*/React__default['default'].createElement(_StyledTag, {\n      title: \"This is your Ethereum address\",\n      _css: 1 * constants.GU\n    }, \"you\"),\n    visible: visible\n  });\n});\nIdentityBadgePopover.propTypes = {\n  address: proptypes.ExtendedPropTypes.string,\n  connectedAccount: proptypes.ExtendedPropTypes.bool,\n  networkType: proptypes.ExtendedPropTypes.string,\n  onClose: proptypes.ExtendedPropTypes.func,\n  opener: proptypes.ExtendedPropTypes._element,\n  popoverAction: BadgePopoverActionType.default,\n  title: proptypes.ExtendedPropTypes.node,\n  visible: proptypes.ExtendedPropTypes.bool\n};\nIdentityBadgePopover.defaultProps = {\n  title: 'Address'\n};\nexports.default = IdentityBadgePopover;","map":{"version":3,"sources":["../src/components/IdentityBadge/IdentityBadgePopover.js"],"names":["IdentityBadgePopover","address","connectedAccount","networkType","onClose","opener","popoverAction","title","visible","etherscanUrl","blockExplorerUrl","BadgePopoverBase","AddressField","Link","GU","PropTypes","BadgePopoverActionType","bool"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAUMA,oBAAoB,GAAA,aAAG,cAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAW,SAAA,oBAAA,CAAA,IAAA,EASrC;AAAA,MARDC,OAQC,GAAA,IAAA,CARDA,OAQC;AAAA,MAPDC,gBAOC,GAAA,IAAA,CAPDA,gBAOC;AAAA,MANDC,WAMC,GAAA,IAAA,CANDA,WAMC;AAAA,MALDC,OAKC,GAAA,IAAA,CALDA,OAKC;AAAA,MAJDC,MAIC,GAAA,IAAA,CAJDA,MAIC;AAAA,MAHDC,aAGC,GAAA,IAAA,CAHDA,aAGC;AAAA,MAFDC,KAEC,GAAA,IAAA,CAFDA,KAEC;AAAA,MADDC,OACC,GAAA,IAAA,CADDA,OACC;AACD,MAAMC,YAAY,GAAGC,IAAAA,CAAAA,gBAAAA,CAAgB,SAAhBA,EAAgB,OAAhBA,EAAqC;AAAEP,IAAAA,WAAW,EAAXA;AAAF,GAArCO,CAArB;AAEA,SAAA,aACE,cAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAACC,gBAAAA,CAAD,OAAA,EAAA;AACE,IAAA,YAAY,EAAA,aAAE,cAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAACC,YAAAA,CAAD,OAAA,EAAA;AAAc,MAAA,OAAO,EAAEX;AAAvB,KAAA,CADhB;AAEE,IAAA,IAAI,EAAEQ,YAAY,IAAA,aAAI,cAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAACI,IAAAA,CAAD,OAAA,EAAA;AAAM,MAAA,IAAI,EAAEJ;AAAZ,KAAA,EAFxB,kBAEwB,CAFxB;AAGE,IAAA,OAAO,EAHT,OAAA;AAIE,IAAA,MAAM,EAJR,MAAA;AAKE,IAAA,aAAa,EALf,aAAA;AAME,IAAA,KAAK,EANP,KAAA;AAOE,IAAA,QAAQ,EACNP,gBAAgB,IAAA,aACd,cAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AAIE,MAAA,KAAK,EAJP,+BAAA;AAAA,MAAA,IAAA,EAEmB,IAAIY,SAAAA,CAAAA;AAFvB,KAAA,EATN,KASM,CATN;AAmBE,IAAA,OAAO,EAAEN;AAnBX,GAAA,CADF;AAZ2B,CAAA,C;AAoC7BR,oBAAoB,CAApBA,SAAAA,GAAiC;AAC/BC,EAAAA,OAAO,EAAEc,SAAAA,CAAAA,iBAAAA,CADsB,MAAA;AAE/Bb,EAAAA,gBAAgB,EAAEa,SAAAA,CAAAA,iBAAAA,CAFa,IAAA;AAG/BZ,EAAAA,WAAW,EAAEY,SAAAA,CAAAA,iBAAAA,CAHkB,MAAA;AAI/BX,EAAAA,OAAO,EAAEW,SAAAA,CAAAA,iBAAAA,CAJsB,IAAA;AAK/BV,EAAAA,MAAM,EAAEU,SAAAA,CAAAA,iBAAAA,CALuB,QAAA;AAM/BT,EAAAA,aAAa,EAAEU,sBAAAA,CANgB,OAAA;AAO/BT,EAAAA,KAAK,EAAEQ,SAAAA,CAAAA,iBAAAA,CAPwB,IAAA;AAQ/BP,EAAAA,OAAO,EAAEO,SAAAA,CAAAA,iBAAAA,CAAUE;AARY,CAAjCjB;AAUAA,oBAAoB,CAApBA,YAAAA,GAAoC;AAClCO,EAAAA,KAAK,EAAE;AAD2B,CAApCP","sourcesContent":["import React from 'react'\nimport PropTypes from '../../proptypes'\nimport { GU } from '../../style'\nimport { blockExplorerUrl } from '../../utils'\nimport AddressField from '../AddressField/AddressField'\nimport BadgePopoverBase from '../BadgeBase/BadgePopoverBase'\nimport BadgePopoverActionType from '../BadgeBase/BadgePopoverActionType'\nimport Link from '../Link/Link'\nimport Tag from '../Tag/Tag'\n\nconst IdentityBadgePopover = React.memo(function IdentityBadgePopover({\n  address,\n  connectedAccount,\n  networkType,\n  onClose,\n  opener,\n  popoverAction,\n  title,\n  visible,\n}) {\n  const etherscanUrl = blockExplorerUrl('address', address, { networkType })\n\n  return (\n    <BadgePopoverBase\n      addressField={<AddressField address={address} />}\n      link={etherscanUrl && <Link href={etherscanUrl}>See on Etherscan</Link>}\n      onClose={onClose}\n      opener={opener}\n      popoverAction={popoverAction}\n      title={title}\n      titleTag={\n        connectedAccount && (\n          <Tag\n            css={`\n              margin-left: ${1 * GU}px;\n            `}\n            title=\"This is your Ethereum address\"\n          >\n            you\n          </Tag>\n        )\n      }\n      visible={visible}\n    />\n  )\n})\nIdentityBadgePopover.propTypes = {\n  address: PropTypes.string,\n  connectedAccount: PropTypes.bool,\n  networkType: PropTypes.string,\n  onClose: PropTypes.func,\n  opener: PropTypes._element,\n  popoverAction: BadgePopoverActionType,\n  title: PropTypes.node,\n  visible: PropTypes.bool,\n}\nIdentityBadgePopover.defaultProps = {\n  title: 'Address',\n}\n\nexport default IdentityBadgePopover\n"]},"metadata":{},"sourceType":"script"}