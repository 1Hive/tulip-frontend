{"ast":null,"code":"'use strict';\n\nconst MAX_MSG_SIZE = 1 << 20; // 1MB\n\n/**\n * Creates an iterable transform that restricts message sizes to\n * the given maximum size.\n * @param {number} [max] The maximum message size. Defaults to 1MB\n * @returns {*} An iterable transform.\n */\n\nmodule.exports = max => {\n  max = max || MAX_MSG_SIZE;\n\n  const checkSize = msg => {\n    if (msg.data && msg.data.length > max) {\n      throw Object.assign(new Error('message size too large!'), {\n        code: 'ERR_MSG_TOO_BIG'\n      });\n    }\n  };\n\n  return source => {\n    return async function* restrictSize() {\n      for await (const msg of source) {\n        if (Array.isArray(msg)) {\n          msg.forEach(checkSize);\n        } else {\n          checkSize(msg);\n        }\n\n        yield msg;\n      }\n    }();\n  };\n};\n\nmodule.exports.MAX_MSG_SIZE = MAX_MSG_SIZE;","map":null,"metadata":{},"sourceType":"script"}