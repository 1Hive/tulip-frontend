{"ast":null,"code":"import environment from'./environment';import{isLocalOrUnknownNetwork,getNetworkType}from'./lib/web3-utils';import{getNetworkConfig}from'./networks';import{getDefaultEthNode,getIpfsGateway,getSubgraphHttpEndpoint}from'./local-settings';var CHAIN_ID=environment('CHAIN_ID');var COURT_SERVER_NAME=environment('COURT_SERVER_NAME');// BrightId endpoints\nexport var BRIGHT_ID_ENDPOINT_V5='https://brightid.1hive.org/node/v5';export var BRIGHTID_VERIFICATION_ENDPOINT=\"\".concat(BRIGHT_ID_ENDPOINT_V5,\"/verifications\");export var BRIGHTID_1HIVE_INFO_ENDPOINT=\"\".concat(BRIGHT_ID_ENDPOINT_V5,\"/apps/1hive\");export var BRIGHTID_SUBSCRIPTION_ENDPOINT=\"\".concat(BRIGHT_ID_ENDPOINT_V5,\"/operations\");// IPFS endpoint\nexport var IPFS_ENDPOINT=isLocalOrUnknownNetwork(CHAIN_ID)?'http://127.0.0.1:8080/ipfs':'https://ipfs.eth.aragon.network/ipfs';// Court server endpoint\nexport function courtServerEndpoint(){if(isLocalOrUnknownNetwork(CHAIN_ID)){return'http://127.0.0.1:8050';}var networkType=getNetworkType(CHAIN_ID);return\"https://celeste-server\".concat(networkType==='main'?'':\"-\".concat(COURT_SERVER_NAME||networkType),\".1hive.org\");}export function graphEndpoint(){var _getNetworkConfig=getNetworkConfig(),nodes=_getNetworkConfig.nodes;return nodes.subgraph;}export var defaultEthNode=getDefaultEthNode()||getNetworkConfig().nodes.defaultEth;export var defaultIpfsGateway=getIpfsGateway();export var defaultSubgraphHttpEndpoint=getSubgraphHttpEndpoint();","map":{"version":3,"sources":["/Users/fabianmolina/Documents/1hive/tulip-frontend/src/endpoints.js"],"names":["environment","isLocalOrUnknownNetwork","getNetworkType","getNetworkConfig","getDefaultEthNode","getIpfsGateway","getSubgraphHttpEndpoint","CHAIN_ID","COURT_SERVER_NAME","BRIGHT_ID_ENDPOINT_V5","BRIGHTID_VERIFICATION_ENDPOINT","BRIGHTID_1HIVE_INFO_ENDPOINT","BRIGHTID_SUBSCRIPTION_ENDPOINT","IPFS_ENDPOINT","courtServerEndpoint","networkType","graphEndpoint","nodes","subgraph","defaultEthNode","defaultEth","defaultIpfsGateway","defaultSubgraphHttpEndpoint"],"mappings":"AAAA,MAAOA,CAAAA,WAAP,KAAwB,eAAxB,CAEA,OAASC,uBAAT,CAAkCC,cAAlC,KAAwD,kBAAxD,CACA,OAASC,gBAAT,KAAiC,YAAjC,CACA,OACEC,iBADF,CAEEC,cAFF,CAGEC,uBAHF,KAIO,kBAJP,CAMA,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,CAAC,UAAD,CAA5B,CACA,GAAMQ,CAAAA,iBAAiB,CAAGR,WAAW,CAAC,mBAAD,CAArC,CAEA;AACA,MAAO,IAAMS,CAAAA,qBAAqB,CAAG,oCAA9B,CACP,MAAO,IAAMC,CAAAA,8BAA8B,WAAMD,qBAAN,kBAApC,CACP,MAAO,IAAME,CAAAA,4BAA4B,WAAMF,qBAAN,eAAlC,CACP,MAAO,IAAMG,CAAAA,8BAA8B,WAAMH,qBAAN,eAApC,CAEP;AACA,MAAO,IAAMI,CAAAA,aAAa,CAAGZ,uBAAuB,CAACM,QAAD,CAAvB,CACzB,4BADyB,CAEzB,sCAFG,CAIP;AACA,MAAO,SAASO,CAAAA,mBAAT,EAA+B,CACpC,GAAIb,uBAAuB,CAACM,QAAD,CAA3B,CAAuC,CACrC,MAAO,uBAAP,CACD,CAED,GAAMQ,CAAAA,WAAW,CAAGb,cAAc,CAACK,QAAD,CAAlC,CACA,sCACEQ,WAAW,GAAK,MAAhB,CAAyB,EAAzB,YAAkCP,iBAAiB,EAAIO,WAAvD,CADF,eAGD,CAED,MAAO,SAASC,CAAAA,aAAT,EAAyB,uBACZb,gBAAgB,EADJ,CACtBc,KADsB,mBACtBA,KADsB,CAE9B,MAAOA,CAAAA,KAAK,CAACC,QAAb,CACD,CAED,MAAO,IAAMC,CAAAA,cAAc,CACzBf,iBAAiB,IAAMD,gBAAgB,GAAGc,KAAnB,CAAyBG,UAD3C,CAGP,MAAO,IAAMC,CAAAA,kBAAkB,CAAGhB,cAAc,EAAzC,CAEP,MAAO,IAAMiB,CAAAA,2BAA2B,CAAGhB,uBAAuB,EAA3D","sourcesContent":["import environment from './environment'\r\n\r\nimport { isLocalOrUnknownNetwork, getNetworkType } from './lib/web3-utils'\r\nimport { getNetworkConfig } from './networks'\r\nimport {\r\n  getDefaultEthNode,\r\n  getIpfsGateway,\r\n  getSubgraphHttpEndpoint,\r\n} from './local-settings'\r\n\r\nconst CHAIN_ID = environment('CHAIN_ID')\r\nconst COURT_SERVER_NAME = environment('COURT_SERVER_NAME')\r\n\r\n// BrightId endpoints\r\nexport const BRIGHT_ID_ENDPOINT_V5 = 'https://brightid.1hive.org/node/v5'\r\nexport const BRIGHTID_VERIFICATION_ENDPOINT = `${BRIGHT_ID_ENDPOINT_V5}/verifications`\r\nexport const BRIGHTID_1HIVE_INFO_ENDPOINT = `${BRIGHT_ID_ENDPOINT_V5}/apps/1hive`\r\nexport const BRIGHTID_SUBSCRIPTION_ENDPOINT = `${BRIGHT_ID_ENDPOINT_V5}/operations`\r\n\r\n// IPFS endpoint\r\nexport const IPFS_ENDPOINT = isLocalOrUnknownNetwork(CHAIN_ID)\r\n  ? 'http://127.0.0.1:8080/ipfs'\r\n  : 'https://ipfs.eth.aragon.network/ipfs'\r\n\r\n// Court server endpoint\r\nexport function courtServerEndpoint() {\r\n  if (isLocalOrUnknownNetwork(CHAIN_ID)) {\r\n    return 'http://127.0.0.1:8050'\r\n  }\r\n\r\n  const networkType = getNetworkType(CHAIN_ID)\r\n  return `https://celeste-server${\r\n    networkType === 'main' ? '' : `-${COURT_SERVER_NAME || networkType}`\r\n  }.1hive.org`\r\n}\r\n\r\nexport function graphEndpoint() {\r\n  const { nodes } = getNetworkConfig()\r\n  return nodes.subgraph\r\n}\r\n\r\nexport const defaultEthNode =\r\n  getDefaultEthNode() || getNetworkConfig().nodes.defaultEth\r\n\r\nexport const defaultIpfsGateway = getIpfsGateway()\r\n\r\nexport const defaultSubgraphHttpEndpoint = getSubgraphHttpEndpoint()\r\n"]},"metadata":{},"sourceType":"module"}