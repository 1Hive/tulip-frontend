{"ast":null,"code":"'use strict';\n\nconst pReflect = require('p-reflect');\n\nconst pLimit = require('p-limit');\n\nmodule.exports = async (array, options = {}) => {\n  const {\n    concurrency = Infinity\n  } = options;\n  const limit = pLimit(concurrency);\n  return Promise.all(array.map(element => {\n    if (element && typeof element.then === 'function') {\n      // eslint-disable-line promise/prefer-await-to-then\n      return pReflect(element);\n    }\n\n    if (typeof element === 'function') {\n      return pReflect(limit(() => element()));\n    }\n\n    return pReflect(Promise.resolve(element));\n  }));\n};","map":null,"metadata":{},"sourceType":"script"}