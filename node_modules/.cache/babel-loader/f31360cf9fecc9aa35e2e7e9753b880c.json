{"ast":null,"code":"import _styled7 from \"styled-components\";\nimport _styled6 from \"styled-components\";\nimport _styled5 from \"styled-components\";\nimport _styled4 from \"styled-components\";\nimport _styled3 from \"styled-components\";\nimport _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/fabianmolina/Documents/1hive/tulip-frontend/src/components/MainView.js\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Layout, Root, ScrollView, useViewport } from '@1hive/1hive-ui';\nimport usePreferences from '../hooks/usePreferences';\nimport MenuPanel from './MenuPanel';\nimport Header from './Header/Header';\nimport GlobalPreferences from './GlobalPreferences/GlobalPreferences';\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"MainView___StyledDiv\",\n  componentId: \"sc-1umivxv-0\"\n})([\"display:flex;flex-direction:column;height:100vh;\"]);\n\nvar _StyledDiv2 = _styled(\"div\").withConfig({\n  displayName: \"MainView___StyledDiv2\",\n  componentId: \"sc-1umivxv-1\"\n})([\"flex-shrink:0;\"]);\n\nvar _StyledDiv3 = _styled(\"div\").withConfig({\n  displayName: \"MainView___StyledDiv3\",\n  componentId: \"sc-1umivxv-2\"\n})([\"flex-grow:1;flex-shrink:1;height:0;display:flex;\"]);\n\nvar _StyledDiv4 = _styled(\"div\").withConfig({\n  displayName: \"MainView___StyledDiv4\",\n  componentId: \"sc-1umivxv-3\"\n})([\"flex-shrink:0;z-index:3;height:100%;\"]);\n\nvar _StyledRootProvider = _styled(Root.Provider).withConfig({\n  displayName: \"MainView___StyledRootProvider\",\n  componentId: \"sc-1umivxv-4\"\n})([\"flex-grow:1;height:100%;position:relative;\"]);\n\nvar _StyledDiv5 = _styled(\"div\").withConfig({\n  displayName: \"MainView___StyledDiv5\",\n  componentId: \"sc-1umivxv-5\"\n})([\"display:flex;flex-direction:column;height:100%;\"]);\n\nvar _StyledDiv6 = _styled(\"div\").withConfig({\n  displayName: \"MainView___StyledDiv6\",\n  componentId: \"sc-1umivxv-6\"\n})([\"flex:1 0 auto;\"]);\n\nfunction MainView({\n  children\n}) {\n  const {\n    width: vw,\n    below\n  } = useViewport();\n  const compactMode = below('medium');\n  const [menuPanelOpen, setMenuPanelOpen] = useState(!compactMode);\n  const [openPreferences, closePreferences, preferenceOption] = usePreferences();\n  const toggleMenuPanel = useCallback(() => setMenuPanelOpen(opened => !opened), []);\n  const handleCloseMenuPanel = useCallback(() => setMenuPanelOpen(false), []);\n  const handleOpenPage = useCallback(() => {\n    if (compactMode) {\n      handleCloseMenuPanel();\n    }\n  }, [compactMode, handleCloseMenuPanel]);\n  useEffect(() => {\n    setMenuPanelOpen(!compactMode);\n  }, [compactMode]);\n\n  if (preferenceOption) {\n    return /*#__PURE__*/React.createElement(GlobalPreferences, {\n      path: preferenceOption,\n      onScreenChange: openPreferences,\n      onClose: closePreferences,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(_StyledDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_StyledDiv2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    compactMode: compactMode,\n    toggleMenuPanel: toggleMenuPanel,\n    onOpenPreferences: openPreferences,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(_StyledDiv3, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_StyledDiv4, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuPanel, {\n    autoClosing: compactMode,\n    opened: menuPanelOpen,\n    onMenuPanelClose: handleCloseMenuPanel,\n    onOpenPage: handleOpenPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(_StyledRootProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_StyledDiv5, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_StyledDiv6, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Layout, {\n    parentWidth: vw,\n    paddingBottom: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, children)))))));\n}\n\nexport default MainView;","map":{"version":3,"sources":["/Users/fabianmolina/Documents/1hive/tulip-frontend/src/components/MainView.js"],"names":["React","useCallback","useEffect","useState","Layout","Root","ScrollView","useViewport","usePreferences","MenuPanel","Header","GlobalPreferences","MainView","children","width","vw","below","compactMode","menuPanelOpen","setMenuPanelOpen","openPreferences","closePreferences","preferenceOption","toggleMenuPanel","opened","handleCloseMenuPanel","handleOpenPage"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Layout, Root, ScrollView, useViewport } from '@1hive/1hive-ui'\r\nimport usePreferences from '../hooks/usePreferences'\r\nimport MenuPanel from './MenuPanel'\r\nimport Header from './Header/Header'\r\nimport GlobalPreferences from './GlobalPreferences/GlobalPreferences'\r\n\r\nfunction MainView({ children }) {\r\n  const { width: vw, below } = useViewport()\r\n  const compactMode = below('medium')\r\n  const [menuPanelOpen, setMenuPanelOpen] = useState(!compactMode)\r\n\r\n  const [openPreferences, closePreferences, preferenceOption] = usePreferences()\r\n\r\n  const toggleMenuPanel = useCallback(\r\n    () => setMenuPanelOpen(opened => !opened),\r\n    []\r\n  )\r\n\r\n  const handleCloseMenuPanel = useCallback(() => setMenuPanelOpen(false), [])\r\n\r\n  const handleOpenPage = useCallback(() => {\r\n    if (compactMode) {\r\n      handleCloseMenuPanel()\r\n    }\r\n  }, [compactMode, handleCloseMenuPanel])\r\n\r\n  useEffect(() => {\r\n    setMenuPanelOpen(!compactMode)\r\n  }, [compactMode])\r\n\r\n  if (preferenceOption) {\r\n    return (\r\n      <GlobalPreferences\r\n        path={preferenceOption}\r\n        onScreenChange={openPreferences}\r\n        onClose={closePreferences}\r\n      />\r\n    )\r\n  }\r\n  return (\r\n    <div\r\n      css={`\r\n        display: flex;\r\n        flex-direction: column;\r\n        height: 100vh;\r\n      `}\r\n    >\r\n      <div\r\n        css={`\r\n          flex-shrink: 0;\r\n        `}\r\n      >\r\n        <Header\r\n          compactMode={compactMode}\r\n          toggleMenuPanel={toggleMenuPanel}\r\n          onOpenPreferences={openPreferences}\r\n        />\r\n      </div>\r\n      <div\r\n        css={`\r\n          flex-grow: 1;\r\n          flex-shrink: 1;\r\n          height: 0;\r\n          display: flex;\r\n        `}\r\n      >\r\n        <div\r\n          css={`\r\n            flex-shrink: 0;\r\n            z-index: 3;\r\n            height: 100%;\r\n          `}\r\n        >\r\n          <MenuPanel\r\n            autoClosing={compactMode}\r\n            opened={menuPanelOpen}\r\n            onMenuPanelClose={handleCloseMenuPanel}\r\n            onOpenPage={handleOpenPage}\r\n          />\r\n        </div>\r\n        <Root.Provider\r\n          css={`\r\n            flex-grow: 1;\r\n            height: 100%;\r\n            position: relative;\r\n          `}\r\n        >\r\n          <ScrollView>\r\n            <div\r\n              css={`\r\n                display: flex;\r\n                flex-direction: column;\r\n                height: 100%;\r\n              `}\r\n            >\r\n              <div\r\n                css={`\r\n                  flex: 1 0 auto;\r\n                `}\r\n              >\r\n                <Layout parentWidth={vw} paddingBottom={0}>\r\n                  {children}\r\n                </Layout>\r\n              </div>\r\n            </div>\r\n          </ScrollView>\r\n        </Root.Provider>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainView\r\n"]},"metadata":{},"sourceType":"module"}