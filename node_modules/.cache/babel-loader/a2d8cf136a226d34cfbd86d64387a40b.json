{"ast":null,"code":"import _regeneratorRuntime from\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useContext}from'react';import{useQuery}from'react-query';// import { getNetworkConfig } from '../networks'\nimport{getContract}from'../web3-contracts';import{addresses}from'../constants/addresses';import honeyFarm from'../abi/honeyfarm.json';import erc20 from'../abi/ERC20.json';// import { ethers } from 'ethers'\nvar PoolContext=/*#__PURE__*/React.createContext();var loadPoolData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var contract,poolLength,poolLengthToNumber,poolData,i,data,c;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:contract=getContract(addresses.honeyfarm,honeyFarm);// const SCALE = await contract.functions.SCALE()\n_context.next=3;return contract.functions.poolLength();case 3:poolLength=_context.sent;poolLengthToNumber=poolLength[0].toNumber();poolData=[];i=0;case 7:if(!(i<poolLengthToNumber)){_context.next=29;break;}_context.next=10;return contract.functions.getPoolByIndex(i);case 10:data=_context.sent;c=getContract(data.poolToken,erc20);console.log(c);_context.t0=poolData;_context.t1=_objectSpread;_context.t2=_objectSpread({},data);_context.t3={};_context.next=19;return c.name();case 19:_context.t4=_context.sent;_context.next=22;return c.symbol();case 22:_context.t5=_context.sent;_context.t6={name:_context.t4,symbol:_context.t5};_context.t7=(0,_context.t1)(_context.t2,_context.t3,_context.t6);_context.t0.push.call(_context.t0,_context.t7);case 26:i++;_context.next=7;break;case 29:return _context.abrupt(\"return\",poolData);case 30:case\"end\":return _context.stop();}}},_callee);}));return function loadPoolData(){return _ref.apply(this,arguments);};}();export function PoolProvider(_ref2){var children=_ref2.children;var _useQuery=useQuery('loadPoolData',loadPoolData),data=_useQuery.data,status=_useQuery.status;var r={data:data,status:status};return/*#__PURE__*/React.createElement(PoolContext.Provider,{value:r},children);}export function usePoolProvider(){return useContext(PoolContext);}","map":{"version":3,"sources":["/Users/fabianmolina/Documents/1hive/tulip-frontend/src/providers/Poolprovider.js"],"names":["React","useContext","useQuery","getContract","addresses","honeyFarm","erc20","PoolContext","createContext","loadPoolData","contract","honeyfarm","functions","poolLength","poolLengthToNumber","toNumber","poolData","i","getPoolByIndex","data","c","poolToken","console","log","name","symbol","push","PoolProvider","children","status","r","usePoolProvider"],"mappings":"ufAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA;AACA,OAASC,WAAT,KAA4B,mBAA5B,CACA,OAASC,SAAT,KAA0B,wBAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,uBAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,mBAAlB,CACA;AAEA,GAAMC,CAAAA,WAAW,cAAGP,KAAK,CAACQ,aAAN,EAApB,CAEA,GAAMC,CAAAA,YAAY,0FAAG,gMACbC,QADa,CACFP,WAAW,CAACC,SAAS,CAACO,SAAX,CAAsBN,SAAtB,CADT,CAEnB;AAFmB,sBAIMK,CAAAA,QAAQ,CAACE,SAAT,CAAmBC,UAAnB,EAJN,QAIbA,UAJa,eAKbC,kBALa,CAKQD,UAAU,CAAC,CAAD,CAAV,CAAcE,QAAd,EALR,CAMbC,QANa,CAMF,EANE,CAOVC,CAPU,CAON,CAPM,aAOHA,CAAC,CAAGH,kBAPD,kDAQEJ,CAAAA,QAAQ,CAACE,SAAT,CAAmBM,cAAnB,CAAkCD,CAAlC,CARF,SAQXE,IARW,eASXC,CATW,CASPjB,WAAW,CAACgB,IAAI,CAACE,SAAN,CAAiBf,KAAjB,CATJ,CAUjBgB,OAAO,CAACC,GAAR,CAAYH,CAAZ,EAViB,YAWjBJ,QAXiB,wDAYZG,IAZY,wCAaHC,CAAAA,CAAC,CAACI,IAAF,EAbG,0DAcDJ,CAAAA,CAAC,CAACK,MAAF,EAdC,gDAafD,IAbe,aAcfC,MAde,2FAWRC,IAXQ,uCAOqBT,CAAC,EAPtB,+DAiBZD,QAjBY,yDAAH,kBAAZP,CAAAA,YAAY,0CAAlB,CAmBA,MAAO,SAASkB,CAAAA,YAAT,OAAoC,IAAZC,CAAAA,QAAY,OAAZA,QAAY,eAChB1B,QAAQ,CAAC,cAAD,CAAiBO,YAAjB,CADQ,CACjCU,IADiC,WACjCA,IADiC,CAC3BU,MAD2B,WAC3BA,MAD2B,CAEzC,GAAMC,CAAAA,CAAC,CAAG,CACRX,IAAI,CAAJA,IADQ,CAERU,MAAM,CAANA,MAFQ,CAAV,CAIA,mBAAO,oBAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAEC,CAA7B,EAAiCF,QAAjC,CAAP,CACD,CAED,MAAO,SAASG,CAAAA,eAAT,EAA2B,CAChC,MAAO9B,CAAAA,UAAU,CAACM,WAAD,CAAjB,CACD","sourcesContent":["import React, { useContext } from 'react'\nimport { useQuery } from 'react-query'\n// import { getNetworkConfig } from '../networks'\nimport { getContract } from '../web3-contracts'\nimport { addresses } from '../constants/addresses'\nimport honeyFarm from '../abi/honeyfarm.json'\nimport erc20 from '../abi/ERC20.json'\n// import { ethers } from 'ethers'\n\nconst PoolContext = React.createContext()\n\nconst loadPoolData = async () => {\n  const contract = getContract(addresses.honeyfarm, honeyFarm)\n  // const SCALE = await contract.functions.SCALE()\n\n  const poolLength = await contract.functions.poolLength()\n  const poolLengthToNumber = poolLength[0].toNumber()\n  const poolData = []\n  for (let i = 0; i < poolLengthToNumber; i++) {\n    const data = await contract.functions.getPoolByIndex(i)\n    const c = getContract(data.poolToken, erc20)\n    console.log(c)\n    poolData.push({\n      ...data,\n      name: await c.name(),\n      symbol: await c.symbol(),\n    })\n  }\n  return poolData\n}\nexport function PoolProvider({ children }) {\n  const { data, status } = useQuery('loadPoolData', loadPoolData)\n  const r = {\n    data,\n    status,\n  }\n  return <PoolContext.Provider value={r}>{children}</PoolContext.Provider>\n}\n\nexport function usePoolProvider() {\n  return useContext(PoolContext)\n}\n"]},"metadata":{},"sourceType":"module"}