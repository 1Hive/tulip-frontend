{"ast":null,"code":"const ready = require('./ready');\n\nmodule.exports = (socket, options) => {\n  options = options || {};\n  options.closeOnEnd = options.closeOnEnd !== false;\n  return async source => {\n    for await (const data of source) {\n      try {\n        await ready(socket);\n      } catch (err) {\n        if (err.message === 'socket closed') break;\n        throw err;\n      }\n\n      socket.send(data);\n    }\n\n    if (options.closeOnEnd && socket.readyState <= 1) {\n      return new Promise((resolve, reject) => {\n        socket.addEventListener('close', event => {\n          if (event.wasClean || event.code === 1006) {\n            resolve();\n          } else {\n            const err = Object.assign(new Error('ws error'), {\n              event\n            });\n            reject(err);\n          }\n        });\n        setTimeout(() => socket.close());\n      });\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script"}