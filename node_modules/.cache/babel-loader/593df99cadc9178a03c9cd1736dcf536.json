{"ast":null,"code":"import _styled3 from \"styled-components\";\nimport _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/fabianmolina/Documents/1hive/tulip-frontend/src/components/Farming/FarmTable/index.js\";\nimport React from 'react';\nimport { DataView, textStyle, Button } from '@1hive/1hive-ui';\nimport Loading from '../../Loading';\nimport { getKnownTokenImg } from '../../../utils/known-tokens';\nimport PairName from '../PairName';\nimport RewardComponent from '../RewardComponent'; // import { getContract } from '../../../web3-contracts'\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"FarmTable___StyledDiv\",\n  componentId: \"flmx2u-0\"\n})([\"\", \";font-family:'Overpass',sans-serif;font-weight:300;font-size:18px;\"], p => p._css);\n\nvar _StyledDataView = _styled(DataView).withConfig({\n  displayName: \"FarmTable___StyledDataView\",\n  componentId: \"flmx2u-1\"\n})([\"border-top:none;\"]);\n\nvar _StyledButton = _styled(Button).withConfig({\n  displayName: \"FarmTable___StyledButton\",\n  componentId: \"flmx2u-2\"\n})([\"background:linear-gradient(90deg,#aaf5d4,#7ce0d6);\"]);\n\nconst FarmTable = props => {\n  console.log(props);\n  const pairs = props.pairData.filter(id => {\n    const temp = [];\n\n    for (const x of props.tableData) {\n      temp.push(x.pair);\n    }\n\n    return temp.includes(id.id);\n  });\n  console.log(pairs);\n  const addAPY = pairs.map(pair => {\n    for (const x of props.tableData) {\n      if (x.pair === pair.id) {\n        return { ...pair,\n          apy: x.apy,\n          sushiHarvestedUSD: x.sushiHarvestedUSD,\n          sushiHarvested: x.sushiHarvested,\n          slpDeposited: x.slpDeposited,\n          allocPoint: x.allocPoint,\n          slpBalance: x.slpBalance,\n          slpWithdrawn: x.slpWithdrawn\n        };\n      }\n    }\n  });\n  console.log(addAPY);\n\n  if (props.tableData.length === 0) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(_StyledDiv, {\n      _css: textStyle('body2'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(_StyledDataView, {\n      fields: ['Asset', 'Base Yield', 'Reward Yield', 'Total Yield', 'Reward Asset', ' '],\n      emptyState: {\n        default: {\n          displayLoader: false,\n          title: 'Getting Pools',\n          subtitle: null,\n          illustration: /*#__PURE__*/React.createElement(Loading, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }\n          }),\n          clearLabel: null\n        },\n        loading: {\n          displayLoader: true,\n          title: 'No data available.',\n          subtitle: null,\n          illustration: /*#__PURE__*/React.createElement(\"img\", {\n            src: \"https://i1.wp.com/www.cssscript.com/wp-content/uploads/2014/10/iOS-OS-X-Style-Pure-CSS-Loading-Spinner.jpg?fit=400%2C300&ssl=1\",\n            alt: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }\n          }),\n          clearLabel: null\n        }\n      },\n      entries: addAPY,\n      header: true,\n      renderEntry: ({\n        id,\n        token0,\n        token1,\n        apy\n      }) => {\n        const customLabel = `${token0.symbol}-${token1.symbol}`;\n        const baseYield = parseInt(apy.toFixed(2));\n        const rewardYield = parseInt(apy.toFixed(2) * 2);\n        const totalYield = parseInt(baseYield + rewardYield);\n        const token0Img = getKnownTokenImg(token0.symbol);\n        const token1Img = getKnownTokenImg(token1.symbol);\n        const imgObj = {\n          pair1: token0Img,\n          pair2: token1Img\n        };\n        return [/*#__PURE__*/React.createElement(PairName, {\n          image: imgObj,\n          name: customLabel,\n          subheadline: \"Honeyswap\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }\n        }, baseYield, \"%\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }\n        }, rewardYield, \"%\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }\n        }, totalYield, \"%\"), /*#__PURE__*/React.createElement(RewardComponent, {\n          image: getKnownTokenImg('AG'),\n          name: \"Agave\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(_StyledButton, {\n          label: \"Stake\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }\n        })];\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }));\n  }\n};\n\nexport default FarmTable;","map":{"version":3,"sources":["/Users/fabianmolina/Documents/1hive/tulip-frontend/src/components/Farming/FarmTable/index.js"],"names":["React","DataView","textStyle","Button","Loading","getKnownTokenImg","PairName","RewardComponent","FarmTable","props","console","log","pairs","pairData","filter","id","temp","x","tableData","push","pair","includes","addAPY","map","apy","sushiHarvestedUSD","sushiHarvested","slpDeposited","allocPoint","slpBalance","slpWithdrawn","length","default","displayLoader","title","subtitle","illustration","clearLabel","loading","token0","token1","customLabel","symbol","baseYield","parseInt","toFixed","rewardYield","totalYield","token0Img","token1Img","imgObj","pair1","pair2"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { DataView, textStyle, Button } from '@1hive/1hive-ui'\nimport Loading from '../../Loading'\nimport { getKnownTokenImg } from '../../../utils/known-tokens'\nimport PairName from '../PairName'\nimport RewardComponent from '../RewardComponent'\n// import { getContract } from '../../../web3-contracts'\n\nconst FarmTable = props => {\n  console.log(props)\n\n  const pairs = props.pairData.filter(id => {\n    const temp = []\n    for (const x of props.tableData) {\n      temp.push(x.pair)\n    }\n    return temp.includes(id.id)\n  })\n  console.log(pairs)\n  const addAPY = pairs.map(pair => {\n    for (const x of props.tableData) {\n      if (x.pair === pair.id) {\n        return {\n          ...pair,\n          apy: x.apy,\n          sushiHarvestedUSD: x.sushiHarvestedUSD,\n          sushiHarvested: x.sushiHarvested,\n          slpDeposited: x.slpDeposited,\n          allocPoint: x.allocPoint,\n          slpBalance: x.slpBalance,\n          slpWithdrawn: x.slpWithdrawn,\n        }\n      }\n    }\n  })\n  console.log(addAPY)\n  if (props.tableData.length === 0) {\n    return <Loading />\n  } else {\n    return (\n      <div\n        css={`\n          ${textStyle('body2')};\n          font-family: 'Overpass', sans-serif;\n          font-weight: 300;\n          font-size: 18px;\n        `}\n      >\n        <DataView\n          fields={[\n            'Asset',\n            'Base Yield',\n            'Reward Yield',\n            'Total Yield',\n            'Reward Asset',\n            ' ',\n          ]}\n          css={`\n            border-top: none;\n          `}\n          emptyState={{\n            default: {\n              displayLoader: false,\n              title: 'Getting Pools',\n              subtitle: null,\n              illustration: <Loading />,\n              clearLabel: null,\n            },\n            loading: {\n              displayLoader: true,\n              title: 'No data available.',\n              subtitle: null,\n              illustration: (\n                <img\n                  src=\"https://i1.wp.com/www.cssscript.com/wp-content/uploads/2014/10/iOS-OS-X-Style-Pure-CSS-Loading-Spinner.jpg?fit=400%2C300&ssl=1\"\n                  alt=\"\"\n                />\n              ),\n              clearLabel: null,\n            },\n          }}\n          entries={addAPY}\n          header\n          renderEntry={({ id, token0, token1, apy }) => {\n            const customLabel = `${token0.symbol}-${token1.symbol}`\n            const baseYield = parseInt(apy.toFixed(2))\n            const rewardYield = parseInt(apy.toFixed(2) * 2)\n            const totalYield = parseInt(baseYield + rewardYield)\n            const token0Img = getKnownTokenImg(token0.symbol)\n            const token1Img = getKnownTokenImg(token1.symbol)\n            const imgObj = {\n              pair1: token0Img,\n              pair2: token1Img,\n            }\n            return [\n              <PairName\n                image={imgObj}\n                name={customLabel}\n                subheadline=\"Honeyswap\"\n              />,\n              <p>{baseYield}%</p>,\n              <p>{rewardYield}%</p>,\n              <p>{totalYield}%</p>,\n              <RewardComponent image={getKnownTokenImg('AG')} name=\"Agave\" />,\n              <Button\n                css={`\n                  background: linear-gradient(90deg, #aaf5d4, #7ce0d6);\n                `}\n                label=\"Stake\"\n              />,\n            ]\n          }}\n        />\n      </div>\n    )\n  }\n}\nexport default FarmTable\n"]},"metadata":{},"sourceType":"module"}