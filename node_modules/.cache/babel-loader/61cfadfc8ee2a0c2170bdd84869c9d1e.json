{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar slicedToArray = require('./slicedToArray-a8a77f0e.js');\n\nrequire('./unsupportedIterableToArray-f175acfa.js');\n\nvar React = require('react');\n\nrequire('./_commonjsHelpers-1b94f6bc.js');\n\nvar index = require('./index-46d0e707.js');\n\nrequire('./defineProperty-3cad0327.js');\n\nrequire('./toConsumableArray-cc0d28a9.js');\n\nvar _styled = require('styled-components');\n\nrequire('./getPrototypeOf-55c9e80c.js');\n\nrequire('./color.js');\n\nvar css = require('./css.js');\n\nrequire('./miscellaneous.js');\n\nvar environment = require('./environment.js');\n\nrequire('./font.js');\n\nrequire('./keycodes.js');\n\nvar constants = require('./constants.js');\n\nrequire('./breakpoints.js');\n\nvar textStyles = require('./text-styles.js');\n\nrequire('./theme-dark.js');\n\nrequire('./theme-light.js');\n\nvar Theme = require('./Theme.js');\n\nvar _extends = require('./extends-023d783e.js');\n\nvar objectWithoutProperties = require('./objectWithoutProperties-c6d3675c.js');\n\nvar index$1 = require('./index-4def0554.js');\n\nrequire('./_baseGetTag-42b4dd3e.js');\n\nrequire('./Viewport-819c53c9.js');\n\nvar Layout = require('./Layout.js');\n\nrequire('./FocusVisible.js');\n\nvar ButtonBase = require('./ButtonBase.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\nvar _styled__default = /*#__PURE__*/_interopDefaultLegacy(_styled); // See src/icons/icon-size.js for the corresponding icon sizes.\n\n\nvar SIZE_STYLES = {\n  medium: {\n    textStyleName: 'body2',\n    height: 5 * constants.GU,\n    padding: 3 * constants.GU,\n    iconPadding: 2 * constants.GU,\n    minWidth: 14.5 * constants.GU,\n    middleSpace: 1 * constants.GU\n  },\n  small: {\n    textStyleName: 'body2',\n    height: 4 * constants.GU,\n    padding: 2 * constants.GU,\n    iconPadding: 1.5 * constants.GU,\n    minWidth: 13 * constants.GU,\n    middleSpace: 1 * constants.GU\n  },\n  mini: {\n    textStyleName: 'body4',\n    height: 3 * constants.GU,\n    padding: 1.5 * constants.GU,\n    iconPadding: 1 * constants.GU,\n    minWidth: 9.25 * constants.GU,\n    middleSpace: 0.5 * constants.GU\n  }\n};\n\nfunction getPadding(size, displayIcon, displayLabel) {\n  var _SIZE_STYLES$size = SIZE_STYLES[size],\n      padding = _SIZE_STYLES$size.padding,\n      iconPadding = _SIZE_STYLES$size.iconPadding;\n\n  if (displayIcon && !displayLabel) {\n    return '0';\n  }\n\n  if (displayIcon && displayLabel) {\n    return \"0 \".concat(padding, \"px 0 \").concat(iconPadding, \"px\");\n  }\n\n  return \"0 \".concat(padding, \"px\");\n}\n\nfunction getWidth(size, displayIconOnly, wide) {\n  var height = SIZE_STYLES[size].height;\n\n  if (wide) {\n    return '100%';\n  }\n\n  if (displayIconOnly) {\n    return \"\".concat(height, \"px\");\n  }\n\n  return 'auto';\n}\n\nfunction getMinWidth(size, displayLabelOnly) {\n  var minWidth = SIZE_STYLES[size].minWidth;\n  return displayLabelOnly ? \"\".concat(minWidth, \"px\") : '0';\n} // CSS styles related to the current size\n\n\nfunction sizeStyles(size, wide, displayIcon, displayLabel) {\n  var _SIZE_STYLES$size2 = SIZE_STYLES[size],\n      height = _SIZE_STYLES$size2.height,\n      textStyleName = _SIZE_STYLES$size2.textStyleName,\n      middleSpace = _SIZE_STYLES$size2.middleSpace;\n  return {\n    height: \"\".concat(height, \"px\"),\n    middleSpace: displayIcon && displayLabel ? \"\".concat(middleSpace, \"px\") : '0',\n    minWidth: getMinWidth(size, !displayIcon && displayLabel),\n    padding: getPadding(size, displayIcon, displayLabel),\n    textStyleCss: textStyles.textStyle(textStyleName),\n    width: getWidth(size, displayIcon && !displayLabel, wide)\n  };\n} // CSS styles related to the current mode\n\n\nfunction modeStyles(theme, mode, disabled) {\n  if (disabled) {\n    return {\n      background: theme.disabled,\n      color: theme.disabledContent,\n      iconColor: theme.disabledContent,\n      border: '0'\n    };\n  }\n\n  if (mode === 'strong') {\n    return {\n      background: \"\\n        linear-gradient(\\n          190deg,\\n          \".concat(theme.accentStart, \" -100%,\\n          \").concat(theme.accentEnd, \" 80%\\n        )\\n      \"),\n      color: theme.accentContent,\n      iconColor: theme.accentContent,\n      border: '0'\n    };\n  }\n\n  if (mode === 'positive') {\n    return {\n      background: theme.positive,\n      color: theme.positiveContent,\n      iconColor: theme.positiveContent,\n      border: '0'\n    };\n  }\n\n  if (mode === 'negative') {\n    return {\n      background: theme.negative,\n      color: theme.negativeContent,\n      iconColor: theme.negativeContent,\n      border: '0'\n    };\n  }\n\n  return {\n    background: theme.surfaceInteractive,\n    color: theme.surfaceContent,\n    iconColor: theme.surfaceIcon,\n    border: \"1px solid \".concat(theme.border)\n  };\n}\n\nvar _StyledButtonBase = _styled__default['default'](ButtonBase.default).withConfig({\n  displayName: \"Button___StyledButtonBase\",\n  componentId: \"sc-8npd5h-0\"\n})([\"display:\", \";align-items:center;justify-content:center;width:\", \";height:\", \";min-width:\", \";padding:\", \";\", \";\", \";background:\", \";color:\", \";white-space:nowrap;border:\", \";box-shadow:\", \";transition-property:transform,box-shadow;transition-duration:50ms;transition-timing-function:ease-in-out;&:active{transform:\", \";box-shadow:\", \";}\"], function (p) {\n  return p._css;\n}, function (p) {\n  return p._css2;\n}, function (p) {\n  return p._css3;\n}, function (p) {\n  return p._css4;\n}, function (p) {\n  return p._css5;\n}, function (p) {\n  return p._css6;\n}, css.unselectable, function (p) {\n  return p._css7;\n}, function (p) {\n  return p._css8;\n}, function (p) {\n  return p._css9;\n}, function (p) {\n  return p._css10;\n}, function (p) {\n  return p._css11;\n}, function (p) {\n  return p._css12;\n});\n\nvar _StyledSpan = _styled__default['default'](\"span\").withConfig({\n  displayName: \"Button___StyledSpan\",\n  componentId: \"sc-8npd5h-1\"\n})([\"position:relative;top:-1px;display:flex;color:\", \";margin-right:\", \";\"], function (p) {\n  return p._css13;\n}, function (p) {\n  return p._css14;\n});\n\nfunction Button(_ref) {\n  var children = _ref.children,\n      disabled = _ref.disabled,\n      display = _ref.display,\n      icon = _ref.icon,\n      iconOnly = _ref.iconOnly,\n      innerRef = _ref.innerRef,\n      label = _ref.label,\n      mode = _ref.mode,\n      size = _ref.size,\n      wide = _ref.wide,\n      props = objectWithoutProperties.objectWithoutProperties(_ref, [\"children\", \"disabled\", \"display\", \"icon\", \"iconOnly\", \"innerRef\", \"label\", \"mode\", \"size\", \"wide\"]); // backward compatibility and deprecated props\n\n  if (iconOnly) {\n    environment.warnOnce('Button:iconOnly', 'Button: \"iconOnly\" is deprecated, please use \"display\".');\n    display = 'icon';\n  }\n\n  if (mode === 'outline' || mode === 'secondary') {\n    environment.warnOnce('Button:mode', \"Button: the mode \\\"\".concat(mode, \"\\\" is deprecated, please use \\\"normal\\\".\"));\n    mode = 'normal';\n  }\n\n  if (size === 'normal' || size === 'large') {\n    environment.warnOnce('Button:size', \"Button: the size \\\"\".concat(size, \"\\\" is deprecated, please use \\\"medium\\\".\"));\n    size = 'medium';\n  } // prop warnings\n\n\n  if (display === 'icon' && !icon) {\n    environment.warn('Button: the display \"icon\" was used without providing an icon.');\n  }\n\n  if (!children && !label) {\n    environment.warn('Button: please provide a label.');\n  }\n\n  var theme = Theme.useTheme();\n\n  var _useLayout = Layout.useLayout(),\n      layoutName = _useLayout.layoutName;\n\n  var _useInside = index$1.o('EmptyStateCard'),\n      _useInside2 = slicedToArray.slicedToArray(_useInside, 1),\n      insideEmptyStateCard = _useInside2[0];\n\n  var _useInside3 = index$1.o('Header:secondary'),\n      _useInside4 = slicedToArray.slicedToArray(_useInside3, 1),\n      insideHeaderSecondary = _useInside4[0]; // Always wide + strong when used as an empty state card action\n\n\n  if (insideEmptyStateCard) {\n    mode = 'strong';\n    wide = true;\n  } // Alternate between icon and label automatically when used in Header\n\n\n  if (insideHeaderSecondary && display === 'auto' && icon && label) {\n    display = layoutName === 'small' ? 'icon' : 'label';\n  } // Otherwise, display both\n\n\n  if (display === 'auto') {\n    display = 'all';\n  }\n\n  var displayIcon = icon && (display === 'all' || display === 'icon');\n  var displayLabel = label && (display === 'all' || display === 'label'); // Mode styles\n\n  var _useMemo = React.useMemo(function () {\n    return modeStyles(theme, mode, disabled);\n  }, [mode, theme, disabled]),\n      background = _useMemo.background,\n      color = _useMemo.color,\n      iconColor = _useMemo.iconColor,\n      border = _useMemo.border; // Size styles\n\n\n  var _useMemo2 = React.useMemo(function () {\n    return sizeStyles(size, wide, displayIcon, displayLabel);\n  }, [size, wide, displayIcon, displayLabel]),\n      height = _useMemo2.height,\n      middleSpace = _useMemo2.middleSpace,\n      minWidth = _useMemo2.minWidth,\n      padding = _useMemo2.padding,\n      textStyleCss = _useMemo2.textStyleCss,\n      width = _useMemo2.width; // Use the label as a title when only the icon is displayed\n\n\n  if (displayIcon && !displayLabel && label && typeof label === 'string') {\n    props.title = label;\n  }\n\n  var insideData = {\n    size: size\n  };\n  return /*#__PURE__*/React__default['default'].createElement(_StyledButtonBase, _extends._extends_1({\n    ref: innerRef,\n    focusRingSpacing: border === '0' ? 0 : 1,\n    focusRingRadius: constants.RADIUS,\n    disabled: disabled\n  }, props, {\n    _css: wide ? 'flex' : 'inline-flex',\n    _css2: width,\n    _css3: height,\n    _css4: minWidth,\n    _css5: padding,\n    _css6: textStyleCss,\n    _css7: background,\n    _css8: color,\n    _css9: border,\n    _css10: disabled ? 'none' : '0 1px 3px rgba(0, 0, 0, 0.1)',\n    _css11: disabled ? 'none' : 'translateY(1px)',\n    _css12: disabled ? 'none' : '0px 1px 2px rgba(0, 0, 0, 0.08)'\n  }), /*#__PURE__*/React__default['default'].createElement(index$1.i, {\n    name: \"Button\",\n    data: insideData\n  }, children || /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, displayIcon && /*#__PURE__*/React__default['default'].createElement(index$1.i, {\n    name: \"Button:icon\",\n    data: insideData\n  }, /*#__PURE__*/React__default['default'].createElement(_StyledSpan, {\n    _css13: iconColor,\n    _css14: middleSpace\n  }, icon)), displayLabel && /*#__PURE__*/React__default['default'].createElement(index$1.i, {\n    name: \"Button:label\",\n    data: insideData\n  }, label))));\n}\n\nButton.propTypes = {\n  children: index.propTypes.node,\n  disabled: index.propTypes.bool,\n  display: index.propTypes.oneOf(['auto', 'all', 'icon', 'label']),\n  icon: index.propTypes.node,\n  innerRef: index.propTypes.any,\n  label: index.propTypes.string,\n  mode: index.propTypes.oneOf(['normal', 'strong', 'positive', 'negative', // deprecated\n  'outline', 'secondary', 'text']),\n  size: index.propTypes.oneOf(['medium', 'small', 'mini', // deprecated\n  'large', 'normal']),\n  wide: index.propTypes.bool,\n  // deprecated\n  iconOnly: index.propTypes.bool\n};\nButton.defaultProps = {\n  disabled: false,\n  display: 'auto',\n  mode: 'normal',\n  size: 'medium',\n  wide: false\n};\nvar ButtonWithRef = /*#__PURE__*/React__default['default'].forwardRef(function (props, ref) {\n  return /*#__PURE__*/React__default['default'].createElement(Button, _extends._extends_1({\n    innerRef: ref\n  }, props));\n});\nButtonWithRef.Anchor = /*#__PURE__*/React__default['default'].forwardRef(function (props, ref) {\n  environment.warnOnce('Button.Anchor', 'Button.Anchor is deprecated: please use Button with a href prop instead.');\n  return /*#__PURE__*/React__default['default'].createElement(ButtonWithRef, _extends._extends_1({\n    ref: ref\n  }, props));\n});\nexports.default = ButtonWithRef;","map":{"version":3,"sources":["../src/components/Button/Button.js"],"names":["SIZE_STYLES","medium","textStyleName","height","GU","padding","iconPadding","minWidth","middleSpace","small","mini","displayIcon","displayLabelOnly","getMinWidth","getPadding","textStyleCss","textStyle","width","getWidth","background","theme","color","iconColor","border","mode","children","disabled","display","icon","iconOnly","innerRef","label","size","wide","props","warnOnce","warn","useTheme","layoutName","useLayout","insideEmptyStateCard","useInside","insideHeaderSecondary","displayLabel","useMemo","modeStyles","sizeStyles","insideData","RADIUS","unselectable","Inside","React","Button","PropTypes","bool","ButtonWithRef","ref"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { Inside, useInside } from 'use-inside'\nimport { textStyle, GU, RADIUS } from '../../style'\nimport { useTheme } from '../../theme'\nimport { warn, warnOnce, unselectable } from '../../utils'\nimport { useLayout } from '../Layout/Layout'\nimport ButtonBase from '../ButtonBase/ButtonBase'\n\n// Base styles related to every size.\n// See src/icons/icon-size.js for the corresponding icon sizes.\nconst SIZE_STYLES = {\n  medium: {\n    textStyleName: 'body2',\n    height: 5 * GU,\n    padding: 3 * GU,\n    iconPadding: 2 * GU,\n    minWidth: 14.5 * GU,\n    middleSpace: 1 * GU,\n  },\n  small: {\n    textStyleName: 'body2',\n    height: 4 * GU,\n    padding: 2 * GU,\n    iconPadding: 1.5 * GU,\n    minWidth: 13 * GU,\n    middleSpace: 1 * GU,\n  },\n  mini: {\n    textStyleName: 'body4',\n    height: 3 * GU,\n    padding: 1.5 * GU,\n    iconPadding: 1 * GU,\n    minWidth: 9.25 * GU,\n    middleSpace: 0.5 * GU,\n  },\n}\n\nfunction getPadding(size, displayIcon, displayLabel) {\n  const { padding, iconPadding } = SIZE_STYLES[size]\n\n  if (displayIcon && !displayLabel) {\n    return '0'\n  }\n\n  if (displayIcon && displayLabel) {\n    return `0 ${padding}px 0 ${iconPadding}px`\n  }\n\n  return `0 ${padding}px`\n}\n\nfunction getWidth(size, displayIconOnly, wide) {\n  const { height } = SIZE_STYLES[size]\n\n  if (wide) {\n    return '100%'\n  }\n\n  if (displayIconOnly) {\n    return `${height}px`\n  }\n\n  return 'auto'\n}\n\nfunction getMinWidth(size, displayLabelOnly) {\n  const { minWidth } = SIZE_STYLES[size]\n  return displayLabelOnly ? `${minWidth}px` : '0'\n}\n\n// CSS styles related to the current size\nfunction sizeStyles(size, wide, displayIcon, displayLabel) {\n  const { height, textStyleName, middleSpace } = SIZE_STYLES[size]\n\n  return {\n    height: `${height}px`,\n    middleSpace: displayIcon && displayLabel ? `${middleSpace}px` : '0',\n    minWidth: getMinWidth(size, !displayIcon && displayLabel),\n    padding: getPadding(size, displayIcon, displayLabel),\n    textStyleCss: textStyle(textStyleName),\n    width: getWidth(size, displayIcon && !displayLabel, wide),\n  }\n}\n\n// CSS styles related to the current mode\nfunction modeStyles(theme, mode, disabled) {\n  if (disabled) {\n    return {\n      background: theme.disabled,\n      color: theme.disabledContent,\n      iconColor: theme.disabledContent,\n      border: '0',\n    }\n  }\n  if (mode === 'strong') {\n    return {\n      background: `\n        linear-gradient(\n          190deg,\n          ${theme.accentStart} -100%,\n          ${theme.accentEnd} 80%\n        )\n      `,\n      color: theme.accentContent,\n      iconColor: theme.accentContent,\n      border: '0',\n    }\n  }\n\n  if (mode === 'positive') {\n    return {\n      background: theme.positive,\n      color: theme.positiveContent,\n      iconColor: theme.positiveContent,\n      border: '0',\n    }\n  }\n\n  if (mode === 'negative') {\n    return {\n      background: theme.negative,\n      color: theme.negativeContent,\n      iconColor: theme.negativeContent,\n      border: '0',\n    }\n  }\n\n  return {\n    background: theme.surfaceInteractive,\n    color: theme.surfaceContent,\n    iconColor: theme.surfaceIcon,\n    border: `1px solid ${theme.border}`,\n  }\n}\n\nfunction Button({\n  children,\n  disabled,\n  display,\n  icon,\n  iconOnly,\n  innerRef,\n  label,\n  mode,\n  size,\n  wide,\n  ...props\n}) {\n  // backward compatibility and deprecated props\n  if (iconOnly) {\n    warnOnce(\n      'Button:iconOnly',\n      'Button: \"iconOnly\" is deprecated, please use \"display\".'\n    )\n    display = 'icon'\n  }\n  if (mode === 'outline' || mode === 'secondary') {\n    warnOnce(\n      'Button:mode',\n      `Button: the mode \"${mode}\" is deprecated, please use \"normal\".`\n    )\n    mode = 'normal'\n  }\n  if (size === 'normal' || size === 'large') {\n    warnOnce(\n      'Button:size',\n      `Button: the size \"${size}\" is deprecated, please use \"medium\".`\n    )\n    size = 'medium'\n  }\n\n  // prop warnings\n  if (display === 'icon' && !icon) {\n    warn('Button: the display \"icon\" was used without providing an icon.')\n  }\n  if (!children && !label) {\n    warn('Button: please provide a label.')\n  }\n\n  const theme = useTheme()\n  const { layoutName } = useLayout()\n\n  const [insideEmptyStateCard] = useInside('EmptyStateCard')\n  const [insideHeaderSecondary] = useInside('Header:secondary')\n\n  // Always wide + strong when used as an empty state card action\n  if (insideEmptyStateCard) {\n    mode = 'strong'\n    wide = true\n  }\n\n  // Alternate between icon and label automatically when used in Header\n  if (insideHeaderSecondary && display === 'auto' && icon && label) {\n    display = layoutName === 'small' ? 'icon' : 'label'\n  }\n\n  // Otherwise, display both\n  if (display === 'auto') {\n    display = 'all'\n  }\n\n  const displayIcon = icon && (display === 'all' || display === 'icon')\n  const displayLabel = label && (display === 'all' || display === 'label')\n\n  // Mode styles\n  const { background, color, iconColor, border } = useMemo(\n    () => modeStyles(theme, mode, disabled),\n    [mode, theme, disabled]\n  )\n\n  // Size styles\n  const {\n    height,\n    middleSpace,\n    minWidth,\n    padding,\n    textStyleCss,\n    width,\n  } = useMemo(() => sizeStyles(size, wide, displayIcon, displayLabel), [\n    size,\n    wide,\n    displayIcon,\n    displayLabel,\n  ])\n\n  // Use the label as a title when only the icon is displayed\n  if (displayIcon && !displayLabel && label && typeof label === 'string') {\n    props.title = label\n  }\n\n  const insideData = { size }\n\n  return (\n    <ButtonBase\n      ref={innerRef}\n      focusRingSpacing={border === '0' ? 0 : 1}\n      focusRingRadius={RADIUS}\n      disabled={disabled}\n      {...props}\n      css={`\n        display: ${wide ? 'flex' : 'inline-flex'};\n        align-items: center;\n        justify-content: center;\n        width: ${width};\n        height: ${height};\n        min-width: ${minWidth};\n        padding: ${padding};\n        ${textStyleCss};\n        ${unselectable};\n        background: ${background};\n        color: ${color};\n        white-space: nowrap;\n        border: ${border};\n        box-shadow: ${disabled ? 'none' : '0 1px 3px rgba(0, 0, 0, 0.1)'};\n        transition-property: transform, box-shadow;\n        transition-duration: 50ms;\n        transition-timing-function: ease-in-out;\n        &:active {\n          transform: ${disabled ? 'none' : 'translateY(1px)'};\n          box-shadow: ${disabled ? 'none' : '0px 1px 2px rgba(0, 0, 0, 0.08)'};\n        }\n      `}\n    >\n      <Inside name=\"Button\" data={insideData}>\n        {children || (\n          <React.Fragment>\n            {displayIcon && (\n              <Inside name=\"Button:icon\" data={insideData}>\n                <span\n                  css={`\n                    position: relative;\n                    top: -1px;\n                    display: flex;\n                    color: ${iconColor};\n                    margin-right: ${middleSpace};\n                  `}\n                >\n                  {icon}\n                </span>\n              </Inside>\n            )}\n            {displayLabel && (\n              <Inside name=\"Button:label\" data={insideData}>\n                {label}\n              </Inside>\n            )}\n          </React.Fragment>\n        )}\n      </Inside>\n    </ButtonBase>\n  )\n}\n\nButton.propTypes = {\n  children: PropTypes.node,\n  disabled: PropTypes.bool,\n  display: PropTypes.oneOf(['auto', 'all', 'icon', 'label']),\n  icon: PropTypes.node,\n  innerRef: PropTypes.any,\n  label: PropTypes.string,\n  mode: PropTypes.oneOf([\n    'normal',\n    'strong',\n    'positive',\n    'negative',\n\n    // deprecated\n    'outline',\n    'secondary',\n    'text',\n  ]),\n  size: PropTypes.oneOf([\n    'medium',\n    'small',\n    'mini',\n\n    // deprecated\n    'large',\n    'normal',\n  ]),\n  wide: PropTypes.bool,\n\n  // deprecated\n  iconOnly: PropTypes.bool,\n}\n\nButton.defaultProps = {\n  disabled: false,\n  display: 'auto',\n  mode: 'normal',\n  size: 'medium',\n  wide: false,\n}\n\nconst ButtonWithRef = React.forwardRef((props, ref) => (\n  <Button innerRef={ref} {...props} />\n))\n\nButtonWithRef.Anchor = React.forwardRef((props, ref) => {\n  warnOnce(\n    'Button.Anchor',\n    'Button.Anchor is deprecated: please use Button with a href prop instead.'\n  )\n  return <ButtonWithRef ref={ref} {...props} />\n})\n\nexport default ButtonWithRef\n"]},"metadata":{},"sourceType":"script"}