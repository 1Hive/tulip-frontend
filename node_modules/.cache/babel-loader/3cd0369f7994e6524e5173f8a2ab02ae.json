{"ast":null,"code":"'use strict'; // MaxRecordAge specifies the maximum time that any node will hold onto a record\n// from the time its received. This does not apply to any other forms of validity that\n// the record may contain.\n// For example, a record may contain an ipns entry with an EOL saying its valid\n// until the year 2020 (a great time in the future). For that record to stick around\n// it must be rebroadcasted more frequently than once every 'MaxRecordAge'\n\nvar second = exports.second = 1000;\nvar minute = exports.minute = 60 * second;\nvar hour = exports.hour = 60 * minute;\nexports.MAX_RECORD_AGE = 36 * hour;\nexports.PROTOCOL_DHT = '/ipfs/kad/1.0.0';\nexports.PROVIDERS_KEY_PREFIX = '/providers/';\nexports.PROVIDERS_LRU_CACHE_SIZE = 256;\nexports.PROVIDERS_VALIDITY = 24 * hour;\nexports.PROVIDERS_CLEANUP_INTERVAL = hour;\nexports.READ_MESSAGE_TIMEOUT = 10 * second; // The number of records that will be retrieved on a call to getMany()\n\nexports.GET_MANY_RECORD_COUNT = 16; // K is the maximum number of requests to perform before returning failure\n\nexports.K = 20; // Alpha is the concurrency for asynchronous requests\n\nexports.ALPHA = 3;\nexports.defaultRandomWalk = {\n  enabled: true,\n  queriesPerPeriod: 1,\n  interval: 5 * minute,\n  timeout: 10 * second,\n  delay: 10 * second\n};","map":null,"metadata":{},"sourceType":"script"}