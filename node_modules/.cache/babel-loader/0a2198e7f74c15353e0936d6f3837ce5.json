{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _constants = require(\"../constants\");\n\nvar _utils = require(\"../utils\");\n\nvar _wallet = require(\"@ethersproject/wallet\");\n\nvar _contracts = require(\"@ethersproject/contracts\");\n\nvar providers = _interopRequireWildcard(require(\"@ethersproject/providers\"));\n\nvar _jsSha = require(\"js-sha256\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar ERC1271_ABI = ['function isValidSignature(bytes _messageHash, bytes _signature) public view returns (bytes4 magicValue)'];\nvar MAGIC_ERC1271_VALUE = '0x20c13b0b';\n\nvar isEthAddress = function isEthAddress(address) {\n  return /^0x[a-fA-F0-9]{40}$/.test(address);\n};\n\nfunction getEthersProvider(chainId) {\n  var network = providers.getNetwork(chainId);\n  if (!network._defaultProvider) throw new Error(\"Network with chainId \".concat(chainId, \" is not supported\"));\n  return network._defaultProvider(providers);\n}\n\nfunction getChainId(_x) {\n  return _getChainId.apply(this, arguments);\n}\n\nfunction _getChainId() {\n  _getChainId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(provider) {\n    var payload, chainIdHex;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            payload = (0, _utils.encodeRpcCall)('eth_chainId', []);\n            _context.next = 3;\n            return safeSend(payload, provider);\n\n          case 3:\n            chainIdHex = _context.sent;\n            return _context.abrupt(\"return\", parseInt(chainIdHex, 16));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getChainId.apply(this, arguments);\n}\n\nfunction getCode(_x2, _x3) {\n  return _getCode.apply(this, arguments);\n}\n\nfunction _getCode() {\n  _getCode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(address, provider) {\n    var payload, code;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            payload = (0, _utils.encodeRpcCall)('eth_getCode', [address, 'latest']);\n            _context2.next = 3;\n            return safeSend(payload, provider);\n\n          case 3:\n            code = _context2.sent;\n            return _context2.abrupt(\"return\", code);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getCode.apply(this, arguments);\n}\n\nfunction safeSend(_x4, _x5) {\n  return _safeSend.apply(this, arguments);\n}\n\nfunction _safeSend() {\n  _safeSend = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(data, provider) {\n    var send;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            send = (Boolean(provider.sendAsync) ? provider.sendAsync : provider.send).bind(provider);\n            return _context3.abrupt(\"return\", new Promise(function (resolve, reject) {\n              send(data, function (err, result) {\n                if (err) reject(err);else if (result.error) reject(result.error);else resolve(result.result);\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _safeSend.apply(this, arguments);\n}\n\nfunction createEthLink(_x6, _x7, _x8) {\n  return _createEthLink.apply(this, arguments);\n}\n\nfunction _createEthLink() {\n  _createEthLink = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(did, address, provider) {\n    var opts,\n        _ref,\n        message,\n        timestamp,\n        hexMessage,\n        payload,\n        signature,\n        proof,\n        _args4 = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            opts = _args4.length > 3 && _args4[3] !== undefined ? _args4[3] : {};\n            _ref = (0, _utils.getConsentMessage)(did, !opts.skipTimestamp), message = _ref.message, timestamp = _ref.timestamp;\n            hexMessage = '0x' + Buffer.from(message, 'utf8').toString('hex');\n            payload = (0, _utils.encodeRpcCall)('personal_sign', [hexMessage, address]);\n            _context4.next = 6;\n            return safeSend(payload, provider);\n\n          case 6:\n            signature = _context4.sent;\n            proof = {\n              version: 1,\n              type: _constants.ADDRESS_TYPES.ethereumEOA,\n              message: message,\n              signature: signature,\n              address: address\n            };\n            if (!opts.skipTimestamp) proof.timestamp = timestamp;\n            return _context4.abrupt(\"return\", proof);\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _createEthLink.apply(this, arguments);\n}\n\nfunction createErc1271Link(_x9, _x10, _x11, _x12) {\n  return _createErc1271Link.apply(this, arguments);\n}\n\nfunction _createErc1271Link() {\n  _createErc1271Link = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(did, address, provider, opts) {\n    var res, chainId;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return createEthLink(did, address, provider, opts);\n\n          case 2:\n            res = _context5.sent;\n            _context5.next = 5;\n            return getChainId(provider);\n\n          case 5:\n            chainId = _context5.sent;\n            return _context5.abrupt(\"return\", Object.assign(res, {\n              type: _constants.ADDRESS_TYPES.erc1271,\n              chainId: chainId\n            }));\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _createErc1271Link.apply(this, arguments);\n}\n\nfunction typeDetector(_x13) {\n  return _typeDetector.apply(this, arguments);\n}\n\nfunction _typeDetector() {\n  _typeDetector = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(address) {\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            return _context6.abrupt(\"return\", isEthAddress(address) ? _constants.ADDRESS_TYPES.ethereum : false);\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _typeDetector.apply(this, arguments);\n}\n\nfunction isERC1271(_x14, _x15) {\n  return _isERC.apply(this, arguments);\n}\n\nfunction _isERC() {\n  _isERC = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(address, provider) {\n    var bytecode;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return getCode(address, provider).catch(function () {\n              return null;\n            });\n\n          case 2:\n            bytecode = _context7.sent;\n            return _context7.abrupt(\"return\", bytecode && bytecode !== '0x' && bytecode !== '0x0' && bytecode !== '0x00');\n\n          case 4:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _isERC.apply(this, arguments);\n}\n\nfunction createLink(_x16, _x17, _x18, _x19, _x20) {\n  return _createLink.apply(this, arguments);\n}\n\nfunction _createLink() {\n  _createLink = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(did, address, type, provider, opts) {\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            address = address.toLowerCase();\n            _context8.next = 3;\n            return isERC1271(address, provider);\n\n          case 3:\n            if (_context8.sent) {\n              _context8.next = 7;\n              break;\n            }\n\n            return _context8.abrupt(\"return\", createEthLink(did, address, provider, opts));\n\n          case 7:\n            return _context8.abrupt(\"return\", createErc1271Link(did, address, provider, opts));\n\n          case 8:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _createLink.apply(this, arguments);\n}\n\nfunction validateEoaLink(_x21) {\n  return _validateEoaLink.apply(this, arguments);\n}\n\nfunction _validateEoaLink() {\n  _validateEoaLink = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(proof) {\n    var recoveredAddr;\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            recoveredAddr = (0, _wallet.verifyMessage)(proof.message, proof.signature).toLowerCase();\n\n            if (!(proof.address && proof.address !== recoveredAddr)) {\n              _context9.next = 5;\n              break;\n            }\n\n            return _context9.abrupt(\"return\", null);\n\n          case 5:\n            proof.address = recoveredAddr;\n\n          case 6:\n            return _context9.abrupt(\"return\", proof);\n\n          case 7:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _validateEoaLink.apply(this, arguments);\n}\n\nfunction validateErc1271Link(_x22) {\n  return _validateErc1271Link.apply(this, arguments);\n}\n\nfunction _validateErc1271Link() {\n  _validateErc1271Link = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(proof) {\n    var provider, contract, message, returnValue;\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            provider = getEthersProvider(proof.chainId);\n            contract = new _contracts.Contract(proof.address, ERC1271_ABI, provider);\n            message = '0x' + Buffer.from(proof.message, 'utf8').toString('hex');\n            _context10.next = 5;\n            return contract.isValidSignature(message, proof.signature);\n\n          case 5:\n            returnValue = _context10.sent;\n            return _context10.abrupt(\"return\", returnValue === MAGIC_ERC1271_VALUE ? proof : null);\n\n          case 7:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _validateErc1271Link.apply(this, arguments);\n}\n\nfunction validateLink(_x23) {\n  return _validateLink.apply(this, arguments);\n}\n\nfunction _validateLink() {\n  _validateLink = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(proof) {\n    return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            if (!(proof.type === _constants.ADDRESS_TYPES.ethereumEOA)) {\n              _context11.next = 4;\n              break;\n            }\n\n            return _context11.abrupt(\"return\", validateEoaLink(proof));\n\n          case 4:\n            if (!(proof.type === _constants.ADDRESS_TYPES.erc1271)) {\n              _context11.next = 6;\n              break;\n            }\n\n            return _context11.abrupt(\"return\", validateErc1271Link(proof));\n\n          case 6:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _validateLink.apply(this, arguments);\n}\n\nfunction authenticate(_x24, _x25, _x26) {\n  return _authenticate.apply(this, arguments);\n}\n\nfunction _authenticate() {\n  _authenticate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(message, address, provider) {\n    var hexMessage, payload, signature, recoveredAddr;\n    return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            if (address) address = address.toLowerCase();\n\n            if (!provider.isAuthereum) {\n              _context12.next = 3;\n              break;\n            }\n\n            return _context12.abrupt(\"return\", provider.signMessageWithSigningKey(text));\n\n          case 3:\n            hexMessage = '0x' + Buffer.from(message, 'utf8').toString('hex');\n            payload = (0, _utils.encodeRpcCall)('personal_sign', [hexMessage, address]);\n            _context12.next = 7;\n            return safeSend(payload, provider);\n\n          case 7:\n            signature = _context12.sent;\n\n            if (!address) {\n              _context12.next = 12;\n              break;\n            }\n\n            recoveredAddr = (0, _wallet.verifyMessage)(message, signature).toLowerCase();\n\n            if (!(address !== recoveredAddr)) {\n              _context12.next = 12;\n              break;\n            }\n\n            throw new Error('Provider returned signature from different account than requested');\n\n          case 12:\n            return _context12.abrupt(\"return\", \"0x\".concat((0, _jsSha.sha256)(signature.slice(2))));\n\n          case 13:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12);\n  }));\n  return _authenticate.apply(this, arguments);\n}\n\nvar _default = {\n  authenticate: authenticate,\n  validateLink: validateLink,\n  createLink: createLink,\n  typeDetector: typeDetector,\n  isERC1271: isERC1271\n};\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}