{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _postmsgRpc = require(\"postmsg-rpc\");\n\nvar _utils = require(\"identity-wallet/lib/utils\");\n\nvar IdentityWallet = require('identity-wallet');\n\nvar Url = require('url-parse');\n\nvar store = require('store');\n\nvar _require = require('./utils'),\n    isLinked = _require.isLinked;\n\nvar consentKey = function consentKey(address, domain, space) {\n  return \"3id_consent_\".concat(address, \"_\").concat(domain, \"_\").concat(space);\n};\n\nvar serializedKey = function serializedKey(address) {\n  return \"serialized3id_\".concat(address);\n};\n\nvar mobileRegex = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n\nvar checkIsMobile = function checkIsMobile() {\n  return mobileRegex.test(navigator.userAgent);\n};\n/**\n *  ThreeIdConnectService runs an identity wallet instance and rpc server with\n *  bindings to receive and relay rpc messages to identity wallet\n */\n\n\nvar ThreeIdConnectService = /*#__PURE__*/function () {\n  /**\n    * Create ThreeIdConnectService\n    */\n  function ThreeIdConnectService() {\n    (0, _classCallCheck2[\"default\"])(this, ThreeIdConnectService);\n\n    this._registerDisplayListeners();\n\n    this._registerExternalAuthListeners();\n  }\n  /**\n   * Registers rpc call function for display and hiding iframe (Note: reverse of\n   * idw rpc calls, this is rpc client, sending messages to parent window)\n   * @private\n   */\n\n\n  (0, _createClass2[\"default\"])(ThreeIdConnectService, [{\n    key: \"_registerDisplayListeners\",\n    value: function _registerDisplayListeners() {\n      this.display = (0, _postmsgRpc.caller)('display', {\n        postMessage: window.parent.postMessage.bind(window.parent)\n      });\n      this.hide = (0, _postmsgRpc.caller)('hide', {\n        postMessage: window.parent.postMessage.bind(window.parent)\n      });\n    }\n    /**\n     * Registers rpc call functions for handling external auth calls needed for IDW to parent window\n     * @private\n     */\n\n  }, {\n    key: \"_registerExternalAuthListeners\",\n    value: function _registerExternalAuthListeners() {\n      this.migration = (0, _postmsgRpc.caller)('migration', {\n        postMessage: window.parent.postMessage.bind(window.parent)\n      });\n      this.authenticate = (0, _postmsgRpc.caller)('authenticate', {\n        postMessage: window.parent.postMessage.bind(window.parent)\n      });\n      this.createLink = (0, _postmsgRpc.caller)('createLink', {\n        postMessage: window.parent.postMessage.bind(window.parent)\n      });\n    }\n    /**\n      *  External Authencation method for IDW\n      *\n      * @param     {Object}    params\n      * @param     {String}    params.address     An ethereum address\n      * @param     {Array}     params.spaces      Array of space strings\n      * @param     {String}    params.type        Type of external auth request\n      * @return    {Object}                       Response depends on type of request\n    */\n\n  }, {\n    key: \"externalAuth\",\n    value: function () {\n      var _externalAuth = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(_ref) {\n        var address, spaces, type, did, threeId, message, new3id, cached3id, diffSpaces, migration3id, new3idSerialized, link;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                address = _ref.address, spaces = _ref.spaces, type = _ref.type, did = _ref.did;\n\n                if (!(type === '3id_auth')) {\n                  _context.next = 6;\n                  break;\n                } // TODO IMPLEMENT full migration\n\n\n                message = 'Add this account as a 3ID authentication method';\n                return _context.abrupt(\"return\", this.authenticate(message, address));\n\n              case 6:\n                if (!(type === '3id_migration')) {\n                  _context.next = 23;\n                  break;\n                }\n\n                cached3id = this._get3idState(address);\n\n                if (!cached3id) {\n                  this.linkPromise = isLinked(address);\n                }\n\n                diffSpaces = this._diff3idState(cached3id, address, spaces);\n\n                if (!diffSpaces) {\n                  _context.next = 17;\n                  break;\n                }\n\n                _context.next = 13;\n                return this.migration(diffSpaces, address);\n\n              case 13:\n                migration3id = _context.sent;\n                new3id = this._merge3idState(cached3id, JSON.parse(migration3id));\n                _context.next = 18;\n                break;\n\n              case 17:\n                new3id = cached3id;\n\n              case 18:\n                new3idSerialized = JSON.stringify(new3id);\n\n                this._write3idState(new3idSerialized, address);\n\n                return _context.abrupt(\"return\", new3idSerialized);\n\n              case 23:\n                if (!(type === '3id_createLink')) {\n                  _context.next = 30;\n                  break;\n                }\n\n                if (!this.linkPromise) {\n                  _context.next = 30;\n                  break;\n                }\n\n                _context.next = 27;\n                return this.linkPromise;\n\n              case 27:\n                link = _context.sent;\n\n                if (link) {\n                  _context.next = 30;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.createLink(did, address));\n\n              case 30:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function externalAuth(_x) {\n        return _externalAuth.apply(this, arguments);\n      }\n\n      return externalAuth;\n    }()\n  }, {\n    key: \"_write3idState\",\n    value: function _write3idState(state, address) {\n      store.set(serializedKey(address), state);\n    }\n  }, {\n    key: \"_get3idState\",\n    value: function _get3idState(address) {\n      var cached3id = store.get(serializedKey(address));\n      return cached3id ? JSON.parse(cached3id) : null;\n    }\n  }, {\n    key: \"_merge3idState\",\n    value: function _merge3idState(target, apply) {\n      if (!target) return apply;\n      var res = Object.assign({}, target);\n      res.spaceSeeds = Object.assign(target.spaceSeeds, apply.spaceSeeds || {});\n      return res;\n    }\n  }, {\n    key: \"_diff3idState\",\n    value: function _diff3idState(cached3id, address, spaces) {\n      if (!cached3id) return spaces;\n      var cacheSpaces = Object.keys(cached3id.spaceSeeds);\n      var diff = spaces.filter(function (x) {\n        return !cacheSpaces.includes(x);\n      });\n      return diff.length === 0 ? null : diff;\n    }\n    /**\n      *  Tells parent window to display iframe\n      */\n\n  }, {\n    key: \"displayIframe\",\n    value: function () {\n      var _displayIframe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", this.display(checkIsMobile()));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function displayIframe() {\n        return _displayIframe.apply(this, arguments);\n      }\n\n      return displayIframe;\n    }()\n    /**\n      *  Tells parent window to hide iframe\n      */\n\n  }, {\n    key: \"hideIframe\",\n    value: function () {\n      var _hideIframe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3() {\n        var root;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                root = document.getElementById('root');\n                if (root) root.innerHTML = \"\";\n                return _context3.abrupt(\"return\", this.hide());\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function hideIframe() {\n        return _hideIframe.apply(this, arguments);\n      }\n\n      return hideIframe;\n    }()\n    /**\n      *  Removes cache consents. For partial migration in instance consent function\n      *  returns, but external auth to support consents fails. Refactored in future.\n      *\n      * @private\n      * @param     {Object}    message    IDW rpc request message\n      * @param     {String}    domain     Origin of caller/request\n      * @return    {ThreeId}\n      */\n\n  }, {\n    key: \"_removeConsents\",\n    value: function _removeConsents(message, domain) {\n      var spaces = (0, _toConsumableArray2[\"default\"])(message.params.spaces);\n      var rootKeys = store.get(serializedKey(message.params.address)); //TODO current root 'space', name\n\n      if (!rootKeys) spaces.push('undefined');\n      spaces.forEach(function (space) {\n        var key = consentKey(message.params.address, domain, space);\n        store.remove(key);\n      });\n    }\n    /**\n      *  Start identity wallet service. Once returns ready to receive rpc requests\n      *\n      * @param     {Web3Modal}   web3Modal    configured instance of web3modal\n      * @param     {Function}    getConsent   get consent function, reference IDW\n      * @param     {Function}    erroCB       Function to handle errors, function consumes error string (err) => {...}, called on errors\n      * @param     {Function}    cancel       Function to cancel request, consumes callback, which is called when request is cancelled (cb) => {...}\n      */\n\n  }, {\n    key: \"start\",\n    value: function start(getConsent, errorCb, cancel) {\n      this.cancel = cancel;\n      this.errorCb = errorCb;\n      this.idWallet = new IdentityWallet(getConsent, {\n        externalAuth: this.externalAuth.bind(this)\n      });\n      this.provider = this.idWallet.get3idProvider();\n      (0, _postmsgRpc.expose)('send', this.providerRelay.bind(this), {\n        postMessage: window.parent.postMessage.bind(window.parent)\n      });\n    }\n    /**\n      *  Consumes IDW RPC request message and relays to IDW instance. Also handles\n      *  logic to retry requests and cancel requests.\n      *\n      * @param     {Object}      message    IDW RPC request message\n      * @return    {String}                 response message string\n      */\n\n  }, {\n    key: \"providerRelay\",\n    value: function () {\n      var _providerRelay = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(message) {\n        var _this = this;\n\n        var domain, responsePromise;\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                domain = new Url(document.referrer).host;\n                responsePromise = new Promise( /*#__PURE__*/function () {\n                  var _ref2 = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(resolve, reject) {\n                    var res, _res;\n\n                    return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n                      while (1) {\n                        switch (_context4.prev = _context4.next) {\n                          case 0:\n                            // Register request cancel calback\n                            // TODO could make all rpc errors match spec\n                            _this.cancel(function () {\n                              var res = {\n                                'id': message.id,\n                                'json-rpc': '2.0',\n                                error: \"3id-connect: Request not authorized\"\n                              };\n                              resolve(res);\n                            });\n\n                            if (!(message.method === '3id_authenticate')) {\n                              _context4.next = 16;\n                              break;\n                            }\n\n                            _context4.prev = 2;\n                            _context4.next = 5;\n                            return _this.provider.send(message, domain);\n\n                          case 5:\n                            res = _context4.sent;\n\n                            _this.hideIframe();\n\n                            resolve(res);\n                            _context4.next = 14;\n                            break;\n\n                          case 10:\n                            _context4.prev = 10;\n                            _context4.t0 = _context4[\"catch\"](2);\n\n                            _this.errorCb(_context4.t0, 'Error: Unable to connect');\n\n                            _this._removeConsents(message, domain);\n\n                          case 14:\n                            _context4.next = 20;\n                            break;\n\n                          case 16:\n                            _context4.next = 18;\n                            return _this.provider.send(message, domain);\n\n                          case 18:\n                            _res = _context4.sent;\n                            resolve(_res);\n\n                          case 20:\n                          case \"end\":\n                            return _context4.stop();\n                        }\n                      }\n                    }, _callee4, null, [[2, 10]]);\n                  }));\n\n                  return function (_x3, _x4) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n                _context5.t0 = JSON;\n                _context5.next = 5;\n                return responsePromise;\n\n              case 5:\n                _context5.t1 = _context5.sent;\n                return _context5.abrupt(\"return\", _context5.t0.stringify.call(_context5.t0, _context5.t1));\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function providerRelay(_x2) {\n        return _providerRelay.apply(this, arguments);\n      }\n\n      return providerRelay;\n    }()\n  }]);\n  return ThreeIdConnectService;\n}();\n\nvar _default = ThreeIdConnectService;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}