{"ast":null,"code":"var _jsxFileName = \"/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Profile/components/EditProfileModal/PauseProfileView.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { AutoRenewIcon, Button, Checkbox, Flex, Text } from '@pancakeswap-libs/uikit';\nimport useI18n from 'hooks/useI18n';\nimport { useDispatch } from 'react-redux';\nimport { useProfile, useToast } from 'state/hooks';\nimport { fetchProfile } from 'state/profile';\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport { useProfile as useProfileContract } from 'hooks/useContract';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PauseProfilePage = ({\n  onDismiss\n}) => {\n  _s();\n\n  const [isAcknowledged, setIsAcknowledged] = useState(false);\n  const [isConfirming, setIsConfirming] = useState(false);\n  const {\n    profile\n  } = useProfile();\n  const {\n    numberCakeToReactivate\n  } = useGetProfileCosts();\n  const TranslateString = useI18n();\n  const pancakeProfileContract = useProfileContract();\n  const {\n    account\n  } = useWallet();\n  const {\n    toastSuccess,\n    toastError\n  } = useToast();\n  const dispatch = useDispatch();\n\n  const handleChange = () => setIsAcknowledged(!isAcknowledged);\n\n  const handleDeactivateProfile = () => {\n    pancakeProfileContract.methods.pauseProfile().send({\n      from: account\n    }).on('sending', () => {\n      setIsConfirming(true);\n    }).on('receipt', async () => {\n      // Re-fetch profile\n      await dispatch(fetchProfile(account));\n      toastSuccess('Profile Paused!');\n      onDismiss();\n    }).on('error', error => {\n      toastError('Error', error === null || error === void 0 ? void 0 : error.message);\n      setIsConfirming(false);\n    });\n  };\n\n  if (!profile) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      as: \"p\",\n      color: \"failure\",\n      mb: \"24px\",\n      children: TranslateString(999, 'This will suspend your profile and send your Collectible back to your wallet')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      as: \"p\",\n      color: \"textSubtle\",\n      mb: \"24px\",\n      children: TranslateString(999, \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      as: \"p\",\n      color: \"textSubtle\",\n      mb: \"24px\",\n      children: TranslateString(999, `Cost to reactivate in future: ${getBalanceNumber(numberCakeToReactivate)} CAKE`)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"acknowledgement\",\n      style: {\n        cursor: 'pointer',\n        display: 'block',\n        marginBottom: '24px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          id: \"acknowledgement\",\n          checked: isAcknowledged,\n          onChange: handleChange,\n          scale: \"sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          ml: \"8px\",\n          children: TranslateString(999, 'I understand')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      fullWidth: true,\n      isLoading: isConfirming,\n      endIcon: isConfirming ? /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n        spin: true,\n        color: \"currentColor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 33\n      }, this) : null,\n      disabled: !isAcknowledged || isConfirming,\n      onClick: handleDeactivateProfile,\n      mb: \"8px\",\n      children: TranslateString(999, 'Confirm')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"text\",\n      fullWidth: true,\n      onClick: onDismiss,\n      children: TranslateString(999, 'Close Window')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PauseProfilePage, \"HZuShDabDHefer7AhM1xxWobXpI=\", false, function () {\n  return [useProfile, useGetProfileCosts, useI18n, useProfileContract, useWallet, useToast, useDispatch];\n});\n\n_c = PauseProfilePage;\nexport default PauseProfilePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PauseProfilePage\");","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Profile/components/EditProfileModal/PauseProfileView.tsx"],"names":["React","useState","AutoRenewIcon","Button","Checkbox","Flex","Text","useI18n","useDispatch","useProfile","useToast","fetchProfile","useGetProfileCosts","getBalanceNumber","useProfileContract","useWallet","PauseProfilePage","onDismiss","isAcknowledged","setIsAcknowledged","isConfirming","setIsConfirming","profile","numberCakeToReactivate","TranslateString","pancakeProfileContract","account","toastSuccess","toastError","dispatch","handleChange","handleDeactivateProfile","methods","pauseProfile","send","from","on","error","message","cursor","display","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { AutoRenewIcon, Button, Checkbox, Flex, InjectedModalProps, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useDispatch } from 'react-redux'\nimport { useProfile, useToast } from 'state/hooks'\nimport { fetchProfile } from 'state/profile'\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useProfile as useProfileContract } from 'hooks/useContract'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n\ntype PauseProfilePageProps = InjectedModalProps\n\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss }) => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { profile } = useProfile()\n  const { numberCakeToReactivate } = useGetProfileCosts()\n  const TranslateString = useI18n()\n  const pancakeProfileContract = useProfileContract()\n  const { account } = useWallet()\n  const { toastSuccess, toastError } = useToast()\n  const dispatch = useDispatch()\n\n  const handleChange = () => setIsAcknowledged(!isAcknowledged)\n\n  const handleDeactivateProfile = () => {\n    pancakeProfileContract.methods\n      .pauseProfile()\n      .send({ from: account })\n      .on('sending', () => {\n        setIsConfirming(true)\n      })\n      .on('receipt', async () => {\n        // Re-fetch profile\n        await dispatch(fetchProfile(account))\n        toastSuccess('Profile Paused!')\n\n        onDismiss()\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsConfirming(false)\n      })\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <>\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\n        {TranslateString(999, 'This will suspend your profile and send your Collectible back to your wallet')}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(\n          999,\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\",\n        )}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(999, `Cost to reactivate in future: ${getBalanceNumber(numberCakeToReactivate)} CAKE`)}\n      </Text>\n      <label htmlFor=\"acknowledgement\" style={{ cursor: 'pointer', display: 'block', marginBottom: '24px' }}>\n        <Flex alignItems=\"center\">\n          <Checkbox id=\"acknowledgement\" checked={isAcknowledged} onChange={handleChange} scale=\"sm\" />\n          <Text ml=\"8px\">{TranslateString(999, 'I understand')}</Text>\n        </Flex>\n      </label>\n      <Button\n        fullWidth\n        isLoading={isConfirming}\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        disabled={!isAcknowledged || isConfirming}\n        onClick={handleDeactivateProfile}\n        mb=\"8px\"\n      >\n        {TranslateString(999, 'Confirm')}\n      </Button>\n      <Button variant=\"text\" fullWidth onClick={onDismiss}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default PauseProfilePage\n"]},"metadata":{},"sourceType":"module"}