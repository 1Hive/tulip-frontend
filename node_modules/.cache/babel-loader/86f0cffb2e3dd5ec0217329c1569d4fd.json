{"ast":null,"code":"import { _ as _slicedToArray } from './slicedToArray-ad07b557.js';\nimport './unsupportedIterableToArray-aef68344.js';\nimport React, { useContext, useMemo } from 'react';\nimport './_commonjsHelpers-97e6d7b1.js';\nimport { P as PropTypes } from './index-097535f1.js';\nimport { _ as _defineProperty } from './defineProperty-a0480c32.js';\nimport './toConsumableArray-07f01111.js';\nimport _styled from 'styled-components';\nimport './getPrototypeOf-97db713a.js';\nimport './color.js';\nimport './components.js';\nimport './contains-component.js';\nimport { cssPx } from './css.js';\nimport './dayjs.min-e57fb69a.js';\nimport './date.js';\nimport './miscellaneous.js';\nimport './environment.js';\nimport './font.js';\nimport './math-e6d0e93a.js';\nimport './characters.js';\nimport './format.js';\nimport './keycodes.js';\nimport './url.js';\nimport './web3.js';\nimport { GU } from './constants.js';\nimport { BREAKPOINTS } from './breakpoints.js';\nimport './springs.js';\nimport './text-styles.js';\nimport { _ as _extends } from './extends-db4f0c26.js';\nimport { _ as _objectWithoutProperties } from './objectWithoutProperties-234758e1.js';\nimport './isObject-c2f08dfa.js';\nimport { u as useViewport } from './Viewport-2b81deab.js';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction getSizes(breakpoints) {\n  return Object.entries(breakpoints).filter(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 1),\n        name = _ref2[0];\n\n    return name !== 'min';\n  }).sort(function (a, b) {\n    return a[1] - b[1];\n  });\n} // Minimum margin around a layouts\n\n\nvar MIN_MARGIN = 3 * GU;\n\nfunction getLayoutSize(parentWidth, breakpoints) {\n  var sizes = getSizes(breakpoints);\n  var index = sizes.length;\n\n  while (index--) {\n    if (parentWidth >= sizes[index][1]) {\n      return [sizes[index][0], sizes[index][1] - (index === 0 ? 0 : MIN_MARGIN * 2)];\n    }\n  }\n\n  return sizes[0];\n}\n\nvar LayoutContext = React.createContext({});\n\nfunction useLayout() {\n  var _useContext = useContext(LayoutContext),\n      layoutWidth = _useContext.layoutWidth,\n      layoutName = _useContext.layoutName;\n\n  return {\n    layoutName: layoutName,\n    layoutWidth: layoutWidth,\n    // deprecated\n    name: layoutName,\n    width: layoutWidth\n  };\n}\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"Layout___StyledDiv\",\n  componentId: \"ah1dp2-0\"\n})([\"width:\", \";min-width:\", \"px;margin:0 auto;padding-bottom:\", \";\"], function (p) {\n  return p._css;\n}, function (p) {\n  return p._css2;\n}, function (p) {\n  return p._css3;\n});\n\nfunction Layout(_ref3) {\n  var breakpoints = _ref3.breakpoints,\n      children = _ref3.children,\n      paddingBottom = _ref3.paddingBottom,\n      parentWidth = _ref3.parentWidth,\n      props = _objectWithoutProperties(_ref3, [\"breakpoints\", \"children\", \"paddingBottom\", \"parentWidth\"]);\n\n  var _useViewport = useViewport(),\n      viewportWidth = _useViewport.width;\n\n  var mergedBreakpoints = useMemo(function () {\n    return _objectSpread({}, BREAKPOINTS, {}, breakpoints);\n  }, [breakpoints]); // If the parent width is not passed, use the viewport width.\n\n  var _useMemo = useMemo(function () {\n    return getLayoutSize(parentWidth === undefined ? viewportWidth : parentWidth, mergedBreakpoints);\n  }, [viewportWidth, parentWidth, mergedBreakpoints]),\n      _useMemo2 = _slicedToArray(_useMemo, 2),\n      layoutName = _useMemo2[0],\n      layoutWidth = _useMemo2[1];\n\n  return /*#__PURE__*/React.createElement(LayoutContext.Provider, {\n    value: {\n      layoutWidth: layoutWidth,\n      layoutName: layoutName\n    }\n  }, /*#__PURE__*/React.createElement(_StyledDiv, _extends({}, props, {\n    _css: layoutName === 'small' ? 'auto' : \"\".concat(layoutWidth, \"px\"),\n    _css2: mergedBreakpoints.min,\n    _css3: cssPx(paddingBottom)\n  }), children));\n}\n\nLayout.propTypes = {\n  breakpoints: PropTypes.shape({\n    min: PropTypes.number,\n    small: PropTypes.number,\n    medium: PropTypes.number,\n    large: PropTypes.number\n  }),\n  children: PropTypes.node,\n  paddingBottom: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  parentWidth: PropTypes.number\n};\nLayout.defaultProps = {\n  breakpoints: {},\n  paddingBottom: 3 * GU\n}; // Can be used to build an alternative Layout component\n\nLayout.__Context = LayoutContext;\nexport default Layout;\nexport { useLayout };","map":null,"metadata":{},"sourceType":"module"}