{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _objectSpread = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar pageResults = require('graph-results-pager');\n\nvar _require = require('bluebird'),\n    Promise = _require.Promise;\n\nvar _require2 = require('./constants'),\n    graphAPIEndpoints = _require2.graphAPIEndpoints;\n\nvar sushi = require('./queries/sushi');\n\nvar blocks = require('./queries/blocks');\n\nvar charts = require('./queries/charts');\n\nvar exchange = require('./queries/exchange');\n\nvar exchange_v1 = require('./queries/exchange_v1');\n\nvar masterchef = require('./queries/masterchef');\n\nvar bar = require('./queries/bar');\n\nvar maker = require('./queries/maker');\n\nvar timelock = require('./queries/timelock');\n\nvar lockup = require('./queries/lockup');\n\nvar utils = require('./utils');\n\nmodule.exports = {\n  pageResults: pageResults,\n  graphAPIEndpoints: graphAPIEndpoints,\n  sushi: sushi,\n  blocks: blocks,\n  charts: charts,\n  exchange: exchange,\n  exchange_v1: exchange_v1,\n  masterchef: masterchef,\n  bar: bar,\n  maker: maker,\n  timelock: timelock,\n  lockup: lockup,\n  utils: utils,\n  timeseries: function timeseries() {\n    var _arguments = arguments;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _ref, _ref$blocks, blocks, _ref$timestamps, timestamps, _ref$target, target, targetArguments;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _ref = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : {}, _ref$blocks = _ref.blocks, blocks = _ref$blocks === void 0 ? undefined : _ref$blocks, _ref$timestamps = _ref.timestamps, timestamps = _ref$timestamps === void 0 ? undefined : _ref$timestamps, _ref$target = _ref.target, target = _ref$target === void 0 ? undefined : _ref$target;\n              targetArguments = _arguments.length > 1 ? _arguments[1] : undefined;\n\n              if (target) {\n                _context3.next = 4;\n                break;\n              }\n\n              throw new Error(\"sushi-data: Target function undefined\");\n\n            case 4:\n              if (!(!blocks && !timestamps)) {\n                _context3.next = 6;\n                break;\n              }\n\n              throw new Error(\"sushi-data: Timeframe undefined\");\n\n            case 6:\n              if (!blocks) {\n                _context3.next = 10;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", Promise.map(blocks, /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(block) {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.t0 = block;\n                          _context.next = 3;\n                          return target(_objectSpread({\n                            block: block\n                          }, targetArguments));\n\n                        case 3:\n                          _context.t1 = _context.sent;\n                          return _context.abrupt(\"return\", {\n                            block: _context.t0,\n                            data: _context.t1\n                          });\n\n                        case 5:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x) {\n                  return _ref2.apply(this, arguments);\n                };\n              }()));\n\n            case 10:\n              return _context3.abrupt(\"return\", Promise.map(timestamps, /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(timestamp) {\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          _context2.t0 = timestamp;\n                          _context2.next = 3;\n                          return target(_objectSpread({\n                            timestamp: timestamp\n                          }, targetArguments));\n\n                        case 3:\n                          _context2.t1 = _context2.sent;\n                          return _context2.abrupt(\"return\", {\n                            timestamp: _context2.t0,\n                            data: _context2.t1\n                          });\n\n                        case 5:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n\n                return function (_x2) {\n                  return _ref3.apply(this, arguments);\n                };\n              }()));\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  }\n};","map":null,"metadata":{},"sourceType":"script"}