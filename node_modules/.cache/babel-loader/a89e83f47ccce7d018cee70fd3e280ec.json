{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Teams = void 0;\n\nconst core_1 = require(\"../core\");\n\nclass Teams extends core_1.CrowdinApi {\n  /**\n   * @param projectId project identifier\n   * @param request request body\n   */\n  addTeamToProject(projectId, request) {\n    const url = `${this.url}/projects/${projectId}/teams`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param limit maximum number of items to retrieve (default 25)\n   * @param offset starting offset in the collection (default 0)\n   */\n\n\n  listTeams(limit, offset) {\n    const url = `${this.url}/teams`;\n    return this.getList(url, limit, offset);\n  }\n  /**\n   * @param request request body\n   */\n\n\n  addTeam(request) {\n    const url = `${this.url}/teams`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param teamId team identifier\n   */\n\n\n  getTeam(teamId) {\n    const url = `${this.url}/teams/${teamId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param teamId team identifier\n   */\n\n\n  deleteTeam(teamId) {\n    const url = `${this.url}/teams/${teamId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param teamId team identifier\n   * @param request request body\n   */\n\n\n  editTeam(teamId, request) {\n    const url = `${this.url}/teams/${teamId}`;\n    return this.patch(url, request, this.defaultConfig());\n  }\n  /**\n   * @param teamId team identifier\n   * @param limit maximum number of items to retrieve (default 25)\n   * @param offset starting offset in the collection (default 0)\n   */\n\n\n  teamMembersList(teamId, limit, offset) {\n    const url = `${this.url}/teams/${teamId}/members`;\n    return this.getList(url, limit, offset);\n  }\n  /**\n   * @param teamId team identifier\n   * @param request request body\n   */\n\n\n  addTeamMembers(teamId, request) {\n    const url = `${this.url}/teams/${teamId}/members`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param teamId team identifier\n   */\n\n\n  deleteAllTeamMembers(teamId) {\n    const url = `${this.url}/teams/${teamId}/members`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param teamId team identifier\n   * @param memberId member identifier\n   */\n\n\n  deleteTeamMember(teamId, memberId) {\n    const url = `${this.url}/teams/${teamId}/members/${memberId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n\n}\n\nexports.Teams = Teams;","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/node_modules/@crowdin/crowdin-api-client/out/teams/index.js"],"names":["Object","defineProperty","exports","value","Teams","core_1","require","CrowdinApi","addTeamToProject","projectId","request","url","post","defaultConfig","listTeams","limit","offset","getList","addTeam","getTeam","teamId","get","deleteTeam","delete","editTeam","patch","teamMembersList","addTeamMembers","deleteAllTeamMembers","deleteTeamMember","memberId"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,KAAR,GAAgB,KAAK,CAArB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AACA,MAAMF,KAAN,SAAoBC,MAAM,CAACE,UAA3B,CAAsC;AAClC;AACJ;AACA;AACA;AACIC,EAAAA,gBAAgB,CAACC,SAAD,EAAYC,OAAZ,EAAqB;AACjC,UAAMC,GAAG,GAAI,GAAE,KAAKA,GAAI,aAAYF,SAAU,QAA9C;AACA,WAAO,KAAKG,IAAL,CAAUD,GAAV,EAAeD,OAAf,EAAwB,KAAKG,aAAL,EAAxB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIC,EAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACrB,UAAML,GAAG,GAAI,GAAE,KAAKA,GAAI,QAAxB;AACA,WAAO,KAAKM,OAAL,CAAaN,GAAb,EAAkBI,KAAlB,EAAyBC,MAAzB,CAAP;AACH;AACD;AACJ;AACA;;;AACIE,EAAAA,OAAO,CAACR,OAAD,EAAU;AACb,UAAMC,GAAG,GAAI,GAAE,KAAKA,GAAI,QAAxB;AACA,WAAO,KAAKC,IAAL,CAAUD,GAAV,EAAeD,OAAf,EAAwB,KAAKG,aAAL,EAAxB,CAAP;AACH;AACD;AACJ;AACA;;;AACIM,EAAAA,OAAO,CAACC,MAAD,EAAS;AACZ,UAAMT,GAAG,GAAI,GAAE,KAAKA,GAAI,UAASS,MAAO,EAAxC;AACA,WAAO,KAAKC,GAAL,CAASV,GAAT,EAAc,KAAKE,aAAL,EAAd,CAAP;AACH;AACD;AACJ;AACA;;;AACIS,EAAAA,UAAU,CAACF,MAAD,EAAS;AACf,UAAMT,GAAG,GAAI,GAAE,KAAKA,GAAI,UAASS,MAAO,EAAxC;AACA,WAAO,KAAKG,MAAL,CAAYZ,GAAZ,EAAiB,KAAKE,aAAL,EAAjB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIW,EAAAA,QAAQ,CAACJ,MAAD,EAASV,OAAT,EAAkB;AACtB,UAAMC,GAAG,GAAI,GAAE,KAAKA,GAAI,UAASS,MAAO,EAAxC;AACA,WAAO,KAAKK,KAAL,CAAWd,GAAX,EAAgBD,OAAhB,EAAyB,KAAKG,aAAL,EAAzB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIa,EAAAA,eAAe,CAACN,MAAD,EAASL,KAAT,EAAgBC,MAAhB,EAAwB;AACnC,UAAML,GAAG,GAAI,GAAE,KAAKA,GAAI,UAASS,MAAO,UAAxC;AACA,WAAO,KAAKH,OAAL,CAAaN,GAAb,EAAkBI,KAAlB,EAAyBC,MAAzB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIW,EAAAA,cAAc,CAACP,MAAD,EAASV,OAAT,EAAkB;AAC5B,UAAMC,GAAG,GAAI,GAAE,KAAKA,GAAI,UAASS,MAAO,UAAxC;AACA,WAAO,KAAKR,IAAL,CAAUD,GAAV,EAAeD,OAAf,EAAwB,KAAKG,aAAL,EAAxB,CAAP;AACH;AACD;AACJ;AACA;;;AACIe,EAAAA,oBAAoB,CAACR,MAAD,EAAS;AACzB,UAAMT,GAAG,GAAI,GAAE,KAAKA,GAAI,UAASS,MAAO,UAAxC;AACA,WAAO,KAAKG,MAAL,CAAYZ,GAAZ,EAAiB,KAAKE,aAAL,EAAjB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIgB,EAAAA,gBAAgB,CAACT,MAAD,EAASU,QAAT,EAAmB;AAC/B,UAAMnB,GAAG,GAAI,GAAE,KAAKA,GAAI,UAASS,MAAO,YAAWU,QAAS,EAA5D;AACA,WAAO,KAAKP,MAAL,CAAYZ,GAAZ,EAAiB,KAAKE,aAAL,EAAjB,CAAP;AACH;;AA7EiC;;AA+EtCX,OAAO,CAACE,KAAR,GAAgBA,KAAhB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Teams = void 0;\nconst core_1 = require(\"../core\");\nclass Teams extends core_1.CrowdinApi {\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    addTeamToProject(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/teams`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    listTeams(limit, offset) {\n        const url = `${this.url}/teams`;\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param request request body\n     */\n    addTeam(request) {\n        const url = `${this.url}/teams`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param teamId team identifier\n     */\n    getTeam(teamId) {\n        const url = `${this.url}/teams/${teamId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param teamId team identifier\n     */\n    deleteTeam(teamId) {\n        const url = `${this.url}/teams/${teamId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param teamId team identifier\n     * @param request request body\n     */\n    editTeam(teamId, request) {\n        const url = `${this.url}/teams/${teamId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param teamId team identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    teamMembersList(teamId, limit, offset) {\n        const url = `${this.url}/teams/${teamId}/members`;\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param teamId team identifier\n     * @param request request body\n     */\n    addTeamMembers(teamId, request) {\n        const url = `${this.url}/teams/${teamId}/members`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param teamId team identifier\n     */\n    deleteAllTeamMembers(teamId) {\n        const url = `${this.url}/teams/${teamId}/members`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param teamId team identifier\n     * @param memberId member identifier\n     */\n    deleteTeamMember(teamId, memberId) {\n        const url = `${this.url}/teams/${teamId}/members/${memberId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n}\nexports.Teams = Teams;\n"]},"metadata":{},"sourceType":"script"}