{"ast":null,"code":"var _jsxFileName = \"/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Profile/components/EditProfileModal/StartView.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport BigNumber from 'bignumber.js';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport { Button, Flex, Text } from '@pancakeswap-libs/uikit';\nimport { getFullDisplayBalance } from 'utils/formatBalance';\nimport { getPancakeProfileAddress } from 'utils/addressHelpers';\nimport { useCake } from 'hooks/useContract';\nimport useI18n from 'hooks/useI18n';\nimport { useProfile } from 'state/hooks';\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts';\nimport useHasCakeBalance from 'hooks/useHasCakeBalance';\nimport ProfileAvatar from '../ProfileAvatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DangerOutline = styled(Button).attrs({\n  variant: 'secondary',\n  fullWidth: true\n})`\n  border-color: ${({\n  theme\n}) => theme.colors.failure};\n  color: ${({\n  theme\n}) => theme.colors.failure};\n  margin-bottom: 24px;\n\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\n    border-color: ${({\n  theme\n}) => theme.colors.failure};\n    opacity: 0.8;\n  }\n`;\n_c = DangerOutline;\n\nconst StartPage = ({\n  goToApprove,\n  goToChange,\n  goToRemove,\n  onDismiss\n}) => {\n  _s();\n\n  const [needsApproval, setNeedsApproval] = useState(null);\n  const {\n    profile\n  } = useProfile();\n  const {\n    numberCakeToUpdate,\n    numberCakeToReactivate\n  } = useGetProfileCosts();\n  const hasMinimumCakeRequired = useHasCakeBalance(profile.isActive ? numberCakeToUpdate : numberCakeToReactivate);\n  const TranslateString = useI18n();\n  const {\n    account\n  } = useWallet();\n  const cakeContract = useCake();\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate;\n  /**\n   * Check if the wallet has the required CAKE allowance to change their profile pic or reactivate\n   * If they don't, we send them to the approval screen first\n   */\n\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      const response = await cakeContract.methods.allowance(account, getPancakeProfileAddress()).call();\n      const currentAllowance = new BigNumber(response);\n      setNeedsApproval(currentAllowance.lt(cost));\n    };\n\n    if (account) {\n      checkApprovalStatus();\n    }\n  }, [account, cost, setNeedsApproval, cakeContract]);\n\n  if (!profile) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(ProfileAvatar, {\n      profile: profile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      style: {\n        height: '48px'\n      },\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        as: \"p\",\n        color: \"failure\",\n        children: !hasMinimumCakeRequired && TranslateString(999, `${getFullDisplayBalance(numberCakeToUpdate)} CAKE required to change profile pic`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), profile.isActive ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        mb: \"8px\",\n        onClick: needsApproval === true ? goToApprove : goToChange,\n        disabled: !hasMinimumCakeRequired || needsApproval === null,\n        children: TranslateString(999, 'Change Profile Pic')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DangerOutline, {\n        onClick: goToRemove,\n        children: TranslateString(999, 'Remove Profile Pic')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n      fullWidth: true,\n      mb: \"8px\",\n      onClick: needsApproval === true ? goToApprove : goToChange,\n      disabled: !hasMinimumCakeRequired || needsApproval === null,\n      children: TranslateString(999, 'Reactivate Profile')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"text\",\n      fullWidth: true,\n      onClick: onDismiss,\n      children: TranslateString(999, 'Close Window')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StartPage, \"fZSQZv5QYoUnK2pH/rsBlq93GSY=\", false, function () {\n  return [useProfile, useGetProfileCosts, useHasCakeBalance, useI18n, useWallet, useCake];\n});\n\n_c2 = StartPage;\nexport default StartPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DangerOutline\");\n$RefreshReg$(_c2, \"StartPage\");","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Profile/components/EditProfileModal/StartView.tsx"],"names":["React","useEffect","useState","styled","BigNumber","useWallet","Button","Flex","Text","getFullDisplayBalance","getPancakeProfileAddress","useCake","useI18n","useProfile","useGetProfileCosts","useHasCakeBalance","ProfileAvatar","DangerOutline","attrs","variant","fullWidth","theme","colors","failure","StartPage","goToApprove","goToChange","goToRemove","onDismiss","needsApproval","setNeedsApproval","profile","numberCakeToUpdate","numberCakeToReactivate","hasMinimumCakeRequired","isActive","TranslateString","account","cakeContract","cost","checkApprovalStatus","response","methods","allowance","call","currentAllowance","lt","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Button, Flex, Text, InjectedModalProps } from '@pancakeswap-libs/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { useCake } from 'hooks/useContract'\nimport useI18n from 'hooks/useI18n'\nimport { useProfile } from 'state/hooks'\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport { UseEditProfileResponse } from './reducer'\nimport ProfileAvatar from '../ProfileAvatar'\n\ninterface StartPageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n  goToRemove: UseEditProfileResponse['goToRemove']\n  goToApprove: UseEditProfileResponse['goToApprove']\n}\n\nconst DangerOutline = styled(Button).attrs({ variant: 'secondary', fullWidth: true })`\n  border-color: ${({ theme }) => theme.colors.failure};\n  color: ${({ theme }) => theme.colors.failure};\n  margin-bottom: 24px;\n\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\n    border-color: ${({ theme }) => theme.colors.failure};\n    opacity: 0.8;\n  }\n`\n\nconst StartPage: React.FC<StartPageProps> = ({ goToApprove, goToChange, goToRemove, onDismiss }) => {\n  const [needsApproval, setNeedsApproval] = useState(null)\n  const { profile } = useProfile()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const hasMinimumCakeRequired = useHasCakeBalance(profile.isActive ? numberCakeToUpdate : numberCakeToReactivate)\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const cakeContract = useCake()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  /**\n   * Check if the wallet has the required CAKE allowance to change their profile pic or reactivate\n   * If they don't, we send them to the approval screen first\n   */\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      const response = await cakeContract.methods.allowance(account, getPancakeProfileAddress()).call()\n      const currentAllowance = new BigNumber(response)\n      setNeedsApproval(currentAllowance.lt(cost))\n    }\n\n    if (account) {\n      checkApprovalStatus()\n    }\n  }, [account, cost, setNeedsApproval, cakeContract])\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n      <ProfileAvatar profile={profile} />\n      <Flex alignItems=\"center\" style={{ height: '48px' }} justifyContent=\"center\">\n        <Text as=\"p\" color=\"failure\">\n          {!hasMinimumCakeRequired &&\n            TranslateString(999, `${getFullDisplayBalance(numberCakeToUpdate)} CAKE required to change profile pic`)}\n        </Text>\n      </Flex>\n      {profile.isActive ? (\n        <>\n          <Button\n            fullWidth\n            mb=\"8px\"\n            onClick={needsApproval === true ? goToApprove : goToChange}\n            disabled={!hasMinimumCakeRequired || needsApproval === null}\n          >\n            {TranslateString(999, 'Change Profile Pic')}\n          </Button>\n          <DangerOutline onClick={goToRemove}>{TranslateString(999, 'Remove Profile Pic')}</DangerOutline>\n        </>\n      ) : (\n        <Button\n          fullWidth\n          mb=\"8px\"\n          onClick={needsApproval === true ? goToApprove : goToChange}\n          disabled={!hasMinimumCakeRequired || needsApproval === null}\n        >\n          {TranslateString(999, 'Reactivate Profile')}\n        </Button>\n      )}\n      <Button variant=\"text\" fullWidth onClick={onDismiss}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default StartPage\n"]},"metadata":{},"sourceType":"module"}