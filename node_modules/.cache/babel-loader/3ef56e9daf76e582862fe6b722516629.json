{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar slicedToArray = require('./slicedToArray-a8a77f0e.js');\n\nrequire('./unsupportedIterableToArray-f175acfa.js');\n\nvar React = require('react');\n\nrequire('./_commonjsHelpers-1b94f6bc.js');\n\nvar index = require('./index-46d0e707.js');\n\nrequire('./defineProperty-3cad0327.js');\n\nrequire('./toConsumableArray-cc0d28a9.js');\n\nrequire('styled-components');\n\nrequire('./getPrototypeOf-55c9e80c.js');\n\nrequire('./color.js');\n\nrequire('./css.js');\n\nrequire('./miscellaneous.js');\n\nrequire('./environment.js');\n\nrequire('./font.js');\n\nrequire('./keycodes.js');\n\nrequire('./url.js');\n\nrequire('./constants.js');\n\nrequire('./breakpoints.js');\n\nrequire('./springs.js');\n\nrequire('./text-styles.js');\n\nrequire('./theme-dark.js');\n\nrequire('./theme-light.js');\n\nrequire('./Theme.js');\n\nrequire('./extends-023d783e.js');\n\nrequire('./objectWithoutProperties-c6d3675c.js');\n\nrequire('./index-4def0554.js');\n\nrequire('./_baseGetTag-42b4dd3e.js');\n\nrequire('./Viewport-819c53c9.js');\n\nrequire('./Layout.js');\n\nrequire('./Box.js');\n\nrequire('./FocusVisible.js');\n\nrequire('./ButtonBase.js');\n\nrequire('./PaginationItem.js');\n\nrequire('./IconPropTypes-12cd7567.js');\n\nrequire('./IconDown.js');\n\nrequire('./IconEllipsis.js');\n\nrequire('./IconUp.js');\n\nrequire('./PaginationSeparator.js');\n\nrequire('./Pagination.js');\n\nrequire('./objectWithoutPropertiesLoose-1af20ad0.js');\n\nrequire('react-dom');\n\nrequire('./web-7cbdbd84.js');\n\nrequire('./Checkbox.js');\n\nrequire('./Button.js');\n\nrequire('./ButtonIcon.js');\n\nrequire('./ToggleButton.js');\n\nrequire('./OpenedSurfaceBorder.js');\n\nrequire('./TableView.js');\n\nrequire('./ListView.js');\n\nrequire('./getDisplayName-7f913e84.js');\n\nrequire('./PublicUrl-7d4b6d6d.js');\n\nrequire('./LoadingRing.js');\n\nrequire('./Link.js');\n\nrequire('./EmptyState.js');\n\nvar _DataView = require('./DataView.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\nvar Accordion = /*#__PURE__*/React__default['default'].memo(function Accordion(_ref) {\n  var items = _ref.items,\n      className = _ref.className,\n      style = _ref.style;\n  var fields = React.useMemo(function () {\n    return [null];\n  }, []);\n  var renderEntry = React.useCallback(function (_ref2) {\n    var _ref3 = slicedToArray.slicedToArray(_ref2, 1),\n        row = _ref3[0];\n\n    return [row];\n  }, []);\n  var renderEntryExpansion = React.useCallback(function (_ref4) {\n    var _ref5 = slicedToArray.slicedToArray(_ref4, 2),\n        _ = _ref5[0],\n        expansion = _ref5[1];\n\n    return /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, expansion);\n  }, []);\n  return /*#__PURE__*/React__default['default'].createElement(_DataView.default, {\n    className: className,\n    entries: items,\n    entriesPerPage: -1,\n    fields: fields,\n    renderEntry: renderEntry,\n    renderEntryExpansion: renderEntryExpansion,\n    style: style\n  });\n}); // className and style are passed manually to ensure users don’t rely on extra\n// props to be passed to DataView. The reason is because Accordion is going to\n// stop consuming DataView in the future, and would instead share a common\n// “expandable” component with it.\n\nAccordion.propTypes = {\n  className: index.propTypes.string,\n  items: index.propTypes.arrayOf(index.propTypes.arrayOf(index.propTypes.node)).isRequired,\n  style: index.propTypes.object\n};\nexports.default = Accordion;","map":{"version":3,"sources":["../src/components/Accordion/Accordion.js"],"names":["Accordion","items","className","style","fields","useMemo","renderEntry","useCallback","row","renderEntryExpansion","_","expansion","React","DataView","PropTypes","object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAIMA,SAAS,GAAA,aAAG,cAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAW,SAAA,SAAA,CAAA,IAAA,EAAgD;AAAA,MAA3BC,KAA2B,GAAA,IAAA,CAA3BA,KAA2B;AAAA,MAApBC,SAAoB,GAAA,IAAA,CAApBA,SAAoB;AAAA,MAATC,KAAS,GAAA,IAAA,CAATA,KAAS;AAC3E,MAAMC,MAAM,GAAGC,KAAAA,CAAAA,OAAAA,CAAQ,YAAA;AAAA,WAAM,CAAN,IAAM,CAAN;AAAD,GAAPA,EAAf,EAAeA,CAAf;AACA,MAAMC,WAAW,GAAGC,KAAAA,CAAAA,WAAAA,CAAY,UAAA,KAAA,EAAA;AAAA,QAAA,KAAA,GAAA,aAAA,CAAA,aAAA,CAAA,KAAA,EAAA,CAAA,CAAA;AAAA,QAAEC,GAAF,GAAA,KAAA,CAAA,CAAA,CAAA;;AAAA,WAAW,CAAX,GAAW,CAAX;AAAD,GAAXD,EAApB,EAAoBA,CAApB;AACA,MAAME,oBAAoB,GAAGF,KAAAA,CAAAA,WAAAA,CAC3B,UAAA,KAAA,EAAA;AAAA,QAAA,KAAA,GAAA,aAAA,CAAA,aAAA,CAAA,KAAA,EAAA,CAAA,CAAA;AAAA,QAAEG,CAAF,GAAA,KAAA,CAAA,CAAA,CAAA;AAAA,QAAKC,SAAL,GAAA,KAAA,CAAA,CAAA,CAAA;;AAAA,WAAA,aAAoBC,cAAAA,CAAAA,SAAAA,CAAAA,CAAAA,aAAAA,CAAAA,cAAAA,CAAAA,SAAAA,CAAAA,CAAAA,QAAAA,EAAAA,IAAAA,EAApB,SAAoBA,CAApB;AADsC,GAAXL,EAA7B,EAA6BA,CAA7B;AAKA,SAAA,aACE,cAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAACM,SAAAA,CAAD,OAAA,EAAA;AACE,IAAA,SAAS,EADX,SAAA;AAEE,IAAA,OAAO,EAFT,KAAA;AAGE,IAAA,cAAc,EAAE,CAHlB,CAAA;AAIE,IAAA,MAAM,EAJR,MAAA;AAKE,IAAA,WAAW,EALb,WAAA;AAME,IAAA,oBAAoB,EANtB,oBAAA;AAOE,IAAA,KAAK,EAAEV;AAPT,GAAA,CADF;AARgB,CAAA,C,EAAA;AAsBlB;AACA;AACA;;AACAH,SAAS,CAATA,SAAAA,GAAsB;AACpBE,EAAAA,SAAS,EAAEY,KAAAA,CAAAA,SAAAA,CADS,MAAA;AAEpBb,EAAAA,KAAK,EAAEa,KAAAA,CAAAA,SAAAA,CAAAA,OAAAA,CAAkBA,KAAAA,CAAAA,SAAAA,CAAAA,OAAAA,CAAkBA,KAAAA,CAAAA,SAAAA,CAApCA,IAAkBA,CAAlBA,EAFa,UAAA;AAGpBX,EAAAA,KAAK,EAAEW,KAAAA,CAAAA,SAAAA,CAAUC;AAHG,CAAtBf","sourcesContent":["import React, { useCallback, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport DataView from '../DataView/DataView'\n\nconst Accordion = React.memo(function Accordion({ items, className, style }) {\n  const fields = useMemo(() => [null], [])\n  const renderEntry = useCallback(([row]) => [row], [])\n  const renderEntryExpansion = useCallback(\n    ([_, expansion]) => <>{expansion}</>,\n    []\n  )\n\n  return (\n    <DataView\n      className={className}\n      entries={items}\n      entriesPerPage={-1}\n      fields={fields}\n      renderEntry={renderEntry}\n      renderEntryExpansion={renderEntryExpansion}\n      style={style}\n    />\n  )\n})\n\n// className and style are passed manually to ensure users don’t rely on extra\n// props to be passed to DataView. The reason is because Accordion is going to\n// stop consuming DataView in the future, and would instead share a common\n// “expandable” component with it.\nAccordion.propTypes = {\n  className: PropTypes.string,\n  items: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.node)).isRequired,\n  style: PropTypes.object,\n}\n\nexport default Accordion\n"]},"metadata":{},"sourceType":"script"}