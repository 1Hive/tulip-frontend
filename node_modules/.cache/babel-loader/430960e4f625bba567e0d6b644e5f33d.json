{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Wantlist = require('../types/wantlist');\n\nvar Ledger = /*#__PURE__*/function () {\n  function Ledger(peerId) {\n    _classCallCheck(this, Ledger);\n\n    this.partner = peerId;\n    this.wantlist = new Wantlist();\n    this.exchangeCount = 0;\n    this.sentToPeer = new Map();\n    this.accounting = {\n      bytesSent: 0,\n      bytesRecv: 0\n    };\n  }\n\n  _createClass(Ledger, [{\n    key: \"sentBytes\",\n    value: function sentBytes(n) {\n      this.exchangeCount++;\n      this.lastExchange = new Date().getTime();\n      this.accounting.bytesSent += n;\n    }\n  }, {\n    key: \"receivedBytes\",\n    value: function receivedBytes(n) {\n      this.exchangeCount++;\n      this.lastExchange = new Date().getTime();\n      this.accounting.bytesRecv += n;\n    }\n  }, {\n    key: \"wants\",\n    value: function wants(cid, priority, wantType) {\n      this.wantlist.add(cid, priority, wantType);\n    }\n  }, {\n    key: \"cancelWant\",\n    value: function cancelWant(cid) {\n      this.wantlist.remove(cid);\n    }\n  }, {\n    key: \"wantlistContains\",\n    value: function wantlistContains(cid) {\n      return this.wantlist.contains(cid);\n    }\n  }, {\n    key: \"debtRatio\",\n    value: function debtRatio() {\n      return this.accounting.bytesSent / (this.accounting.bytesRecv + 1); // +1 is to prevent division by zero\n    }\n  }]);\n\n  return Ledger;\n}();\n\nmodule.exports = Ledger;","map":null,"metadata":{},"sourceType":"script"}