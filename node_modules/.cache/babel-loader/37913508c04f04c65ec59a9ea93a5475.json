{"ast":null,"code":"// memoryStorage is a useful last fallback to ensure that the store\n// is functions (meaning store.get(), store.set(), etc will all function).\n// However, stored values will not persist when the browser navigates to\n// a new page or reloads the current page.\nmodule.exports = {\n  name: 'memoryStorage',\n  read: read,\n  write: write,\n  each: each,\n  remove: remove,\n  clearAll: clearAll\n};\nvar memoryStorage = {};\n\nfunction read(key) {\n  return memoryStorage[key];\n}\n\nfunction write(key, data) {\n  memoryStorage[key] = data;\n}\n\nfunction each(callback) {\n  for (var key in memoryStorage) {\n    if (memoryStorage.hasOwnProperty(key)) {\n      callback(memoryStorage[key], key);\n    }\n  }\n}\n\nfunction remove(key) {\n  delete memoryStorage[key];\n}\n\nfunction clearAll(key) {\n  memoryStorage = {};\n}","map":null,"metadata":{},"sourceType":"script"}