{"ast":null,"code":"var _objectSpread = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _taggedTemplateLiteral = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\n\nvar pageResults = require('graph-results-pager');\n\nvar _require = require('graphql-request'),\n    request = _require.request,\n    gql = _require.gql;\n\nvar _require2 = require('./../constants'),\n    graphAPIEndpoints = _require2.graphAPIEndpoints,\n    chefAddress = _require2.chefAddress,\n    TWENTY_FOUR_HOURS = _require2.TWENTY_FOUR_HOURS;\n\nvar _require3 = require('./../utils'),\n    timestampToBlock = _require3.timestampToBlock,\n    getAverageBlockTime = _require3.getAverageBlockTime;\n\nvar _require4 = require('./exchange'),\n    exchangePairs = _require4.pairs;\n\nvar _require5 = require('./sushi'),\n    sushiPriceUSD = _require5.priceUSD;\n\nmodule.exports = {\n  info: function info() {\n    var _arguments = arguments;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _ref, _ref$block, block, _ref$timestamp, timestamp, result;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _ref = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : {}, _ref$block = _ref.block, block = _ref$block === void 0 ? undefined : _ref$block, _ref$timestamp = _ref.timestamp, timestamp = _ref$timestamp === void 0 ? undefined : _ref$timestamp;\n\n              if (!block) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.t0 = block;\n              _context.next = 13;\n              break;\n\n            case 5:\n              if (!timestamp) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 8;\n              return timestampToBlock(timestamp);\n\n            case 8:\n              _context.t1 = _context.sent;\n              _context.next = 12;\n              break;\n\n            case 11:\n              _context.t1 = undefined;\n\n            case 12:\n              _context.t0 = _context.t1;\n\n            case 13:\n              block = _context.t0;\n              block = block ? \"block: { number: \".concat(block, \" }\") : \"\";\n              _context.next = 17;\n              return request(graphAPIEndpoints.masterchef, gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"{\\n                    masterChef(id: \\\"\", \"\\\", \", \") {\\n                        \", \"\\n                    }\\n                }\"])), chefAddress, block, _info.properties.toString()));\n\n            case 17:\n              result = _context.sent;\n              return _context.abrupt(\"return\", _info.callback(result.masterChef));\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  pool: function pool() {\n    var _arguments2 = arguments;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _ref2, _ref2$block, block, _ref2$timestamp, timestamp, _ref2$pool_id, pool_id, _ref2$pool_address, pool_address, result;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _ref2 = _arguments2.length > 0 && _arguments2[0] !== undefined ? _arguments2[0] : {}, _ref2$block = _ref2.block, block = _ref2$block === void 0 ? undefined : _ref2$block, _ref2$timestamp = _ref2.timestamp, timestamp = _ref2$timestamp === void 0 ? undefined : _ref2$timestamp, _ref2$pool_id = _ref2.pool_id, pool_id = _ref2$pool_id === void 0 ? undefined : _ref2$pool_id, _ref2$pool_address = _ref2.pool_address, pool_address = _ref2$pool_address === void 0 ? undefined : _ref2$pool_address;\n\n              if (!(!pool_id && !pool_address)) {\n                _context2.next = 3;\n                break;\n              }\n\n              throw new Error(\"sushi-data: Pool ID / Address undefined\");\n\n            case 3:\n              if (!block) {\n                _context2.next = 7;\n                break;\n              }\n\n              _context2.t0 = block;\n              _context2.next = 15;\n              break;\n\n            case 7:\n              if (!timestamp) {\n                _context2.next = 13;\n                break;\n              }\n\n              _context2.next = 10;\n              return timestampToBlock(timestamp);\n\n            case 10:\n              _context2.t1 = _context2.sent;\n              _context2.next = 14;\n              break;\n\n            case 13:\n              _context2.t1 = undefined;\n\n            case 14:\n              _context2.t0 = _context2.t1;\n\n            case 15:\n              block = _context2.t0;\n              block = block ? \"block: { number: \".concat(block, \" }\") : \"\";\n\n              if (!pool_id) {\n                _context2.next = 23;\n                break;\n              }\n\n              _context2.next = 20;\n              return request(graphAPIEndpoints.masterchef, gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"{\\n                        pool(id: \", \", \", \") {\\n                            \", \"\\n                        }\\n                    }\"])), pool_id, block, _pools.properties.toString()));\n\n            case 20:\n              result = _context2.sent;\n              _context2.next = 26;\n              break;\n\n            case 23:\n              _context2.next = 25;\n              return request(graphAPIEndpoints.masterchef, gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"{\\n                        pools(first: 1, where: {pair: \\\"\", \"\\\"}, \", \") {\\n                            \", \"\\n                        }\\n                    }\"])), pool_address.toLowerCase(), block, _pools.properties.toString()));\n\n            case 25:\n              result = _context2.sent;\n\n            case 26:\n              return _context2.abrupt(\"return\", _pools.callback(pool_id ? [result.pool] : result.pools)[0]);\n\n            case 27:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  pools: function pools() {\n    var _arguments3 = arguments;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _ref3, _ref3$block, block, _ref3$timestamp, timestamp;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _ref3 = _arguments3.length > 0 && _arguments3[0] !== undefined ? _arguments3[0] : {}, _ref3$block = _ref3.block, block = _ref3$block === void 0 ? undefined : _ref3$block, _ref3$timestamp = _ref3.timestamp, timestamp = _ref3$timestamp === void 0 ? undefined : _ref3$timestamp;\n              _context3.t0 = pageResults;\n              _context3.t1 = graphAPIEndpoints.masterchef;\n\n              if (!block) {\n                _context3.next = 7;\n                break;\n              }\n\n              _context3.t2 = {\n                number: block\n              };\n              _context3.next = 16;\n              break;\n\n            case 7:\n              if (!timestamp) {\n                _context3.next = 14;\n                break;\n              }\n\n              _context3.next = 10;\n              return timestampToBlock(timestamp);\n\n            case 10:\n              _context3.t4 = _context3.sent;\n              _context3.t3 = {\n                number: _context3.t4\n              };\n              _context3.next = 15;\n              break;\n\n            case 14:\n              _context3.t3 = undefined;\n\n            case 15:\n              _context3.t2 = _context3.t3;\n\n            case 16:\n              _context3.t5 = _context3.t2;\n              _context3.t6 = {\n                block: _context3.t5\n              };\n              _context3.t7 = _pools.properties;\n              _context3.t8 = {\n                entity: 'pools',\n                selection: _context3.t6,\n                properties: _context3.t7\n              };\n              _context3.t9 = {\n                api: _context3.t1,\n                query: _context3.t8\n              };\n              return _context3.abrupt(\"return\", (0, _context3.t0)(_context3.t9).then(function (results) {\n                return _pools.callback(results);\n              }).catch(function (err) {\n                return console.log(err);\n              }));\n\n            case 22:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  stakedValue: function stakedValue() {\n    var _arguments4 = arguments;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var _ref4, _ref4$block, block, _ref4$timestamp, timestamp, _ref4$token_address, token_address, result;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _ref4 = _arguments4.length > 0 && _arguments4[0] !== undefined ? _arguments4[0] : {}, _ref4$block = _ref4.block, block = _ref4$block === void 0 ? undefined : _ref4$block, _ref4$timestamp = _ref4.timestamp, timestamp = _ref4$timestamp === void 0 ? undefined : _ref4$timestamp, _ref4$token_address = _ref4.token_address, token_address = _ref4$token_address === void 0 ? undefined : _ref4$token_address;\n\n              if (token_address) {\n                _context4.next = 3;\n                break;\n              }\n\n              throw new Error(\"sushi-data: Token address undefined\");\n\n            case 3:\n              if (!block) {\n                _context4.next = 7;\n                break;\n              }\n\n              _context4.t0 = block;\n              _context4.next = 15;\n              break;\n\n            case 7:\n              if (!timestamp) {\n                _context4.next = 13;\n                break;\n              }\n\n              _context4.next = 10;\n              return timestampToBlock(timestamp);\n\n            case 10:\n              _context4.t1 = _context4.sent;\n              _context4.next = 14;\n              break;\n\n            case 13:\n              _context4.t1 = undefined;\n\n            case 14:\n              _context4.t0 = _context4.t1;\n\n            case 15:\n              block = _context4.t0;\n              block = block ? \"block: { number: \".concat(block, \" }\") : \"\";\n              _context4.next = 19;\n              return request(graphAPIEndpoints.exchange, gql(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"{\\n                    liquidityPosition(id: \\\"\", \"-\", \"\\\", \", \") {\\n                        \", \"\\n                    }\\n                }\"])), token_address.toLowerCase(), chefAddress, block, _stakedValue.properties.toString()));\n\n            case 19:\n              result = _context4.sent;\n              return _context4.abrupt(\"return\", _stakedValue.callback(result.liquidityPosition));\n\n            case 21:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  },\n  user: function user() {\n    var _arguments5 = arguments;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var _ref5, _ref5$block, block, _ref5$timestamp, timestamp, _ref5$user_address, user_address;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _ref5 = _arguments5.length > 0 && _arguments5[0] !== undefined ? _arguments5[0] : {}, _ref5$block = _ref5.block, block = _ref5$block === void 0 ? undefined : _ref5$block, _ref5$timestamp = _ref5.timestamp, timestamp = _ref5$timestamp === void 0 ? undefined : _ref5$timestamp, _ref5$user_address = _ref5.user_address, user_address = _ref5$user_address === void 0 ? undefined : _ref5$user_address;\n\n              if (user_address) {\n                _context5.next = 3;\n                break;\n              }\n\n              throw new Error(\"sushi-data: User address undefined\");\n\n            case 3:\n              _context5.t0 = pageResults;\n              _context5.t1 = graphAPIEndpoints.masterchef;\n              _context5.t2 = {\n                address: \"\\\\\\\"\".concat(user_address.toLowerCase(), \"\\\\\\\"\")\n              };\n\n              if (!block) {\n                _context5.next = 10;\n                break;\n              }\n\n              _context5.t3 = {\n                number: block\n              };\n              _context5.next = 19;\n              break;\n\n            case 10:\n              if (!timestamp) {\n                _context5.next = 17;\n                break;\n              }\n\n              _context5.next = 13;\n              return timestampToBlock(timestamp);\n\n            case 13:\n              _context5.t5 = _context5.sent;\n              _context5.t4 = {\n                number: _context5.t5\n              };\n              _context5.next = 18;\n              break;\n\n            case 17:\n              _context5.t4 = undefined;\n\n            case 18:\n              _context5.t3 = _context5.t4;\n\n            case 19:\n              _context5.t6 = _context5.t3;\n              _context5.t7 = {\n                where: _context5.t2,\n                block: _context5.t6\n              };\n              _context5.t8 = _user.properties;\n              _context5.t9 = {\n                entity: 'users',\n                selection: _context5.t7,\n                properties: _context5.t8\n              };\n              _context5.t10 = {\n                api: _context5.t1,\n                query: _context5.t9\n              };\n              return _context5.abrupt(\"return\", (0, _context5.t0)(_context5.t10).then(function (results) {\n                return _user.callback(results);\n              }).catch(function (err) {\n                return console.log(err);\n              }));\n\n            case 25:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }))();\n  },\n  users: function users() {\n    var _arguments6 = arguments;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var _ref6, _ref6$block, block, _ref6$timestamp, timestamp;\n\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _ref6 = _arguments6.length > 0 && _arguments6[0] !== undefined ? _arguments6[0] : {}, _ref6$block = _ref6.block, block = _ref6$block === void 0 ? undefined : _ref6$block, _ref6$timestamp = _ref6.timestamp, timestamp = _ref6$timestamp === void 0 ? undefined : _ref6$timestamp;\n              _context6.t0 = pageResults;\n              _context6.t1 = graphAPIEndpoints.masterchef;\n\n              if (!block) {\n                _context6.next = 7;\n                break;\n              }\n\n              _context6.t2 = {\n                number: block\n              };\n              _context6.next = 16;\n              break;\n\n            case 7:\n              if (!timestamp) {\n                _context6.next = 14;\n                break;\n              }\n\n              _context6.next = 10;\n              return timestampToBlock(timestamp);\n\n            case 10:\n              _context6.t4 = _context6.sent;\n              _context6.t3 = {\n                number: _context6.t4\n              };\n              _context6.next = 15;\n              break;\n\n            case 14:\n              _context6.t3 = undefined;\n\n            case 15:\n              _context6.t2 = _context6.t3;\n\n            case 16:\n              _context6.t5 = _context6.t2;\n              _context6.t6 = {\n                block: _context6.t5\n              };\n              _context6.t7 = _user.properties;\n              _context6.t8 = {\n                entity: 'users',\n                selection: _context6.t6,\n                properties: _context6.t7\n              };\n              _context6.t9 = {\n                api: _context6.t1,\n                query: _context6.t8\n              };\n              return _context6.abrupt(\"return\", (0, _context6.t0)(_context6.t9).then(function (results) {\n                return _user.callback(results);\n              }).catch(function (err) {\n                return console.log(err);\n              }));\n\n            case 22:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }))();\n  },\n  apys: function apys() {\n    var _arguments7 = arguments;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var _ref7, _ref7$block, block, _ref7$timestamp, timestamp, masterchefList, exchangeList, sushiUSD, totalAllocPoint, averageBlockTime;\n\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _ref7 = _arguments7.length > 0 && _arguments7[0] !== undefined ? _arguments7[0] : {}, _ref7$block = _ref7.block, block = _ref7$block === void 0 ? undefined : _ref7$block, _ref7$timestamp = _ref7.timestamp, timestamp = _ref7$timestamp === void 0 ? undefined : _ref7$timestamp;\n              _context7.next = 3;\n              return module.exports.pools({\n                block: block,\n                timestamp: timestamp\n              });\n\n            case 3:\n              masterchefList = _context7.sent;\n              _context7.next = 6;\n              return exchangePairs({\n                block: block,\n                timestamp: timestamp\n              });\n\n            case 6:\n              exchangeList = _context7.sent;\n              _context7.next = 9;\n              return sushiPriceUSD({\n                block: block,\n                timestamp: timestamp\n              });\n\n            case 9:\n              sushiUSD = _context7.sent;\n              totalAllocPoint = masterchefList.reduce(function (a, b) {\n                return a + b.allocPoint;\n              }, 0);\n              _context7.next = 13;\n              return getAverageBlockTime({\n                block: block,\n                timestamp: timestamp\n              });\n\n            case 13:\n              averageBlockTime = _context7.sent;\n              return _context7.abrupt(\"return\", masterchefList.map(function (masterchefPool) {\n                var exchangePool = exchangeList.find(function (e) {\n                  return e.id === masterchefPool.pair;\n                });\n\n                if (!exchangePool) {\n                  return _objectSpread(_objectSpread({}, masterchefPool), {}, {\n                    apy: 0\n                  });\n                }\n\n                var tvl = masterchefPool.slpBalance * (exchangePool.reserveUSD / exchangePool.totalSupply);\n                var sushiPerBlock = masterchefPool.allocPoint / totalAllocPoint * 100;\n                var apy = sushiUSD * (sushiPerBlock * (60 / averageBlockTime) * 60 * 24 * 365) / tvl * 100 * 3; // *3 => vesting\n\n                return _objectSpread(_objectSpread({}, masterchefPool), {}, {\n                  apy: apy\n                });\n              }));\n\n            case 15:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }))();\n  },\n  apys24h: function apys24h() {\n    var _arguments8 = arguments;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n      var _ref8, _ref8$block, block, _ref8$timestamp, timestamp, timestampNow, results, results24ago;\n\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _ref8 = _arguments8.length > 0 && _arguments8[0] !== undefined ? _arguments8[0] : {}, _ref8$block = _ref8.block, block = _ref8$block === void 0 ? undefined : _ref8$block, _ref8$timestamp = _ref8.timestamp, timestamp = _ref8$timestamp === void 0 ? undefined : _ref8$timestamp;\n\n              if (!timestamp) {\n                _context8.next = 5;\n                break;\n              }\n\n              _context8.t0 = timestamp;\n              _context8.next = 13;\n              break;\n\n            case 5:\n              if (!block) {\n                _context8.next = 11;\n                break;\n              }\n\n              _context8.next = 8;\n              return blockToTimestamp(block);\n\n            case 8:\n              _context8.t1 = _context8.sent;\n              _context8.next = 12;\n              break;\n\n            case 11:\n              _context8.t1 = Math.floor(Date.now() / 1000);\n\n            case 12:\n              _context8.t0 = _context8.t1;\n\n            case 13:\n              timestampNow = _context8.t0;\n              timestamp24ago = timestampNow - TWENTY_FOUR_HOURS;\n              timestamp48ago = timestamp24ago - TWENTY_FOUR_HOURS;\n\n              if (!timestamp) {\n                _context8.next = 22;\n                break;\n              }\n\n              _context8.next = 19;\n              return timestampToBlock(timestamp);\n\n            case 19:\n              _context8.t2 = _context8.sent;\n              _context8.next = 23;\n              break;\n\n            case 22:\n              _context8.t2 = block;\n\n            case 23:\n              block = _context8.t2;\n              _context8.next = 26;\n              return timestampToBlock(timestamp24ago);\n\n            case 26:\n              block24ago = _context8.sent;\n              _context8.next = 29;\n              return timestampToBlock(timestamp48ago);\n\n            case 29:\n              block48ago = _context8.sent;\n              _context8.next = 32;\n              return module.exports.apys({\n                block: block\n              });\n\n            case 32:\n              results = _context8.sent;\n              _context8.next = 35;\n              return module.exports.apys({\n                block: block24ago\n              });\n\n            case 35:\n              results24ago = _context8.sent;\n              return _context8.abrupt(\"return\", apys.callback24h(results, results24ago));\n\n            case 37:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }))();\n  }\n};\nvar _info = {\n  properties: ['bonusMultiplier', 'bonusEndBlock', 'devaddr', 'migrator', 'owner', 'startBlock', 'sushi', 'sushiPerBlock', 'totalAllocPoint', 'poolCount', 'slpBalance', 'slpAge', 'slpAgeRemoved', 'slpDeposited', 'slpWithdrawn', 'updatedAt'],\n  callback: function callback(results) {\n    return {\n      bonusMultiplier: Number(results.bonusMultiplier),\n      bonusEndBlock: Number(results.bonusEndBlock),\n      devaddr: results.devaddr,\n      migrator: results.migrator,\n      owner: results.owner,\n      startBlock: Number(results.startBlock),\n      sushiPerBlock: results.sushiPerBlock / 1e18,\n      totalAllocPoint: Number(results.totalAllocPoint),\n      poolCount: Number(results.poolCount),\n      slpBalance: Number(results.slpBalance),\n      slpAge: Number(results.slpAge),\n      slpAgeRemoved: Number(results.slpAgeRemoved),\n      slpDeposited: Number(results.slpDeposited),\n      slpWithdrawn: Number(results.slpWithdrawn),\n      updatedAt: Number(results.updatedAt)\n    };\n  }\n};\nvar _pools = {\n  properties: ['id', 'pair', 'allocPoint', 'lastRewardBlock', 'accSushiPerShare', 'balance', 'userCount', 'slpBalance', 'slpAge', 'slpAgeRemoved', 'slpDeposited', 'slpWithdrawn', 'timestamp', 'block', 'updatedAt', 'entryUSD', 'exitUSD', 'sushiHarvested', 'sushiHarvestedUSD'],\n  callback: function callback(results) {\n    return results.map(function (_ref9) {\n      var id = _ref9.id,\n          pair = _ref9.pair,\n          allocPoint = _ref9.allocPoint,\n          lastRewardBlock = _ref9.lastRewardBlock,\n          accSushiPerShare = _ref9.accSushiPerShare,\n          balance = _ref9.balance,\n          userCount = _ref9.userCount,\n          slpBalance = _ref9.slpBalance,\n          slpAge = _ref9.slpAge,\n          slpAgeRemoved = _ref9.slpAgeRemoved,\n          slpDeposited = _ref9.slpDeposited,\n          slpWithdrawn = _ref9.slpWithdrawn,\n          timestamp = _ref9.timestamp,\n          block = _ref9.block,\n          updatedAt = _ref9.updatedAt,\n          entryUSD = _ref9.entryUSD,\n          exitUSD = _ref9.exitUSD,\n          sushiHarvested = _ref9.sushiHarvested,\n          sushiHarvestedUSD = _ref9.sushiHarvestedUSD;\n      return {\n        id: Number(id),\n        pair: pair,\n        allocPoint: Number(allocPoint),\n        lastRewardBlock: Number(lastRewardBlock),\n        accSushiPerShare: BigInt(accSushiPerShare),\n        userCount: Number(userCount),\n        slpBalance: Number(slpBalance),\n        slpAge: Number(slpAge),\n        slpAgeRemoved: Number(slpAgeRemoved),\n        slpDeposited: Number(slpDeposited),\n        slpWithdrawn: Number(slpWithdrawn),\n        addedTs: Number(timestamp),\n        addedDate: new Date(timestamp * 1000),\n        addedBlock: Number(block),\n        lastUpdatedTs: Number(updatedAt),\n        lastUpdatedDate: new Date(updatedAt * 1000),\n        entryUSD: Number(entryUSD),\n        exitUSD: Number(exitUSD),\n        sushiHarvested: Number(sushiHarvested),\n        sushiHarvestedUSD: Number(sushiHarvestedUSD)\n      };\n    });\n  }\n};\nvar _stakedValue = {\n  properties: ['id', 'liquidityTokenBalance', 'pair { id, totalSupply, reserveETH, reserveUSD }'],\n  callback: function callback(results) {\n    return {\n      id: results.id,\n      liquidityTokenBalance: Number(results.liquidityTokenBalance),\n      totalSupply: Number(results.pair.totalSupply),\n      totalValueETH: Number(results.pair.reserveETH),\n      totalValueUSD: Number(results.pair.reserveUSD)\n    };\n  }\n};\nvar _user = {\n  properties: ['id', 'address', 'pool { id, pair, balance, accSushiPerShare, lastRewardBlock }', 'amount', 'rewardDebt', 'entryUSD', 'exitUSD', 'sushiHarvested', 'sushiHarvestedUSD'],\n  callback: function callback(results) {\n    return results.map(function (entry) {\n      return {\n        id: entry.id,\n        address: entry.address,\n        poolId: Number(entry.id.split(\"-\")[0]),\n        pool: entry.pool ? {\n          id: entry.pool.id,\n          pair: entry.pool.pair,\n          balance: Number(entry.pool.balance),\n          accSushiPerShare: BigInt(accSushiPerShare),\n          lastRewardBlock: Number(entry.pool.lastRewardBlock)\n        } : undefined,\n        amount: Number(entry.amount),\n        rewardDebt: BigInt(entry.rewardDebt),\n        entryUSD: Number(entry.entryUSD),\n        exitUSD: Number(entry.exitUSD),\n        sushiHarvested: Number(entry.sushiHarvested),\n        sushiHarvestedUSD: Number(entry.sushiHarvestedUSD)\n      };\n    });\n  }\n};\nvar apys = {\n  callback24h: function callback24h(results, results24h) {\n    return results.map(function (result) {\n      var result24h = results24h.find(function (e) {\n        return e.id === result.id;\n      }) || result;\n      return _objectSpread(_objectSpread({}, result), {}, {\n        slpBalanceChange: result.slpBalance / result24h.slpBalance * 100 - 100,\n        slpBalanceChangeCount: result.slpBalance - result24h.slpBalance,\n        userCountChange: result.userCount / result24h.userCount * 100 - 100,\n        userCountChangeCount: result.userCount - result24h.userCount,\n        sushiHarvestedChange: result.sushiHarvested / result24h.sushiHarvested * 100 - 100,\n        sushiHarvestedChangeCount: result.sushiHarvested - result24h.sushiHarvested\n      });\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"script"}