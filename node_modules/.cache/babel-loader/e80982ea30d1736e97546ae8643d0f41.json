{"ast":null,"code":"'use strict';\n\nconst Key = require('./key');\n\nconst Adapter = require('./adapter'); // Errors\n\n\nconst Errors = require('./errors');\n\nclass MemoryDatastore extends Adapter {\n  constructor() {\n    super();\n    this.data = {};\n  }\n\n  async put(key, val) {\n    // eslint-disable-line require-await\n    this.data[key.toString()] = val;\n  }\n\n  async get(key) {\n    const exists = await this.has(key);\n    if (!exists) throw Errors.notFoundError();\n    return this.data[key.toString()];\n  }\n\n  async has(key) {\n    // eslint-disable-line require-await\n    return this.data[key.toString()] !== undefined;\n  }\n\n  async delete(key) {\n    // eslint-disable-line require-await\n    delete this.data[key.toString()];\n  }\n\n  *_all() {\n    yield* Object.entries(this.data).map(([key, value]) => ({\n      key: new Key(key),\n      value\n    }));\n  }\n\n}\n\nmodule.exports = MemoryDatastore;","map":null,"metadata":{},"sourceType":"script"}