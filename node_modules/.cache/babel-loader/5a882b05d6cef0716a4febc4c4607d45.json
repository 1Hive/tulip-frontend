{"ast":null,"code":"import _styled6 from \"styled-components\";\nimport _styled5 from \"styled-components\";\nimport _styled4 from \"styled-components\";\nimport _styled3 from \"styled-components\";\nimport _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/fabianmolina/Documents/1hive/tulip-frontend/src/components/Account/ScreenProviders.js\";\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { ButtonBase, GU, Link, RADIUS, useTheme, textStyle } from '@1hive/1hive-ui';\nimport { getProviderFromUseWalletId } from '../../ethereum-providers';\nimport { getUseWalletProviders } from '../../lib/web3-utils';\nconst PROVIDERS_INFO = getUseWalletProviders().map(provider => [provider.id, getProviderFromUseWalletId(provider.id)]);\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"ScreenProviders___StyledDiv\",\n  componentId: \"sc-5te2az-0\"\n})([\"display:flex;flex-direction:column;justify-content:center;width:100%;padding:\", \"px \", \"px 0;\"], p => p._css, p => p._css2);\n\nvar _StyledDiv2 = _styled(\"div\").withConfig({\n  displayName: \"ScreenProviders___StyledDiv2\",\n  componentId: \"sc-5te2az-1\"\n})([\"display:grid;grid-gap:\", \"px;grid-auto-flow:row;grid-template-columns:repeat(1,1fr);\"], p => p._css3);\n\nvar _StyledDiv3 = _styled(\"div\").withConfig({\n  displayName: \"ScreenProviders___StyledDiv3\",\n  componentId: \"sc-5te2az-2\"\n})([\"display:flex;justify-content:center;margin-top:\", \"px;\"], p => p._css4);\n\nvar _StyledLink = _styled(Link).withConfig({\n  displayName: \"ScreenProviders___StyledLink\",\n  componentId: \"sc-5te2az-3\"\n})([\"text-decoration:none\"]);\n\nfunction ScreenProviders({\n  onActivate\n}) {\n  return /*#__PURE__*/React.createElement(_StyledDiv, {\n    _css: 2 * GU,\n    _css2: 2 * GU,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_StyledDiv2, {\n    _css3: 1.5 * GU,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, PROVIDERS_INFO.map(([id, provider]) => /*#__PURE__*/React.createElement(ProviderButton, {\n    key: id,\n    id: id,\n    provider: provider,\n    onActivate: onActivate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(_StyledDiv3, {\n    _css4: 2 * GU,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_StyledLink, {\n    href: \"https://ethereum.org/wallets/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Don\\u2019t have an Ethereum account?\")));\n}\n\nScreenProviders.propTypes = {\n  onActivate: PropTypes.func.isRequired\n};\n\nvar _StyledButtonBase = _styled(ButtonBase).withConfig({\n  displayName: \"ScreenProviders___StyledButtonBase\",\n  componentId: \"sc-5te2az-4\"\n})([\"position:relative;display:flex;flex-direction:column;align-items:center;justify-content:center;width:100%;height:\", \"px;background:\", \";box-shadow:0px 2px 4px rgba(0,0,0,0.15);border-radius:\", \"px;&:active{top:1px;box-shadow:0px 2px 4px rgba(0,0,0,0.1);}\"], p => p._css5, p => p._css6, RADIUS);\n\nvar _StyledDiv4 = _styled(\"div\").withConfig({\n  displayName: \"ScreenProviders___StyledDiv4\",\n  componentId: \"sc-5te2az-5\"\n})([\"margin-top:\", \"px;\", \";\"], p => p._css7, p => p._css8);\n\nfunction ProviderButton({\n  id,\n  provider,\n  onActivate\n}) {\n  const theme = useTheme();\n  const handleClick = useCallback(() => {\n    onActivate(id);\n  }, [onActivate, id]);\n  return /*#__PURE__*/React.createElement(_StyledButtonBase, {\n    key: id,\n    onClick: handleClick,\n    _css5: 12 * GU,\n    _css6: theme.surface,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: provider.image,\n    alt: \"\",\n    height: 5.25 * GU,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(_StyledDiv4, {\n    _css7: 1 * GU,\n    _css8: textStyle('body1'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, provider.name));\n}\n\nProviderButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  onActivate: PropTypes.func.isRequired,\n  provider: PropTypes.shape({\n    image: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired\n  }).isRequired\n};\nexport default ScreenProviders;","map":{"version":3,"sources":["/Users/fabianmolina/Documents/1hive/tulip-frontend/src/components/Account/ScreenProviders.js"],"names":["React","useCallback","PropTypes","ButtonBase","GU","Link","RADIUS","useTheme","textStyle","getProviderFromUseWalletId","getUseWalletProviders","PROVIDERS_INFO","map","provider","id","ScreenProviders","onActivate","propTypes","func","isRequired","ProviderButton","theme","handleClick","surface","image","name","string","shape"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  ButtonBase,\r\n  GU,\r\n  Link,\r\n  RADIUS,\r\n  useTheme,\r\n  textStyle,\r\n} from '@1hive/1hive-ui'\r\nimport { getProviderFromUseWalletId } from '../../ethereum-providers'\r\nimport { getUseWalletProviders } from '../../lib/web3-utils'\r\n\r\nconst PROVIDERS_INFO = getUseWalletProviders().map(provider => [\r\n  provider.id,\r\n  getProviderFromUseWalletId(provider.id),\r\n])\r\n\r\nfunction ScreenProviders({ onActivate }) {\r\n  return (\r\n    <div\r\n      css={`\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        width: 100%;\r\n        padding: ${2 * GU}px ${2 * GU}px 0;\r\n      `}\r\n    >\r\n      <div\r\n        css={`\r\n          display: grid;\r\n          grid-gap: ${1.5 * GU}px;\r\n          grid-auto-flow: row;\r\n          grid-template-columns: repeat(1, 1fr);\r\n        `}\r\n      >\r\n        {PROVIDERS_INFO.map(([id, provider]) => (\r\n          <ProviderButton\r\n            key={id}\r\n            id={id}\r\n            provider={provider}\r\n            onActivate={onActivate}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div\r\n        css={`\r\n          display: flex;\r\n          justify-content: center;\r\n          margin-top: ${2 * GU}px;\r\n        `}\r\n      >\r\n        <Link href=\"https://ethereum.org/wallets/\" css=\"text-decoration: none\">\r\n          Donâ€™t have an Ethereum account?\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nScreenProviders.propTypes = {\r\n  onActivate: PropTypes.func.isRequired,\r\n}\r\n\r\nfunction ProviderButton({ id, provider, onActivate }) {\r\n  const theme = useTheme()\r\n\r\n  const handleClick = useCallback(() => {\r\n    onActivate(id)\r\n  }, [onActivate, id])\r\n\r\n  return (\r\n    <ButtonBase\r\n      key={id}\r\n      onClick={handleClick}\r\n      css={`\r\n        position: relative;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 100%;\r\n        height: ${12 * GU}px;\r\n        background: ${theme.surface};\r\n        box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.15);\r\n        border-radius: ${RADIUS}px;\r\n        &:active {\r\n          top: 1px;\r\n          box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\r\n        }\r\n      `}\r\n    >\r\n      <img src={provider.image} alt=\"\" height={5.25 * GU} />\r\n      <div\r\n        css={`\r\n          margin-top: ${1 * GU}px;\r\n          ${textStyle('body1')};\r\n        `}\r\n      >\r\n        {provider.name}\r\n      </div>\r\n    </ButtonBase>\r\n  )\r\n}\r\nProviderButton.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  onActivate: PropTypes.func.isRequired,\r\n  provider: PropTypes.shape({\r\n    image: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n}\r\n\r\nexport default ScreenProviders\r\n"]},"metadata":{},"sourceType":"module"}