{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar debug = require('debug');\n\nvar log = debug('libp2p:secio');\nlog.error = debug('libp2p:secio:error');\n\nvar handshake = require('./handshake');\n\nvar State = require('./state');\n\nvar Wrap = require('it-pb-rpc');\n\nvar _require = require('it-length-prefixed'),\n    int32BEDecode = _require.int32BEDecode,\n    int32BEEncode = _require.int32BEEncode;\n\nfunction secure(_x, _x2, _x3) {\n  return _secure.apply(this, arguments);\n}\n\nfunction _secure() {\n  _secure = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(localPeer, duplex, remotePeer) {\n    var state, wrapped;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (localPeer) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new Error('no local private key provided');\n\n          case 2:\n            if (duplex) {\n              _context.next = 4;\n              break;\n            }\n\n            throw new Error('no connection for the handshake provided');\n\n          case 4:\n            state = new State(localPeer, remotePeer);\n            wrapped = Wrap(duplex, {\n              lengthDecoder: int32BEDecode,\n              lengthEncoder: int32BEEncode\n            });\n            _context.next = 8;\n            return handshake(state, wrapped);\n\n          case 8:\n            return _context.abrupt(\"return\", {\n              conn: state.secure,\n              remotePeer: state.id.remote\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _secure.apply(this, arguments);\n}\n\nmodule.exports = {\n  protocol: '/secio/1.0.0',\n  // since SECIO is symetric, we only need one function here\n  secureInbound: secure,\n  secureOutbound: secure\n};","map":null,"metadata":{},"sourceType":"script"}