{"ast":null,"code":"import { _ as _slicedToArray } from './slicedToArray-ad07b557.js';\nimport './unsupportedIterableToArray-aef68344.js';\nimport React, { useMemo } from 'react';\nimport './_commonjsHelpers-97e6d7b1.js';\nimport { P as PropTypes } from './index-097535f1.js';\nimport './defineProperty-a0480c32.js';\nimport './toConsumableArray-07f01111.js';\nimport _styled from 'styled-components';\nimport './getPrototypeOf-97db713a.js';\nimport './color.js';\nimport './components.js';\nimport './contains-component.js';\nimport { unselectable } from './css.js';\nimport './dayjs.min-e57fb69a.js';\nimport './date.js';\nimport './miscellaneous.js';\nimport { warnOnce, warn } from './environment.js';\nimport './font.js';\nimport './math-e6d0e93a.js';\nimport './characters.js';\nimport './format.js';\nimport './keycodes.js';\nimport './url.js';\nimport './web3.js';\nimport { BIG_RADIUS, GU } from './constants.js';\nimport './breakpoints.js';\nimport './springs.js';\nimport { textStyle } from './text-styles.js';\nimport './theme-dark.js';\nimport './theme-light.js';\nimport { useTheme } from './Theme.js';\nimport { _ as _extends } from './extends-db4f0c26.js';\nimport { _ as _objectWithoutProperties } from './objectWithoutProperties-234758e1.js';\nimport { o, i } from './index-422d37c0.js';\nimport './isObject-c2f08dfa.js';\nimport './Viewport-2b81deab.js';\nimport { useLayout } from './Layout.js';\nimport './FocusVisible.js';\nimport ButtonBase from './ButtonBase.js'; // See src/icons/icon-size.js for the corresponding icon sizes.\n\nvar SIZE_STYLES = {\n  medium: {\n    textStyleName: 'body2',\n    height: 5 * GU,\n    padding: 3 * GU,\n    iconPadding: 2 * GU,\n    minWidth: 14.5 * GU,\n    middleSpace: 1 * GU\n  },\n  small: {\n    textStyleName: 'body2',\n    height: 4 * GU,\n    padding: 2 * GU,\n    iconPadding: 1.5 * GU,\n    minWidth: 13 * GU,\n    middleSpace: 1 * GU\n  },\n  mini: {\n    textStyleName: 'body4',\n    height: 3 * GU,\n    padding: 1.5 * GU,\n    iconPadding: 1 * GU,\n    minWidth: 9.25 * GU,\n    middleSpace: 0.5 * GU\n  }\n};\n\nfunction getPadding(size, displayIcon, displayLabel) {\n  var _SIZE_STYLES$size = SIZE_STYLES[size],\n      padding = _SIZE_STYLES$size.padding,\n      iconPadding = _SIZE_STYLES$size.iconPadding;\n\n  if (displayIcon && !displayLabel) {\n    return '0';\n  }\n\n  if (displayIcon && displayLabel) {\n    return \"0 \".concat(padding, \"px 0 \").concat(iconPadding, \"px\");\n  }\n\n  return \"0 \".concat(padding, \"px\");\n}\n\nfunction getWidth(size, displayIconOnly, wide) {\n  var height = SIZE_STYLES[size].height;\n\n  if (wide) {\n    return '100%';\n  }\n\n  if (displayIconOnly) {\n    return \"\".concat(height, \"px\");\n  }\n\n  return 'auto';\n}\n\nfunction getMinWidth(size, displayLabelOnly) {\n  var minWidth = SIZE_STYLES[size].minWidth;\n  return displayLabelOnly ? \"\".concat(minWidth, \"px\") : '0';\n} // CSS styles related to the current size\n\n\nfunction sizeStyles(size, wide, displayIcon, displayLabel) {\n  var _SIZE_STYLES$size2 = SIZE_STYLES[size],\n      height = _SIZE_STYLES$size2.height,\n      textStyleName = _SIZE_STYLES$size2.textStyleName,\n      middleSpace = _SIZE_STYLES$size2.middleSpace;\n  return {\n    height: \"\".concat(height, \"px\"),\n    middleSpace: displayIcon && displayLabel ? \"\".concat(middleSpace, \"px\") : '0',\n    minWidth: getMinWidth(size, !displayIcon && displayLabel),\n    padding: getPadding(size, displayIcon, displayLabel),\n    textStyleCss: textStyle(textStyleName),\n    width: getWidth(size, displayIcon && !displayLabel, wide)\n  };\n} // CSS styles related to the current mode\n\n\nfunction modeStyles(theme, mode, disabled) {\n  if (disabled) {\n    return {\n      background: theme.disabled,\n      color: theme.disabledContent,\n      iconColor: theme.disabledContent,\n      border: '0'\n    };\n  }\n\n  if (mode === 'strong') {\n    return {\n      background: \"\\n        linear-gradient(\\n          45deg,\\n          \".concat(theme.accentStart, \" 0%,\\n          \").concat(theme.accentEnd, \" 100%\\n        )\\n      \"),\n      color: theme.accentContent.alpha(0.8),\n      iconColor: theme.accentContent.alpha(0.8),\n      border: '0'\n    };\n  }\n\n  if (mode === 'positive') {\n    return {\n      background: theme.positive,\n      color: theme.positiveContent,\n      iconColor: theme.positiveContent,\n      border: '0'\n    };\n  }\n\n  if (mode === 'negative') {\n    return {\n      background: theme.negative,\n      color: theme.negativeContent,\n      iconColor: theme.negativeContent,\n      border: '0'\n    };\n  }\n\n  return {\n    background: theme.surfaceInteractive,\n    color: theme.surfaceContent,\n    iconColor: theme.surfaceIcon,\n    border: \"1px solid \".concat(theme.border)\n  };\n}\n\nvar _StyledButtonBase = _styled(ButtonBase).withConfig({\n  displayName: \"Button___StyledButtonBase\",\n  componentId: \"sc-1dg3zas-0\"\n})([\"display:\", \";align-items:center;justify-content:center;width:\", \";height:\", \";min-width:\", \";padding:\", \";\", \";\", \";background:\", \";color:\", \";white-space:nowrap;border:\", \";box-shadow:\", \";transition-property:transform,box-shadow;transition-duration:50ms;transition-timing-function:ease-in-out;&:active{transform:\", \";box-shadow:\", \";}\"], function (p) {\n  return p._css;\n}, function (p) {\n  return p._css2;\n}, function (p) {\n  return p._css3;\n}, function (p) {\n  return p._css4;\n}, function (p) {\n  return p._css5;\n}, function (p) {\n  return p._css6;\n}, unselectable, function (p) {\n  return p._css7;\n}, function (p) {\n  return p._css8;\n}, function (p) {\n  return p._css9;\n}, function (p) {\n  return p._css10;\n}, function (p) {\n  return p._css11;\n}, function (p) {\n  return p._css12;\n});\n\nvar _StyledSpan = _styled(\"span\").withConfig({\n  displayName: \"Button___StyledSpan\",\n  componentId: \"sc-1dg3zas-1\"\n})([\"position:relative;display:flex;color:\", \";margin-right:\", \";\"], function (p) {\n  return p._css13;\n}, function (p) {\n  return p._css14;\n});\n\nfunction Button(_ref) {\n  var children = _ref.children,\n      disabled = _ref.disabled,\n      display = _ref.display,\n      icon = _ref.icon,\n      iconOnly = _ref.iconOnly,\n      innerRef = _ref.innerRef,\n      label = _ref.label,\n      mode = _ref.mode,\n      size = _ref.size,\n      wide = _ref.wide,\n      props = _objectWithoutProperties(_ref, [\"children\", \"disabled\", \"display\", \"icon\", \"iconOnly\", \"innerRef\", \"label\", \"mode\", \"size\", \"wide\"]); // backward compatibility and deprecated props\n\n\n  if (iconOnly) {\n    warnOnce('Button:iconOnly', 'Button: \"iconOnly\" is deprecated, please use \"display\".');\n    display = 'icon';\n  }\n\n  if (mode === 'outline' || mode === 'secondary') {\n    warnOnce('Button:mode', \"Button: the mode \\\"\".concat(mode, \"\\\" is deprecated, please use \\\"normal\\\".\"));\n    mode = 'normal';\n  }\n\n  if (size === 'normal' || size === 'large') {\n    warnOnce('Button:size', \"Button: the size \\\"\".concat(size, \"\\\" is deprecated, please use \\\"medium\\\".\"));\n    size = 'medium';\n  } // prop warnings\n\n\n  if (display === 'icon' && !icon) {\n    warn('Button: the display \"icon\" was used without providing an icon.');\n  }\n\n  if (!children && !label) {\n    warn('Button: please provide a label.');\n  }\n\n  var theme = useTheme();\n\n  var _useLayout = useLayout(),\n      layoutName = _useLayout.layoutName;\n\n  var _useInside = o('EmptyStateCard'),\n      _useInside2 = _slicedToArray(_useInside, 1),\n      insideEmptyStateCard = _useInside2[0];\n\n  var _useInside3 = o('Header:secondary'),\n      _useInside4 = _slicedToArray(_useInside3, 1),\n      insideHeaderSecondary = _useInside4[0]; // Always wide + strong when used as an empty state card action\n\n\n  if (insideEmptyStateCard) {\n    mode = 'strong';\n    wide = true;\n  } // Alternate between icon and label automatically when used in Header\n\n\n  if (insideHeaderSecondary && display === 'auto' && icon && label) {\n    display = layoutName === 'small' ? 'icon' : 'label';\n  } // Otherwise, display both\n\n\n  if (display === 'auto') {\n    display = 'all';\n  }\n\n  var displayIcon = icon && (display === 'all' || display === 'icon');\n  var displayLabel = label && (display === 'all' || display === 'label'); // Mode styles\n\n  var _useMemo = useMemo(function () {\n    return modeStyles(theme, mode, disabled);\n  }, [mode, theme, disabled]),\n      background = _useMemo.background,\n      color = _useMemo.color,\n      iconColor = _useMemo.iconColor,\n      border = _useMemo.border; // Size styles\n\n\n  var _useMemo2 = useMemo(function () {\n    return sizeStyles(size, wide, displayIcon, displayLabel);\n  }, [size, wide, displayIcon, displayLabel]),\n      height = _useMemo2.height,\n      middleSpace = _useMemo2.middleSpace,\n      minWidth = _useMemo2.minWidth,\n      padding = _useMemo2.padding,\n      textStyleCss = _useMemo2.textStyleCss,\n      width = _useMemo2.width; // Use the label as a title when only the icon is displayed\n\n\n  if (displayIcon && !displayLabel && label && typeof label === 'string') {\n    props.title = label;\n  }\n\n  var insideData = {\n    size: size\n  };\n  return /*#__PURE__*/React.createElement(_StyledButtonBase, _extends({\n    ref: innerRef,\n    focusRingSpacing: border === '0' ? 0 : 1,\n    focusRingRadius: BIG_RADIUS,\n    disabled: disabled\n  }, props, {\n    _css: wide ? 'flex' : 'inline-flex',\n    _css2: width,\n    _css3: height,\n    _css4: minWidth,\n    _css5: padding,\n    _css6: textStyleCss,\n    _css7: background,\n    _css8: color,\n    _css9: border,\n    _css10: disabled ? 'none' : '0 1px 3px rgba(0, 0, 0, 0.1)',\n    _css11: disabled ? 'none' : 'translateY(1px)',\n    _css12: disabled ? 'none' : '0px 1px 2px rgba(0, 0, 0, 0.08)'\n  }), /*#__PURE__*/React.createElement(i, {\n    name: \"Button\",\n    data: insideData\n  }, children || /*#__PURE__*/React.createElement(React.Fragment, null, displayIcon && /*#__PURE__*/React.createElement(i, {\n    name: \"Button:icon\",\n    data: insideData\n  }, /*#__PURE__*/React.createElement(_StyledSpan, {\n    _css13: iconColor,\n    _css14: middleSpace\n  }, icon)), displayLabel && /*#__PURE__*/React.createElement(i, {\n    name: \"Button:label\",\n    data: insideData\n  }, label))));\n}\n\nButton.propTypes = {\n  children: PropTypes.node,\n  disabled: PropTypes.bool,\n  display: PropTypes.oneOf(['auto', 'all', 'icon', 'label']),\n  icon: PropTypes.node,\n  innerRef: PropTypes.any,\n  label: PropTypes.string,\n  mode: PropTypes.oneOf(['normal', 'strong', 'positive', 'negative', // deprecated\n  'outline', 'secondary', 'text']),\n  size: PropTypes.oneOf(['medium', 'small', 'mini', // deprecated\n  'large', 'normal']),\n  wide: PropTypes.bool,\n  // deprecated\n  iconOnly: PropTypes.bool\n};\nButton.defaultProps = {\n  disabled: false,\n  display: 'auto',\n  mode: 'normal',\n  size: 'medium',\n  wide: false\n};\nvar ButtonWithRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(Button, _extends({\n    innerRef: ref\n  }, props));\n});\nButtonWithRef.Anchor = React.forwardRef(function (props, ref) {\n  warnOnce('Button.Anchor', 'Button.Anchor is deprecated: please use Button with a href prop instead.');\n  return /*#__PURE__*/React.createElement(ButtonWithRef, _extends({\n    ref: ref\n  }, props));\n});\nexport default ButtonWithRef;","map":null,"metadata":{},"sourceType":"module"}