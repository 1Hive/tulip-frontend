{"ast":null,"code":"/* global self */\n// created by @HenrikJoreteg\nvar prefix;\nvar version;\n\nif (self.mozRTCPeerConnection || navigator.mozGetUserMedia) {\n  prefix = 'moz';\n  version = parseInt(navigator.userAgent.match(/Firefox\\/([0-9]+)\\./)[1], 10);\n} else if (self.webkitRTCPeerConnection || navigator.webkitGetUserMedia) {\n  prefix = 'webkit';\n  version = navigator.userAgent.match(/Chrom(e|ium)/) && parseInt(navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./)[2], 10);\n}\n\nvar PC = self.RTCPeerConnection || self.mozRTCPeerConnection || self.webkitRTCPeerConnection;\nvar IceCandidate = self.mozRTCIceCandidate || self.RTCIceCandidate;\nvar SessionDescription = self.mozRTCSessionDescription || self.RTCSessionDescription;\nvar MediaStream = self.webkitMediaStream || self.MediaStream;\nvar screenSharing = self.location.protocol === 'https:' && (prefix === 'webkit' && version >= 26 || prefix === 'moz' && version >= 33);\nvar AudioContext = self.AudioContext || self.webkitAudioContext;\nvar videoEl = self.document && document.createElement('video');\nvar supportVp8 = videoEl && videoEl.canPlayType && videoEl.canPlayType('video/webm; codecs=\"vp8\", vorbis') === 'probably';\nvar getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.msGetUserMedia || navigator.mozGetUserMedia; // export support flags and constructors.prototype && PC\n\nmodule.exports = {\n  prefix: prefix,\n  browserVersion: version,\n  support: !!PC && !!getUserMedia,\n  // new support style\n  supportRTCPeerConnection: !!PC,\n  supportVp8: supportVp8,\n  supportGetUserMedia: !!getUserMedia,\n  supportDataChannel: !!(PC && PC.prototype && PC.prototype.createDataChannel),\n  supportWebAudio: !!(AudioContext && AudioContext.prototype.createMediaStreamSource),\n  supportMediaStream: !!(MediaStream && MediaStream.prototype.removeTrack),\n  supportScreenSharing: !!screenSharing,\n  // constructors\n  AudioContext: AudioContext,\n  PeerConnection: PC,\n  SessionDescription: SessionDescription,\n  IceCandidate: IceCandidate,\n  MediaStream: MediaStream,\n  getUserMedia: getUserMedia\n};","map":null,"metadata":{},"sourceType":"script"}