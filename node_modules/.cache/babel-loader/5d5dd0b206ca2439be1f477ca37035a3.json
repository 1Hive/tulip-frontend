{"ast":null,"code":"var _jsxFileName = \"/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Profile/components/AchievementTitle.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Text } from '@pancakeswap-libs/uikit';\nimport useI18n from 'hooks/useI18n';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AchievementTitle = ({\n  title,\n  ...props\n}) => {\n  _s();\n\n  const TranslateString = useI18n();\n\n  if (typeof title === 'string') {\n    return /*#__PURE__*/_jsxDEV(Text, {\n      bold: true,\n      ...props,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n  const {\n    id,\n    fallback,\n    data = {}\n  } = title;\n  return /*#__PURE__*/_jsxDEV(Text, {\n    bold: true,\n    ...props,\n    children: TranslateString(id, fallback, data)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AchievementTitle, \"SC/Zc+rnUQSfBje7TuuyRy0lI/g=\", false, function () {\n  return [useI18n];\n});\n\n_c = AchievementTitle;\nexport default AchievementTitle;\n\nvar _c;\n\n$RefreshReg$(_c, \"AchievementTitle\");","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Profile/components/AchievementTitle.tsx"],"names":["React","Text","useI18n","AchievementTitle","title","props","TranslateString","id","fallback","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAgC,yBAAhC;AACA,OAAOC,OAAP,MAAoB,eAApB;;;AAOA,MAAMC,gBAAiD,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CAAD,KAAyB;AAAA;;AACjF,QAAMC,eAAe,GAAGJ,OAAO,EAA/B;;AAEA,MAAI,OAAOE,KAAP,KAAiB,QAArB,EAA+B;AAC7B,wBACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA,SAAeC,KAAf;AAAA,gBACGD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,QAAM;AAAEG,IAAAA,EAAF;AAAMC,IAAAA,QAAN;AAAgBC,IAAAA,IAAI,GAAG;AAAvB,MAA8BL,KAApC;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA,OAAeC,KAAf;AAAA,cACGC,eAAe,CAACC,EAAD,EAAKC,QAAL,EAAeC,IAAf;AADlB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAlBD;;GAAMN,gB;UACoBD,O;;;KADpBC,gB;AAoBN,eAAeA,gBAAf","sourcesContent":["import React from 'react'\nimport { Text, TextProps } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { TranslatableText as AchievementTitleType } from 'state/types'\n\ninterface AchievementTitleProps extends TextProps {\n  title: AchievementTitleType\n}\n\nconst AchievementTitle: React.FC<AchievementTitleProps> = ({ title, ...props }) => {\n  const TranslateString = useI18n()\n\n  if (typeof title === 'string') {\n    return (\n      <Text bold {...props}>\n        {title}\n      </Text>\n    )\n  }\n\n  const { id, fallback, data = {} } = title\n\n  return (\n    <Text bold {...props}>\n      {TranslateString(id, fallback, data)}\n    </Text>\n  )\n}\n\nexport default AchievementTitle\n"]},"metadata":{},"sourceType":"module"}