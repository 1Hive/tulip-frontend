{"ast":null,"code":"const AbortController = require('./abort-controller');\n/**\n * Takes an array of AbortSignals and returns a single signal.\n * If any signals are aborted, the returned signal will be aborted.\n * @param {Array<AbortSignal>} signals\n * @returns {AbortSignal}\n */\n\n\nfunction anySignal(signals) {\n  const controller = new AbortController();\n\n  function onAbort() {\n    controller.abort();\n\n    for (const signal of signals) {\n      if (!signal || !signal.removeEventListener) continue;\n      signal.removeEventListener('abort', onAbort);\n    }\n  }\n\n  for (const signal of signals) {\n    if (!signal || !signal.addEventListener) continue;\n\n    if (signal.aborted) {\n      onAbort();\n      break;\n    }\n\n    signal.addEventListener('abort', onAbort);\n  }\n\n  return controller.signal;\n}\n\nmodule.exports = anySignal;\nmodule.exports.anySignal = anySignal;","map":null,"metadata":{},"sourceType":"script"}