{"ast":null,"code":"var _jsxFileName = \"/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Ifos/components/IfoCard/ContributeModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport BigNumber from 'bignumber.js';\nimport { Modal, Button, Flex, LinkExternal } from '@pancakeswap-libs/uikit';\nimport BalanceInput from 'components/Input/BalanceInput';\nimport useTokenBalance from 'hooks/useTokenBalance';\nimport { getFullDisplayBalance } from 'utils/formatBalance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContributeModal = ({\n  currency,\n  contract,\n  currencyAddress,\n  onDismiss\n}) => {\n  _s();\n\n  const [value, setValue] = useState('');\n  const [pendingTx, setPendingTx] = useState(false);\n  const {\n    account\n  } = useWallet();\n  const balance = getFullDisplayBalance(useTokenBalance(currencyAddress));\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: `Contribute ${currency}`,\n    onDismiss: onDismiss,\n    children: [/*#__PURE__*/_jsxDEV(BalanceInput, {\n      value: value,\n      onChange: e => setValue(e.currentTarget.value),\n      symbol: currency,\n      max: balance,\n      onSelectMax: () => setValue(balance.toString())\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"space-between\",\n      mb: \"24px\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"secondary\",\n        onClick: onDismiss,\n        mr: \"8px\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        disabled: pendingTx,\n        onClick: async () => {\n          setPendingTx(true);\n          await contract.methods.deposit(new BigNumber(value).times(new BigNumber(10).pow(18)).toString()).send({\n            from: account\n          });\n          setPendingTx(false);\n          onDismiss();\n        },\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LinkExternal, {\n      href: \"https://exchange.pancakeswap.finance/#/add/ETH/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\",\n      style: {\n        margin: 'auto'\n      },\n      children: `Get ${currency}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContributeModal, \"9/tF7YCkeZM1tytyCAXYpOrmfVA=\", false, function () {\n  return [useWallet, useTokenBalance];\n});\n\n_c = ContributeModal;\nexport default ContributeModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContributeModal\");","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Ifos/components/IfoCard/ContributeModal.tsx"],"names":["React","useState","useWallet","BigNumber","Modal","Button","Flex","LinkExternal","BalanceInput","useTokenBalance","getFullDisplayBalance","ContributeModal","currency","contract","currencyAddress","onDismiss","value","setValue","pendingTx","setPendingTx","account","balance","e","currentTarget","toString","methods","deposit","times","pow","send","from","margin"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,YAA9B,QAAkD,yBAAlD;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,SAASC,qBAAT,QAAsC,qBAAtC;;;AASA,MAAMC,eAAgC,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA,eAAtB;AAAuCC,EAAAA;AAAvC,CAAD,KAAwD;AAAA;;AAC/F,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAEmB,IAAAA;AAAF,MAAclB,SAAS,EAA7B;AACA,QAAMmB,OAAO,GAAGX,qBAAqB,CAACD,eAAe,CAACK,eAAD,CAAhB,CAArC;AAEA,sBACE,QAAC,KAAD;AAAO,IAAA,KAAK,EAAG,cAAaF,QAAS,EAArC;AAAwC,IAAA,SAAS,EAAEG,SAAnD;AAAA,4BACE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEC,KADT;AAEE,MAAA,QAAQ,EAAGM,CAAD,IAAOL,QAAQ,CAACK,CAAC,CAACC,aAAF,CAAgBP,KAAjB,CAF3B;AAGE,MAAA,MAAM,EAAEJ,QAHV;AAIE,MAAA,GAAG,EAAES,OAJP;AAKE,MAAA,WAAW,EAAE,MAAMJ,QAAQ,CAACI,OAAO,CAACG,QAAR,EAAD;AAL7B;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,IAAD;AAAM,MAAA,cAAc,EAAC,eAArB;AAAqC,MAAA,EAAE,EAAC,MAAxC;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,SAAS,MAAjB;AAAkB,QAAA,OAAO,EAAC,WAA1B;AAAsC,QAAA,OAAO,EAAET,SAA/C;AAA0D,QAAA,EAAE,EAAC,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,QAAQ,EAAEG,SAFZ;AAGE,QAAA,OAAO,EAAE,YAAY;AACnBC,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,gBAAMN,QAAQ,CAACY,OAAT,CACHC,OADG,CACK,IAAIvB,SAAJ,CAAca,KAAd,EAAqBW,KAArB,CAA2B,IAAIxB,SAAJ,CAAc,EAAd,EAAkByB,GAAlB,CAAsB,EAAtB,CAA3B,EAAsDJ,QAAtD,EADL,EAEHK,IAFG,CAEE;AAAEC,YAAAA,IAAI,EAAEV;AAAR,WAFF,CAAN;AAGAD,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAJ,UAAAA,SAAS;AACV,SAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eA2BE,QAAC,YAAD;AACE,MAAA,IAAI,EAAC,2FADP;AAEE,MAAA,KAAK,EAAE;AAAEgB,QAAAA,MAAM,EAAE;AAAV,OAFT;AAAA,gBAII,OAAMnB,QAAS;AAJnB;AAAA;AAAA;AAAA;AAAA,YA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CA1CD;;GAAMD,e;UAGgBT,S,EACkBO,e;;;KAJlCE,e;AA4CN,eAAeA,eAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { Modal, Button, Flex, LinkExternal } from '@pancakeswap-libs/uikit'\nimport BalanceInput from 'components/Input/BalanceInput'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface Props {\n  currency: string\n  contract: any\n  currencyAddress: string\n  onDismiss?: () => void\n}\n\nconst ContributeModal: React.FC<Props> = ({ currency, contract, currencyAddress, onDismiss }) => {\n  const [value, setValue] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWallet()\n  const balance = getFullDisplayBalance(useTokenBalance(currencyAddress))\n\n  return (\n    <Modal title={`Contribute ${currency}`} onDismiss={onDismiss}>\n      <BalanceInput\n        value={value}\n        onChange={(e) => setValue(e.currentTarget.value)}\n        symbol={currency}\n        max={balance}\n        onSelectMax={() => setValue(balance.toString())}\n      />\n      <Flex justifyContent=\"space-between\" mb=\"24px\">\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss} mr=\"8px\">\n          Cancel\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await contract.methods\n              .deposit(new BigNumber(value).times(new BigNumber(10).pow(18)).toString())\n              .send({ from: account })\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          Confirm\n        </Button>\n      </Flex>\n      <LinkExternal\n        href=\"https://exchange.pancakeswap.finance/#/add/ETH/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\"\n        style={{ margin: 'auto' }}\n      >\n        {`Get ${currency}`}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default ContributeModal\n"]},"metadata":{},"sourceType":"module"}