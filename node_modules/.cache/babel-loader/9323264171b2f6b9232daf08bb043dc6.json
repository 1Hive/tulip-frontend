{"ast":null,"code":"'use strict';\n\nconst BufferList = require('bl/BufferList');\n\nmodule.exports = async function* fixedSizeChunker(source, options) {\n  let bl = new BufferList();\n  let currentLength = 0;\n  let emitted = false;\n  const maxChunkSize = options.maxChunkSize;\n\n  for await (const buffer of source) {\n    bl.append(buffer);\n    currentLength += buffer.length;\n\n    while (currentLength >= maxChunkSize) {\n      yield bl.slice(0, maxChunkSize);\n      emitted = true; // throw away consumed bytes\n\n      if (maxChunkSize === bl.length) {\n        bl = new BufferList();\n        currentLength = 0;\n      } else {\n        const newBl = new BufferList();\n        newBl.append(bl.shallowSlice(maxChunkSize));\n        bl = newBl; // update our offset\n\n        currentLength -= maxChunkSize;\n      }\n    }\n  }\n\n  if (!emitted || currentLength) {\n    // return any remaining bytes or an empty buffer\n    yield bl.slice(0, currentLength);\n  }\n};","map":null,"metadata":{},"sourceType":"script"}