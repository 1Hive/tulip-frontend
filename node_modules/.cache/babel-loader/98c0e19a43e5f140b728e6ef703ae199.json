{"ast":null,"code":"import _styled11 from \"styled-components\";\nimport _styled10 from \"styled-components\";\nimport _styled9 from \"styled-components\";\nimport _styled8 from \"styled-components\";\nimport _styled7 from \"styled-components\";\nimport _styled6 from \"styled-components\";\nimport _styled5 from \"styled-components\";\nimport _styled4 from \"styled-components\";\nimport _styled3 from \"styled-components\";\nimport _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/fabianmolina/Documents/1hive/tulip-frontend/src/components/Account/ScreenConnected.js\";\nimport React from 'react';\nimport { Button, ButtonBase, GU, IconCheck, IconCopy, RADIUS, textStyle, useTheme } from '@1hive/1hive-ui';\nimport IdentityBadge from '../IdentityBadge';\nimport { getProviderFromUseWalletId } from '../../ethereum-providers';\nimport { useCopyToClipboard } from '../../hooks/useCopyToClipboard';\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"ScreenConnected___StyledDiv\",\n  componentId: \"sc-1ok1sn0-0\"\n})([\"padding:\", \"px;\"], p => p._css);\n\nvar _StyledDiv2 = _styled(\"div\").withConfig({\n  displayName: \"ScreenConnected___StyledDiv2\",\n  componentId: \"sc-1ok1sn0-1\"\n})([\"display:flex;align-items:center;width:100%;\"]);\n\nvar _StyledDiv3 = _styled(\"div\").withConfig({\n  displayName: \"ScreenConnected___StyledDiv3\",\n  componentId: \"sc-1ok1sn0-2\"\n})([\"display:flex;align-items:center;margin-right:\", \"px;\"], p => p._css2);\n\nvar _StyledImg = _styled(\"img\").withConfig({\n  displayName: \"ScreenConnected___StyledImg\",\n  componentId: \"sc-1ok1sn0-3\"\n})([\"width:\", \"px;height:\", \"px;margin-right:\", \"px;transform:translateY(-2px);\"], p => p._css3, p => p._css4, p => p._css5);\n\nvar _StyledDiv4 = _styled(\"div\").withConfig({\n  displayName: \"ScreenConnected___StyledDiv4\",\n  componentId: \"sc-1ok1sn0-4\"\n})([\"display:flex;align-items:center;justify-content:flex-end;width:100%;\"]);\n\nvar _StyledButtonBase = _styled(ButtonBase).withConfig({\n  displayName: \"ScreenConnected___StyledButtonBase\",\n  componentId: \"sc-1ok1sn0-5\"\n})([\"display:flex;align-items:center;justify-self:flex-end;padding:\", \"px;&:active{background:\", \";}\"], p => p._css6, p => p._css7);\n\nvar _StyledIdentityBadge = _styled(IdentityBadge).withConfig({\n  displayName: \"ScreenConnected___StyledIdentityBadge\",\n  componentId: \"sc-1ok1sn0-6\"\n})([\"cursor:pointer\"]);\n\nvar _StyledIconCopy = _styled(IconCopy).withConfig({\n  displayName: \"ScreenConnected___StyledIconCopy\",\n  componentId: \"sc-1ok1sn0-7\"\n})([\"color:\", \";\"], p => p._css8);\n\nvar _StyledDiv5 = _styled(\"div\").withConfig({\n  displayName: \"ScreenConnected___StyledDiv5\",\n  componentId: \"sc-1ok1sn0-8\"\n})([\"display:flex;align-items:center;margin-top:\", \"px;color:\", \";\", \";\"], p => p._css9, p => p._css10, p => p._css11);\n\nvar _StyledSpan = _styled(\"span\").withConfig({\n  displayName: \"ScreenConnected___StyledSpan\",\n  componentId: \"sc-1ok1sn0-9\"\n})([\"margin-left:\", \"px;\"], p => p._css12);\n\nvar _StyledButton = _styled(Button).withConfig({\n  displayName: \"ScreenConnected___StyledButton\",\n  componentId: \"sc-1ok1sn0-10\"\n})([\"margin-top:\", \"px;\"], p => p._css13);\n\nfunction AccountScreenConnected({\n  wallet\n}) {\n  const theme = useTheme();\n  const copy = useCopyToClipboard();\n  const walletNetworkName = wallet.networkName;\n  const providerInfo = getProviderFromUseWalletId(wallet.connector);\n  return /*#__PURE__*/React.createElement(_StyledDiv, {\n    _css: 2 * GU,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_StyledDiv2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_StyledDiv3, {\n    _css2: 3 * GU,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_StyledImg, {\n    src: providerInfo.image,\n    alt: \"\",\n    _css3: 2.5 * GU,\n    _css4: 2.5 * GU,\n    _css5: 0.5 * GU,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, providerInfo.id === 'unknown' ? 'Wallet' : providerInfo.name)), /*#__PURE__*/React.createElement(_StyledDiv4, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_StyledButtonBase, {\n    onClick: () => copy(wallet.account),\n    focusRingRadius: RADIUS,\n    _css6: 0.5 * GU,\n    _css7: theme.surfacePressed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_StyledIdentityBadge, {\n    entity: wallet.account,\n    compact: true,\n    badgeOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(_StyledIconCopy, {\n    _css8: theme.hint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(_StyledDiv5, {\n    _css9: 1 * GU,\n    _css10: theme.positive,\n    _css11: textStyle('label2'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconCheck, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(_StyledSpan, {\n    _css12: 0.5 * GU,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, `Connected to Ethereum ${walletNetworkName} Network`)), /*#__PURE__*/React.createElement(_StyledButton, {\n    onClick: () => wallet.reset(),\n    wide: true,\n    _css13: 1 * GU,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, \"Disconnect wallet\"));\n}\n\nexport default AccountScreenConnected;","map":{"version":3,"sources":["/Users/fabianmolina/Documents/1hive/tulip-frontend/src/components/Account/ScreenConnected.js"],"names":["React","Button","ButtonBase","GU","IconCheck","IconCopy","RADIUS","textStyle","useTheme","IdentityBadge","getProviderFromUseWalletId","useCopyToClipboard","AccountScreenConnected","wallet","theme","copy","walletNetworkName","networkName","providerInfo","connector","image","id","name","account","surfacePressed","hint","positive","reset"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,UAFF,EAGEC,EAHF,EAIEC,SAJF,EAKEC,QALF,EAMEC,MANF,EAOEC,SAPF,EAQEC,QARF,QASO,iBATP;AAUA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,SAASC,0BAAT,QAA2C,0BAA3C;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAASC,sBAAT,CAAgC;AAAEC,EAAAA;AAAF,CAAhC,EAA4C;AAC1C,QAAMC,KAAK,GAAGN,QAAQ,EAAtB;AACA,QAAMO,IAAI,GAAGJ,kBAAkB,EAA/B;AAEA,QAAMK,iBAAiB,GAAGH,MAAM,CAACI,WAAjC;AAEA,QAAMC,YAAY,GAAGR,0BAA0B,CAACG,MAAM,CAACM,SAAR,CAA/C;AAEA,sBACE;AAAA,UAEe,IAAIhB,EAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAA,WAIoB,IAAIA,EAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AACE,IAAA,GAAG,EAAEe,YAAY,CAACE,KADpB;AAEE,IAAA,GAAG,EAAC,EAFN;AAAA,WAIa,MAAMjB,EAJnB;AAAA,WAKc,MAAMA,EALpB;AAAA,WAMoB,MAAMA,EAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGe,YAAY,CAACG,EAAb,KAAoB,SAApB,GAAgC,QAAhC,GAA2CH,YAAY,CAACI,IAD3D,CAjBF,CAPF,eA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AACE,IAAA,OAAO,EAAE,MAAMP,IAAI,CAACF,MAAM,CAACU,OAAR,CADrB;AAEE,IAAA,eAAe,EAAEjB,MAFnB;AAAA,WAOe,MAAMH,EAPrB;AAAA,WASoBW,KAAK,CAACU,cAT1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAaE;AACE,IAAA,MAAM,EAAEX,MAAM,CAACU,OADjB;AAEE,IAAA,OAAO,MAFT;AAGE,IAAA,SAAS,MAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,eAmBE;AAAA,WAEaT,KAAK,CAACW,IAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CARF,CA5BF,CALF,eAoEE;AAAA,WAIkB,IAAItB,EAJtB;AAAA,YAKaW,KAAK,CAACY,QALnB;AAAA,YAMMnB,SAAS,CAAC,QAAD,CANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAUE;AAAA,YAEmB,MAAMJ,EAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,yBAAwBa,iBAAkB,UAL9C,CAVF,CApEF,eAuFE;AACE,IAAA,OAAO,EAAE,MAAMH,MAAM,CAACc,KAAP,EADjB;AAEE,IAAA,IAAI,MAFN;AAAA,YAIkB,IAAIxB,EAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAvFF,CADF;AAmGD;;AAED,eAAeS,sBAAf","sourcesContent":["import React from 'react'\r\nimport {\r\n  Button,\r\n  ButtonBase,\r\n  GU,\r\n  IconCheck,\r\n  IconCopy,\r\n  RADIUS,\r\n  textStyle,\r\n  useTheme,\r\n} from '@1hive/1hive-ui'\r\nimport IdentityBadge from '../IdentityBadge'\r\nimport { getProviderFromUseWalletId } from '../../ethereum-providers'\r\nimport { useCopyToClipboard } from '../../hooks/useCopyToClipboard'\r\n\r\nfunction AccountScreenConnected({ wallet }) {\r\n  const theme = useTheme()\r\n  const copy = useCopyToClipboard()\r\n\r\n  const walletNetworkName = wallet.networkName\r\n\r\n  const providerInfo = getProviderFromUseWalletId(wallet.connector)\r\n\r\n  return (\r\n    <div\r\n      css={`\r\n        padding: ${2 * GU}px;\r\n      `}\r\n    >\r\n      <div\r\n        css={`\r\n          display: flex;\r\n          align-items: center;\r\n          width: 100%;\r\n        `}\r\n      >\r\n        <div\r\n          css={`\r\n            display: flex;\r\n            align-items: center;\r\n            margin-right: ${3 * GU}px;\r\n          `}\r\n        >\r\n          <img\r\n            src={providerInfo.image}\r\n            alt=\"\"\r\n            css={`\r\n              width: ${2.5 * GU}px;\r\n              height: ${2.5 * GU}px;\r\n              margin-right: ${0.5 * GU}px;\r\n              transform: translateY(-2px);\r\n            `}\r\n          />\r\n          <span>\r\n            {providerInfo.id === 'unknown' ? 'Wallet' : providerInfo.name}\r\n          </span>\r\n        </div>\r\n        <div\r\n          css={`\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: flex-end;\r\n            width: 100%;\r\n          `}\r\n        >\r\n          <ButtonBase\r\n            onClick={() => copy(wallet.account)}\r\n            focusRingRadius={RADIUS}\r\n            css={`\r\n              display: flex;\r\n              align-items: center;\r\n              justify-self: flex-end;\r\n              padding: ${0.5 * GU}px;\r\n              &:active {\r\n                background: ${theme.surfacePressed};\r\n              }\r\n            `}\r\n          >\r\n            <IdentityBadge\r\n              entity={wallet.account}\r\n              compact\r\n              badgeOnly\r\n              css=\"cursor: pointer\"\r\n            />\r\n            <IconCopy\r\n              css={`\r\n                color: ${theme.hint};\r\n              `}\r\n            />\r\n          </ButtonBase>\r\n        </div>\r\n      </div>\r\n      <div\r\n        css={`\r\n          display: flex;\r\n          align-items: center;\r\n          margin-top: ${1 * GU}px;\r\n          color: ${theme.positive};\r\n          ${textStyle('label2')};\r\n        `}\r\n      >\r\n        <IconCheck size=\"small\" />\r\n        <span\r\n          css={`\r\n            margin-left: ${0.5 * GU}px;\r\n          `}\r\n        >\r\n          {`Connected to Ethereum ${walletNetworkName} Network`}\r\n        </span>\r\n      </div>\r\n\r\n      <Button\r\n        onClick={() => wallet.reset()}\r\n        wide\r\n        css={`\r\n          margin-top: ${1 * GU}px;\r\n        `}\r\n      >\r\n        Disconnect wallet\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AccountScreenConnected\r\n"]},"metadata":{},"sourceType":"module"}