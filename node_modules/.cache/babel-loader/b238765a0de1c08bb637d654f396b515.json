{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar slicedToArray = require('./slicedToArray-a8a77f0e.js');\n\nrequire('./unsupportedIterableToArray-f175acfa.js');\n\nvar React = require('react');\n\nrequire('./_commonjsHelpers-1b94f6bc.js');\n\nvar index$1 = require('./index-46d0e707.js');\n\nrequire('./defineProperty-3cad0327.js');\n\nrequire('./toConsumableArray-cc0d28a9.js');\n\nvar _styled = require('styled-components');\n\nrequire('./getPrototypeOf-55c9e80c.js');\n\nrequire('./color.js');\n\nrequire('./miscellaneous.js');\n\nrequire('./environment.js');\n\nrequire('./theme-dark.js');\n\nrequire('./theme-light.js');\n\nvar Theme = require('./Theme.js');\n\nvar _extends = require('./extends-023d783e.js');\n\nvar objectWithoutProperties = require('./objectWithoutProperties-c6d3675c.js');\n\nvar index = require('./index-4def0554.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\nvar _styled__default = /*#__PURE__*/_interopDefaultLegacy(_styled);\n\nvar spin = _styled.keyframes([\"from{transform:rotate(0deg);}to{transform:rotate(360deg);}\"]);\n\nvar SIZE_SMALL = 14;\nvar SIZE_MEDIUM = 24;\nvar CONTAINER_SIZE_SMALL = 22;\nvar CONTAINER_SIZE_MEDIUM = 24;\nvar BORDER_WIDTH_STRONG = 2.5;\nvar BORDER_WIDTH_MEDIUM = 1;\nvar lastInstanceId = 1;\n\nvar _StyledSpan = _styled__default['default'](\"span\").withConfig({\n  displayName: \"LoadingRing___StyledSpan\",\n  componentId: \"iauf6f-0\"\n})([\"position:relative;display:flex;align-items:center;justify-content:center;width:\", \"px;height:\", \"px;\"], function (p) {\n  return p._css;\n}, function (p) {\n  return p._css2;\n});\n\nvar _StyledCircle = _styled__default['default'](\"circle\").withConfig({\n  displayName: \"LoadingRing___StyledCircle\",\n  componentId: \"iauf6f-1\"\n})([\"animation-duration:1s;animation-iteration-count:infinite;animation-timing-function:linear;animation-name:\", \";transform-origin:50% 50%;\"], function (p) {\n  return p._css3;\n});\n\nvar LoadingRing = /*#__PURE__*/React__default['default'].memo(function LoadingRing(_ref) {\n  var paused = _ref.paused,\n      modeProp = _ref.mode,\n      props = objectWithoutProperties.objectWithoutProperties(_ref, [\"paused\", \"mode\"]);\n  var theme = Theme.useTheme();\n\n  var _useState = React.useState(function () {\n    return \"sync-indicator-\".concat(lastInstanceId++);\n  }),\n      _useState2 = slicedToArray.slicedToArray(_useState, 1),\n      instanceId = _useState2[0];\n\n  var _useInside = index.o('FloatIndicator'),\n      _useInside2 = slicedToArray.slicedToArray(_useInside, 1),\n      insideFloatIndicator = _useInside2[0];\n\n  var mode = modeProp || (insideFloatIndicator ? 'half-circle' : 'two-parts');\n  var containerSize = mode === 'half-circle' ? CONTAINER_SIZE_MEDIUM : CONTAINER_SIZE_SMALL;\n  var borderWidth = mode === 'half-circle' ? BORDER_WIDTH_STRONG : BORDER_WIDTH_MEDIUM;\n  var size = (mode === 'half-circle' ? SIZE_MEDIUM : SIZE_SMALL) - borderWidth;\n\n  var _useMemo = React.useMemo(function () {\n    var length = Math.PI * size; // Both modes display a full circle when paused.\n\n    if (paused) {\n      return [0, length];\n    }\n\n    if (mode === 'two-parts') {\n      return [length / 4, length / 4];\n    } // half-circle\n\n\n    return [length / 2, length / 2];\n  }, [mode, size, paused]),\n      _useMemo2 = slicedToArray.slicedToArray(_useMemo, 2),\n      gapLength = _useMemo2[0],\n      dashLength = _useMemo2[1];\n\n  return /*#__PURE__*/React__default['default'].createElement(_StyledSpan, _extends._extends_1({}, props, {\n    _css: containerSize,\n    _css2: containerSize\n  }), /*#__PURE__*/React__default['default'].createElement(\"svg\", {\n    width: size + borderWidth,\n    height: size + borderWidth,\n    viewBox: \"0 0 \".concat(size + borderWidth, \" \").concat(size + borderWidth)\n  }, /*#__PURE__*/React__default['default'].createElement(\"linearGradient\", {\n    id: \"\".concat(instanceId, \"-gradient\"),\n    gradientTransform: \"rotate(90)\"\n  }, /*#__PURE__*/React__default['default'].createElement(\"stop\", {\n    offset: \"0%\",\n    stopColor: theme.accentEnd\n  }), /*#__PURE__*/React__default['default'].createElement(\"stop\", {\n    offset: \"100%\",\n    stopColor: theme.accentStart\n  })), insideFloatIndicator && /*#__PURE__*/React__default['default'].createElement(\"circle\", {\n    cx: \"50%\",\n    cy: \"50%\",\n    r: size / 2,\n    fill: \"transparent\",\n    stroke: theme.floatingContent.alpha(0.3),\n    strokeWidth: borderWidth\n  }), /*#__PURE__*/React__default['default'].createElement(\"mask\", {\n    id: \"\".concat(instanceId, \"-mask\")\n  }, /*#__PURE__*/React__default['default'].createElement(_StyledCircle, {\n    cx: \"50%\",\n    cy: \"50%\",\n    r: size / 2,\n    fill: \"transparent\",\n    stroke: \"url(#\".concat(instanceId, \"-gradient)\"),\n    strokeWidth: borderWidth,\n    strokeDasharray: \"\".concat(dashLength, \" \").concat(gapLength),\n    _css3: paused ? 'none' : spin\n  })), /*#__PURE__*/React__default['default'].createElement(\"circle\", {\n    cx: \"50%\",\n    cy: \"50%\",\n    r: size / 2 + borderWidth / 2,\n    fill: \"url(#\".concat(instanceId, \"-gradient)\"),\n    mask: \"url(#\".concat(instanceId, \"-mask)\")\n  })));\n});\nLoadingRing.propTypes = {\n  mode: index$1.propTypes.oneOf(['two-parts', 'half-circle']),\n  paused: index$1.propTypes.bool\n};\nLoadingRing.defaultProps = {\n  paused: false\n};\nexports.default = LoadingRing;","map":{"version":3,"sources":["../src/components/LoadingRing/LoadingRing.js"],"names":["spin","keyframes","SIZE_SMALL","SIZE_MEDIUM","CONTAINER_SIZE_SMALL","CONTAINER_SIZE_MEDIUM","BORDER_WIDTH_STRONG","BORDER_WIDTH_MEDIUM","lastInstanceId","LoadingRing","paused","mode","modeProp","props","theme","useTheme","instanceId","useState","insideFloatIndicator","useInside","containerSize","borderWidth","size","gapLength","dashLength","useMemo","length","Math","accentEnd","accentStart","PropTypes","bool"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { keyframes } from 'styled-components'\nimport { useInside } from 'use-inside'\nimport { useTheme } from '../../theme'\n\nconst spin = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst SIZE_SMALL = 14\nconst SIZE_MEDIUM = 24\n\nconst CONTAINER_SIZE_SMALL = 22\nconst CONTAINER_SIZE_MEDIUM = 24\n\nconst BORDER_WIDTH_STRONG = 2.5\nconst BORDER_WIDTH_MEDIUM = 1\n\nlet lastInstanceId = 1\n\nconst LoadingRing = React.memo(function LoadingRing({\n  paused,\n  mode: modeProp,\n  ...props\n}) {\n  const theme = useTheme()\n  const [instanceId] = useState(() => `sync-indicator-${lastInstanceId++}`)\n  const [insideFloatIndicator] = useInside('FloatIndicator')\n\n  const mode = modeProp || (insideFloatIndicator ? 'half-circle' : 'two-parts')\n\n  const containerSize =\n    mode === 'half-circle' ? CONTAINER_SIZE_MEDIUM : CONTAINER_SIZE_SMALL\n  const borderWidth =\n    mode === 'half-circle' ? BORDER_WIDTH_STRONG : BORDER_WIDTH_MEDIUM\n  const size = (mode === 'half-circle' ? SIZE_MEDIUM : SIZE_SMALL) - borderWidth\n\n  const [gapLength, dashLength] = useMemo(() => {\n    const length = Math.PI * size\n\n    // Both modes display a full circle when paused.\n    if (paused) {\n      return [0, length]\n    }\n\n    if (mode === 'two-parts') {\n      return [length / 4, length / 4]\n    }\n\n    // half-circle\n    return [length / 2, length / 2]\n  }, [mode, size, paused])\n\n  return (\n    <span\n      css={`\n        position: relative;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: ${containerSize}px;\n        height: ${containerSize}px;\n      `}\n      {...props}\n    >\n      <svg\n        width={size + borderWidth}\n        height={size + borderWidth}\n        viewBox={`0 0 ${size + borderWidth} ${size + borderWidth}`}\n      >\n        <linearGradient\n          id={`${instanceId}-gradient`}\n          gradientTransform=\"rotate(90)\"\n        >\n          <stop offset=\"0%\" stopColor={theme.accentEnd} />\n          <stop offset=\"100%\" stopColor={theme.accentStart} />\n        </linearGradient>\n        {insideFloatIndicator && (\n          <circle\n            cx=\"50%\"\n            cy=\"50%\"\n            r={size / 2}\n            fill=\"transparent\"\n            stroke={theme.floatingContent.alpha(0.3)}\n            strokeWidth={borderWidth}\n          />\n        )}\n        <mask id={`${instanceId}-mask`}>\n          <circle\n            cx=\"50%\"\n            cy=\"50%\"\n            r={size / 2}\n            fill=\"transparent\"\n            stroke={`url(#${instanceId}-gradient)`}\n            strokeWidth={borderWidth}\n            strokeDasharray={`${dashLength} ${gapLength}`}\n            css={`\n              animation-duration: 1s;\n              animation-iteration-count: infinite;\n              animation-timing-function: linear;\n              animation-name: ${paused ? 'none' : spin};\n              transform-origin: 50% 50%;\n            `}\n          />\n        </mask>\n        <circle\n          cx=\"50%\"\n          cy=\"50%\"\n          r={size / 2 + borderWidth / 2}\n          fill={`url(#${instanceId}-gradient)`}\n          mask={`url(#${instanceId}-mask)`}\n        />\n      </svg>\n    </span>\n  )\n})\n\nLoadingRing.propTypes = {\n  mode: PropTypes.oneOf(['two-parts', 'half-circle']),\n  paused: PropTypes.bool,\n}\n\nLoadingRing.defaultProps = {\n  paused: false,\n}\n\nexport default LoadingRing\n"]},"metadata":{},"sourceType":"script"}