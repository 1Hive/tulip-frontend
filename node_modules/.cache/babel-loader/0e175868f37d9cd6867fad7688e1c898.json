{"ast":null,"code":"'use strict';\n\nconst multibase = require('multibase');\n\nconst errcode = require('err-code');\n\nconst namespace = '/record/';\nconst base64urlCode = 'u'; // base64url code from multibase\n\nmodule.exports.encodeBase32 = buf => {\n  return multibase.encode('base32', buf).slice(1); // slice off multibase codec\n}; // converts a binary record key to a pubsub topic key.\n\n\nmodule.exports.keyToTopic = key => {\n  // Record-store keys are arbitrary binary. However, pubsub requires UTF-8 string topic IDs\n  // Encodes to \"/record/base64url(key)\"\n  const b64url = multibase.encode('base64url', key).slice(1).toString();\n  return `${namespace}${b64url}`;\n}; // converts a pubsub topic key to a binary record key.\n\n\nmodule.exports.topicToKey = topic => {\n  if (topic.substring(0, namespace.length) !== namespace) {\n    throw errcode(new Error('topic received is not from a record'), 'ERR_TOPIC_IS_NOT_FROM_RECORD_NAMESPACE');\n  }\n\n  const key = `${base64urlCode}${topic.substring(namespace.length)}`;\n  return multibase.decode(key);\n};","map":null,"metadata":{},"sourceType":"script"}