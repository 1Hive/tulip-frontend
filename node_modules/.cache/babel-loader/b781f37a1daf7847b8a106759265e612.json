{"ast":null,"code":"var _jsxFileName = \"/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/components/Menu/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport { allLanguages } from 'config/localisation/languageCodes';\nimport { LanguageContext } from 'contexts/Localisation/languageContext';\nimport useTheme from 'hooks/useTheme';\nimport { usePriceCakeBusd, useProfile } from 'state/hooks';\nimport config from './config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Menu = props => {\n  _s();\n\n  var _profile$nft;\n\n  const {\n    account,\n    connect,\n    reset\n  } = useWallet();\n  const {\n    selectedLanguage,\n    setSelectedLanguage\n  } = useContext(LanguageContext);\n  const {\n    isDark,\n    toggleTheme\n  } = useTheme();\n  const cakePriceUsd = usePriceCakeBusd();\n  const {\n    profile\n  } = useProfile();\n  return /*#__PURE__*/_jsxDEV(UikitMenu, {\n    account: account,\n    login: connect,\n    logout: reset,\n    isDark: isDark,\n    toggleTheme: toggleTheme,\n    currentLang: selectedLanguage && selectedLanguage.code,\n    langs: allLanguages,\n    setLang: setSelectedLanguage,\n    cakePriceUsd: cakePriceUsd.toNumber(),\n    links: config,\n    profile: {\n      username: profile === null || profile === void 0 ? void 0 : profile.username,\n      image: (profile === null || profile === void 0 ? void 0 : profile.nft) ? `/images/nfts/${(_profile$nft = profile.nft) === null || _profile$nft === void 0 ? void 0 : _profile$nft.images.sm}` : undefined,\n      profileLink: '/profile',\n      noProfileLink: '/profile',\n      showPip: !(profile === null || profile === void 0 ? void 0 : profile.username)\n    },\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Menu, \"ZqQ9CTk0PlbxzJWcenr2gMf3Z3k=\", false, function () {\n  return [useWallet, useTheme, usePriceCakeBusd, useProfile];\n});\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/components/Menu/index.tsx"],"names":["React","useContext","Menu","UikitMenu","useWallet","allLanguages","LanguageContext","useTheme","usePriceCakeBusd","useProfile","config","props","account","connect","reset","selectedLanguage","setSelectedLanguage","isDark","toggleTheme","cakePriceUsd","profile","code","toNumber","username","image","nft","images","sm","undefined","profileLink","noProfileLink","showPip"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAI,IAAIC,SAAjB,QAAkC,yBAAlC;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,SAASC,YAAT,QAA6B,mCAA7B;AACA,SAASC,eAAT,QAAgC,uCAAhC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,aAA7C;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMR,IAAI,GAAIS,KAAD,IAAW;AAAA;;AAAA;;AACtB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,MAA8BV,SAAS,EAA7C;AACA,QAAM;AAAEW,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAA4Cf,UAAU,CAACK,eAAD,CAA5D;AACA,QAAM;AAAEW,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA0BX,QAAQ,EAAxC;AACA,QAAMY,YAAY,GAAGX,gBAAgB,EAArC;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAcX,UAAU,EAA9B;AAEA,sBACE,QAAC,SAAD;AACE,IAAA,OAAO,EAAEG,OADX;AAEE,IAAA,KAAK,EAAEC,OAFT;AAGE,IAAA,MAAM,EAAEC,KAHV;AAIE,IAAA,MAAM,EAAEG,MAJV;AAKE,IAAA,WAAW,EAAEC,WALf;AAME,IAAA,WAAW,EAAEH,gBAAgB,IAAIA,gBAAgB,CAACM,IANpD;AAOE,IAAA,KAAK,EAAEhB,YAPT;AAQE,IAAA,OAAO,EAAEW,mBARX;AASE,IAAA,YAAY,EAAEG,YAAY,CAACG,QAAb,EAThB;AAUE,IAAA,KAAK,EAAEZ,MAVT;AAWE,IAAA,OAAO,EAAE;AACPa,MAAAA,QAAQ,EAAEH,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEG,QADZ;AAEPC,MAAAA,KAAK,EAAE,CAAAJ,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEK,GAAT,IAAgB,gBAAD,gBAAgBL,OAAO,CAACK,GAAxB,iDAAgB,aAAaC,MAAb,CAAoBC,EAAG,EAAtD,GAA0DC,SAF1D;AAGPC,MAAAA,WAAW,EAAE,UAHN;AAIPC,MAAAA,aAAa,EAAE,UAJR;AAKPC,MAAAA,OAAO,EAAE,EAACX,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEG,QAAV;AALF,KAXX;AAAA,OAkBMZ;AAlBN;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA7BD;;GAAMT,I;UACgCE,S,EAEJG,Q,EACXC,gB,EACDC,U;;;KALhBP,I;AA+BN,eAAeA,IAAf","sourcesContent":["import React, { useContext } from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd, useProfile } from 'state/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n"]},"metadata":{},"sourceType":"module"}