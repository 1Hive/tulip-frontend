{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar webcrypto = require('../webcrypto');\n\nvar lengths = require('./lengths');\n\nvar hashTypes = {\n  SHA1: 'SHA-1',\n  SHA256: 'SHA-256',\n  SHA512: 'SHA-512'\n};\n\nvar sign = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(key, data) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = Buffer;\n            _context.next = 3;\n            return webcrypto.get().subtle.sign({\n              name: 'HMAC'\n            }, key, data);\n\n          case 3:\n            _context.t1 = _context.sent;\n            return _context.abrupt(\"return\", _context.t0.from.call(_context.t0, _context.t1));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function sign(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.create = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(hashType, secret) {\n    var hash, key;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            hash = hashTypes[hashType];\n            _context3.next = 3;\n            return webcrypto.get().subtle.importKey('raw', secret, {\n              name: 'HMAC',\n              hash: {\n                name: hash\n              }\n            }, false, ['sign']);\n\n          case 3:\n            key = _context3.sent;\n            return _context3.abrupt(\"return\", {\n              digest: function digest(data) {\n                return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          return _context2.abrupt(\"return\", sign(key, data));\n\n                        case 1:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }))();\n              },\n              length: lengths[hashType]\n            });\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"script"}