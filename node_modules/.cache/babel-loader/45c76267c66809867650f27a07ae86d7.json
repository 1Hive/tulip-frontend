{"ast":null,"code":"var _jsxFileName = \"/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Home/components/LotteryCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Heading, Card, CardBody, Button, useModal } from '@pancakeswap-libs/uikit';\nimport { getCakeAddress } from 'utils/addressHelpers';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport useI18n from 'hooks/useI18n';\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn';\nimport useTokenBalance from 'hooks/useTokenBalance';\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery';\nimport { useTotalClaim } from 'hooks/useTickets';\nimport BuyModal from 'views/Lottery/components/TicketCard/BuyTicketModal';\nimport { useLotteryAllowance } from 'hooks/useAllowance';\nimport { useApproval } from 'hooks/useApproval';\nimport PurchaseWarningModal from 'views/Lottery/components/TicketCard/PurchaseWarningModal';\nimport CakeWinnings from './CakeWinnings';\nimport LotteryJackpot from './LotteryJackpot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledLotteryCard = styled(Card)`\n  background-image: url('/images/ticket-bg.svg');\n  background-repeat: no-repeat;\n  background-position: top right;\n  min-height: 376px;\n`;\n_c = StyledLotteryCard;\nconst Block = styled.div`\n  margin-bottom: 16px;\n`;\n_c2 = Block;\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`;\n_c3 = CardImage;\nconst Label = styled.div`\n  color: ${({\n  theme\n}) => theme.colors.textSubtle};\n  font-size: 14px;\n`;\n_c4 = Label;\nconst Actions = styled.div`\n  display: flex;\n  margin-top: 24px;\n  button {\n    flex: 1 0 50%;\n  }\n`;\n_c5 = Actions;\n\nconst FarmedStakingCard = () => {\n  _s();\n\n  const lotteryHasDrawn = useGetLotteryHasDrawn();\n  const [requesteClaim, setRequestedClaim] = useState(false);\n  const TranslateString = useI18n();\n  const allowance = useLotteryAllowance();\n  const [onPresentApprove] = useModal( /*#__PURE__*/_jsxDEV(PurchaseWarningModal, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 39\n  }, this));\n  const {\n    claimAmount\n  } = useTotalClaim();\n  const {\n    onMultiClaim\n  } = useMultiClaimLottery();\n  const cakeBalance = useTokenBalance(getCakeAddress());\n  const {\n    handleApprove,\n    requestedApproval\n  } = useApproval(onPresentApprove);\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true);\n      const txHash = await onMultiClaim(); // user rejected tx or didn't go thru\n\n      if (txHash) {\n        setRequestedClaim(false);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }, [onMultiClaim, setRequestedClaim]);\n\n  const renderLotteryTicketButtonBuyOrApprove = () => {\n    if (!allowance.toNumber()) {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        disabled: requestedApproval,\n        onClick: handleApprove,\n        children: TranslateString(494, 'Approve CAKE')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Button, {\n      id: \"dashboard-buy-tickets\",\n      variant: \"secondary\",\n      onClick: onPresentBuy,\n      disabled: lotteryHasDrawn,\n      children: TranslateString(558, 'Buy Tickets')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  };\n\n  const [onPresentBuy] = useModal( /*#__PURE__*/_jsxDEV(BuyModal, {\n    max: cakeBalance,\n    tokenName: \"CAKE\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 35\n  }, this));\n  return /*#__PURE__*/_jsxDEV(StyledLotteryCard, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        size: \"xl\",\n        mb: \"24px\",\n        children: TranslateString(550, 'Your Lottery Winnings')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardImage, {\n        src: \"/images/ticket.svg\",\n        alt: \"cake logo\",\n        width: 64,\n        height: 64\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Block, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: [TranslateString(552, 'CAKE to Collect'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CakeWinnings, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Block, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: [TranslateString(554, 'Total jackpot this round'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LotteryJackpot, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          id: \"dashboard-collect-winnings\",\n          disabled: getBalanceNumber(claimAmount) === 0 || requesteClaim,\n          onClick: handleClaim,\n          style: {\n            marginRight: '8px'\n          },\n          children: TranslateString(556, 'Collect Winnings')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), renderLotteryTicketButtonBuyOrApprove()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FarmedStakingCard, \"O3uP8hNQWAgiRJ/JfzrhGvXeA/E=\", false, function () {\n  return [useGetLotteryHasDrawn, useI18n, useLotteryAllowance, useModal, useTotalClaim, useMultiClaimLottery, useTokenBalance, useApproval, useModal];\n});\n\n_c6 = FarmedStakingCard;\nexport default FarmedStakingCard;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"StyledLotteryCard\");\n$RefreshReg$(_c2, \"Block\");\n$RefreshReg$(_c3, \"CardImage\");\n$RefreshReg$(_c4, \"Label\");\n$RefreshReg$(_c5, \"Actions\");\n$RefreshReg$(_c6, \"FarmedStakingCard\");","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Home/components/LotteryCard.tsx"],"names":["React","useState","useCallback","styled","Heading","Card","CardBody","Button","useModal","getCakeAddress","getBalanceNumber","useI18n","useGetLotteryHasDrawn","useTokenBalance","useMultiClaimLottery","useTotalClaim","BuyModal","useLotteryAllowance","useApproval","PurchaseWarningModal","CakeWinnings","LotteryJackpot","StyledLotteryCard","Block","div","CardImage","img","Label","theme","colors","textSubtle","Actions","FarmedStakingCard","lotteryHasDrawn","requesteClaim","setRequestedClaim","TranslateString","allowance","onPresentApprove","claimAmount","onMultiClaim","cakeBalance","handleApprove","requestedApproval","handleClaim","txHash","e","console","error","renderLotteryTicketButtonBuyOrApprove","toNumber","onPresentBuy","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button, useModal } from '@pancakeswap-libs/uikit'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport BuyModal from 'views/Lottery/components/TicketCard/BuyTicketModal'\nimport { useLotteryAllowance } from 'hooks/useAllowance'\nimport { useApproval } from 'hooks/useApproval'\nimport PurchaseWarningModal from 'views/Lottery/components/TicketCard/PurchaseWarningModal'\nimport CakeWinnings from './CakeWinnings'\nimport LotteryJackpot from './LotteryJackpot'\n\nconst StyledLotteryCard = styled(Card)`\n  background-image: url('/images/ticket-bg.svg');\n  background-repeat: no-repeat;\n  background-position: top right;\n  min-height: 376px;\n`\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  display: flex;\n  margin-top: 24px;\n  button {\n    flex: 1 0 50%;\n  }\n`\n\nconst FarmedStakingCard = () => {\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const [requesteClaim, setRequestedClaim] = useState(false)\n  const TranslateString = useI18n()\n  const allowance = useLotteryAllowance()\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\n  const { claimAmount } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  const { handleApprove, requestedApproval } = useApproval(onPresentApprove)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedClaim(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiClaim, setRequestedClaim])\n\n  const renderLotteryTicketButtonBuyOrApprove = () => {\n    if (!allowance.toNumber()) {\n      return (\n        <Button fullWidth disabled={requestedApproval} onClick={handleApprove}>\n          {TranslateString(494, 'Approve CAKE')}\n        </Button>\n      )\n    }\n    return (\n      <Button id=\"dashboard-buy-tickets\" variant=\"secondary\" onClick={onPresentBuy} disabled={lotteryHasDrawn}>\n        {TranslateString(558, 'Buy Tickets')}\n      </Button>\n    )\n  }\n\n  const [onPresentBuy] = useModal(<BuyModal max={cakeBalance} tokenName=\"CAKE\" />)\n\n  return (\n    <StyledLotteryCard>\n      <CardBody>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(550, 'Your Lottery Winnings')}\n        </Heading>\n        <CardImage src=\"/images/ticket.svg\" alt=\"cake logo\" width={64} height={64} />\n        <Block>\n          <Label>{TranslateString(552, 'CAKE to Collect')}:</Label>\n          <CakeWinnings />\n        </Block>\n        <Block>\n          <Label>{TranslateString(554, 'Total jackpot this round')}:</Label>\n          <LotteryJackpot />\n        </Block>\n        <Actions>\n          <Button\n            id=\"dashboard-collect-winnings\"\n            disabled={getBalanceNumber(claimAmount) === 0 || requesteClaim}\n            onClick={handleClaim}\n            style={{ marginRight: '8px' }}\n          >\n            {TranslateString(556, 'Collect Winnings')}\n          </Button>\n          {renderLotteryTicketButtonBuyOrApprove()}\n        </Actions>\n      </CardBody>\n    </StyledLotteryCard>\n  )\n}\n\nexport default FarmedStakingCard\n"]},"metadata":{},"sourceType":"module"}