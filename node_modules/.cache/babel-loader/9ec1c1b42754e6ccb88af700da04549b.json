{"ast":null,"code":"var _jsxFileName = \"/Users/fabianmolina/Documents/1hive/tulip-frontend/src/providers/HCFarmConfigProvider.js\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types'; // import { useHoneyCombConfigSubscription } from '../hooks/subscription-hooks'\n// import { getNetworkConfig } from '../networks'\n\nconst HoneyCombConfigContext = /*#__PURE__*/React.createContext();\n\nfunction HCFarmConfigProvider({\n  children\n}) {\n  // const honeyCombAddress = getNetworkConfig().farm\n  // const courtConfig = useHoneyCombConfigSubscription(honeyCombAddress)\n  // Here will be exposed the farming configuration to be used as a value in the context.\n  const farmConfig = '';\n  return /*#__PURE__*/React.createElement(HoneyCombConfigContext.Provider, {\n    value: farmConfig,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nHCFarmConfigProvider.propTypes = {\n  children: PropTypes.node\n};\n\nfunction useHCFarmConfig() {\n  return useContext(HoneyCombConfigContext);\n}\n\nexport { HCFarmConfigProvider, useHCFarmConfig };","map":{"version":3,"sources":["/Users/fabianmolina/Documents/1hive/tulip-frontend/src/providers/HCFarmConfigProvider.js"],"names":["React","useContext","PropTypes","HoneyCombConfigContext","createContext","HCFarmConfigProvider","children","farmConfig","propTypes","node","useHCFarmConfig"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;AACA;;AAEA,MAAMC,sBAAsB,gBAAGH,KAAK,CAACI,aAAN,EAA/B;;AAEA,SAASC,oBAAT,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA4C;AAC1C;AACA;AAEA;AACA,QAAMC,UAAU,GAAG,EAAnB;AACA,sBACE,oBAAC,sBAAD,CAAwB,QAAxB;AAAiC,IAAA,KAAK,EAAEA,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QADH,CADF;AAKD;;AAEDD,oBAAoB,CAACG,SAArB,GAAiC;AAC/BF,EAAAA,QAAQ,EAAEJ,SAAS,CAACO;AADW,CAAjC;;AAIA,SAASC,eAAT,GAA2B;AACzB,SAAOT,UAAU,CAACE,sBAAD,CAAjB;AACD;;AAED,SAASE,oBAAT,EAA+BK,eAA/B","sourcesContent":["import React, { useContext } from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { useHoneyCombConfigSubscription } from '../hooks/subscription-hooks'\r\n// import { getNetworkConfig } from '../networks'\r\n\r\nconst HoneyCombConfigContext = React.createContext()\r\n\r\nfunction HCFarmConfigProvider({ children }) {\r\n  // const honeyCombAddress = getNetworkConfig().farm\r\n  // const courtConfig = useHoneyCombConfigSubscription(honeyCombAddress)\r\n\r\n  // Here will be exposed the farming configuration to be used as a value in the context.\r\n  const farmConfig = ''\r\n  return (\r\n    <HoneyCombConfigContext.Provider value={farmConfig}>\r\n      {children}\r\n    </HoneyCombConfigContext.Provider>\r\n  )\r\n}\r\n\r\nHCFarmConfigProvider.propTypes = {\r\n  children: PropTypes.node,\r\n}\r\n\r\nfunction useHCFarmConfig() {\r\n  return useContext(HoneyCombConfigContext)\r\n}\r\n\r\nexport { HCFarmConfigProvider, useHCFarmConfig }\r\n"]},"metadata":{},"sourceType":"module"}