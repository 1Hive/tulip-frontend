{"ast":null,"code":"'use strict';\n\nconst defaultConfig = require('../../runtime/config-nodejs.js');\n\nconst {\n  isValidMultiaddr\n} = require('./utils');\n\nconst {\n  withTimeoutOption\n} = require('../../utils');\n\nmodule.exports = ({\n  repo\n}) => {\n  return withTimeoutOption(async function add(multiaddr, options) {\n    options = options || {};\n\n    if (multiaddr && !isValidMultiaddr(multiaddr)) {\n      throw new Error(`${multiaddr} is not a valid Multiaddr`);\n    }\n\n    const config = await repo.config.get();\n\n    if (options.default) {\n      config.Bootstrap = defaultConfig().Bootstrap;\n    } else if (multiaddr && config.Bootstrap.indexOf(multiaddr) === -1) {\n      config.Bootstrap.push(multiaddr);\n    }\n\n    await repo.config.set(config);\n    return {\n      Peers: options.default ? defaultConfig().Bootstrap : [multiaddr]\n    };\n  });\n};","map":null,"metadata":{},"sourceType":"script"}