{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Store = require('orbit-db-store');\n\nvar KeyValueIndex = require('./KeyValueIndex');\n\nvar KeyValueStore = /*#__PURE__*/function (_Store) {\n  _inherits(KeyValueStore, _Store);\n\n  var _super = _createSuper(KeyValueStore);\n\n  function KeyValueStore(ipfs, id, dbname, options) {\n    var _this;\n\n    _classCallCheck(this, KeyValueStore);\n\n    var opts = Object.assign({}, {\n      Index: KeyValueIndex\n    });\n    Object.assign(opts, options);\n    _this = _super.call(this, ipfs, id, dbname, opts);\n    _this._type = 'keyvalue';\n    return _this;\n  }\n\n  _createClass(KeyValueStore, [{\n    key: \"all\",\n    get: function get() {\n      return this._index._index;\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      return this._index.get(key);\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, data) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.put(key, data, options);\n    }\n  }, {\n    key: \"put\",\n    value: function put(key, data) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this._addOperation({\n        op: 'PUT',\n        key: key,\n        value: data\n      }, options);\n    }\n  }, {\n    key: \"del\",\n    value: function del(key) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this._addOperation({\n        op: 'DEL',\n        key: key,\n        value: null\n      }, options);\n    }\n  }]);\n\n  return KeyValueStore;\n}(Store);\n\nmodule.exports = KeyValueStore;","map":null,"metadata":{},"sourceType":"script"}