{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar LamportClock = /*#__PURE__*/function () {\n  function LamportClock(id, time) {\n    _classCallCheck(this, LamportClock);\n\n    this.id = id;\n    this.time = time || 0;\n  }\n\n  _createClass(LamportClock, [{\n    key: \"tick\",\n    value: function tick() {\n      return new LamportClock(this.id, ++this.time);\n    }\n  }, {\n    key: \"merge\",\n    value: function merge(clock) {\n      this.time = Math.max(this.time, clock.time);\n      return new LamportClock(this.id, this.time);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new LamportClock(this.id, this.time);\n    }\n  }], [{\n    key: \"compare\",\n    value: function compare(a, b) {\n      // Calculate the \"distance\" based on the clock, ie. lower or greater\n      var dist = a.time - b.time; // If the sequence number is the same (concurrent events),\n      // and the IDs are different, take the one with a \"lower\" id\n\n      if (dist === 0 && a.id !== b.id) return a.id < b.id ? -1 : 1;\n      return dist;\n    }\n  }]);\n\n  return LamportClock;\n}();\n\nmodule.exports = LamportClock;","map":null,"metadata":{},"sourceType":"script"}