{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProjectsGroupsModel = exports.ProjectsGroups = void 0;\n\nconst core_1 = require(\"../core\");\n\nclass ProjectsGroups extends core_1.CrowdinApi {\n  /**\n   * @param parentId parent group identifier\n   * @param offset starting offset in the collection (default 0)\n   * @param userId get user own projects\n   * @param limit maximum number of items to retrieve (default 25)\n   */\n  listGroups(parentId, offset, userId, limit) {\n    let url = `${this.url}/groups`;\n    url = this.addQueryParam(url, 'parentId', parentId);\n    url = this.addQueryParam(url, 'userId', userId);\n    return this.getList(url, limit, offset);\n  }\n  /**\n   * @param request request body\n   */\n\n\n  addGroup(request) {\n    const url = `${this.url}/groups`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param group group identifier\n   */\n\n\n  getGroup(groupId) {\n    const url = `${this.url}/groups/${groupId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param groupId group identifier\n   */\n\n\n  deleteGroup(groupId) {\n    const url = `${this.url}/groups/${groupId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param groupId group identifier\n   * @param request request body\n   */\n\n\n  editGroup(groupId, request) {\n    const url = `${this.url}/groups/${groupId}`;\n    return this.patch(url, request, this.defaultConfig());\n  }\n  /**\n   * @param groupId group identifier\n   * @param hasManagerAccess projects with manager access (default 0)\n   * @param limit maximum number of items to retrieve (default 25)\n   * @param offset starting offset in the collection (default 0)\n   */\n\n\n  listProjects(groupId, hasManagerAccess, limit, offset) {\n    let url = `${this.url}/projects`;\n    url = this.addQueryParam(url, 'groupId', groupId);\n    url = this.addQueryParam(url, 'hasManagerAccess', hasManagerAccess);\n    return this.getList(url, limit, offset);\n  }\n  /**\n   * @param request request body\n   */\n\n\n  addProject(request) {\n    const url = `${this.url}/projects`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   */\n\n\n  getProject(projectId) {\n    const url = `${this.url}/projects/${projectId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   */\n\n\n  deleteProject(projectId) {\n    const url = `${this.url}/projects/${projectId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param request request body\n   */\n\n\n  editProject(projectId, request) {\n    const url = `${this.url}/projects/${projectId}`;\n    return this.patch(url, request, this.defaultConfig());\n  }\n\n}\n\nexports.ProjectsGroups = ProjectsGroups;\nvar ProjectsGroupsModel;\n\n(function (ProjectsGroupsModel) {\n  let Type;\n\n  (function (Type) {\n    Type[Type[\"FILES_BASED\"] = 0] = \"FILES_BASED\";\n    Type[Type[\"STRINGS_BASED\"] = 1] = \"STRINGS_BASED\";\n  })(Type = ProjectsGroupsModel.Type || (ProjectsGroupsModel.Type = {}));\n\n  let JoinPolicy;\n\n  (function (JoinPolicy) {\n    JoinPolicy[\"OPEN\"] = \"open\";\n    JoinPolicy[\"PRIVATE\"] = \"private\";\n  })(JoinPolicy = ProjectsGroupsModel.JoinPolicy || (ProjectsGroupsModel.JoinPolicy = {}));\n\n  let LanguageAccessPolicy;\n\n  (function (LanguageAccessPolicy) {\n    LanguageAccessPolicy[\"OPEN\"] = \"open\";\n    LanguageAccessPolicy[\"MODERATE\"] = \"moderate\";\n  })(LanguageAccessPolicy = ProjectsGroupsModel.LanguageAccessPolicy || (ProjectsGroupsModel.LanguageAccessPolicy = {}));\n})(ProjectsGroupsModel = exports.ProjectsGroupsModel || (exports.ProjectsGroupsModel = {}));","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/node_modules/@crowdin/crowdin-api-client/out/projectsGroups/index.js"],"names":["Object","defineProperty","exports","value","ProjectsGroupsModel","ProjectsGroups","core_1","require","CrowdinApi","listGroups","parentId","offset","userId","limit","url","addQueryParam","getList","addGroup","request","post","defaultConfig","getGroup","groupId","get","deleteGroup","delete","editGroup","patch","listProjects","hasManagerAccess","addProject","getProject","projectId","deleteProject","editProject","Type","JoinPolicy","LanguageAccessPolicy"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProjectsGroupsModel = exports.ProjectsGroups = void 0;\nconst core_1 = require(\"../core\");\nclass ProjectsGroups extends core_1.CrowdinApi {\n    /**\n     * @param parentId parent group identifier\n     * @param offset starting offset in the collection (default 0)\n     * @param userId get user own projects\n     * @param limit maximum number of items to retrieve (default 25)\n     */\n    listGroups(parentId, offset, userId, limit) {\n        let url = `${this.url}/groups`;\n        url = this.addQueryParam(url, 'parentId', parentId);\n        url = this.addQueryParam(url, 'userId', userId);\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param request request body\n     */\n    addGroup(request) {\n        const url = `${this.url}/groups`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param group group identifier\n     */\n    getGroup(groupId) {\n        const url = `${this.url}/groups/${groupId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param groupId group identifier\n     */\n    deleteGroup(groupId) {\n        const url = `${this.url}/groups/${groupId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param groupId group identifier\n     * @param request request body\n     */\n    editGroup(groupId, request) {\n        const url = `${this.url}/groups/${groupId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param groupId group identifier\n     * @param hasManagerAccess projects with manager access (default 0)\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    listProjects(groupId, hasManagerAccess, limit, offset) {\n        let url = `${this.url}/projects`;\n        url = this.addQueryParam(url, 'groupId', groupId);\n        url = this.addQueryParam(url, 'hasManagerAccess', hasManagerAccess);\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param request request body\n     */\n    addProject(request) {\n        const url = `${this.url}/projects`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     */\n    getProject(projectId) {\n        const url = `${this.url}/projects/${projectId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     */\n    deleteProject(projectId) {\n        const url = `${this.url}/projects/${projectId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    editProject(projectId, request) {\n        const url = `${this.url}/projects/${projectId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n}\nexports.ProjectsGroups = ProjectsGroups;\nvar ProjectsGroupsModel;\n(function (ProjectsGroupsModel) {\n    let Type;\n    (function (Type) {\n        Type[Type[\"FILES_BASED\"] = 0] = \"FILES_BASED\";\n        Type[Type[\"STRINGS_BASED\"] = 1] = \"STRINGS_BASED\";\n    })(Type = ProjectsGroupsModel.Type || (ProjectsGroupsModel.Type = {}));\n    let JoinPolicy;\n    (function (JoinPolicy) {\n        JoinPolicy[\"OPEN\"] = \"open\";\n        JoinPolicy[\"PRIVATE\"] = \"private\";\n    })(JoinPolicy = ProjectsGroupsModel.JoinPolicy || (ProjectsGroupsModel.JoinPolicy = {}));\n    let LanguageAccessPolicy;\n    (function (LanguageAccessPolicy) {\n        LanguageAccessPolicy[\"OPEN\"] = \"open\";\n        LanguageAccessPolicy[\"MODERATE\"] = \"moderate\";\n    })(LanguageAccessPolicy = ProjectsGroupsModel.LanguageAccessPolicy || (ProjectsGroupsModel.LanguageAccessPolicy = {}));\n})(ProjectsGroupsModel = exports.ProjectsGroupsModel || (exports.ProjectsGroupsModel = {}));\n"]},"metadata":{},"sourceType":"script"}