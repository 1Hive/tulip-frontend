{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = expose;\n\nfunction expose(funcName, func, opts) {\n  opts = opts || {};\n  var addListener = opts.addListener || window.addEventListener;\n  var removeListener = opts.removeListener || window.removeEventListener;\n  var postMessage = opts.postMessage || window.postMessage;\n  var targetOrigin = opts.targetOrigin || '*';\n\n  var getMessageData = opts.getMessageData || function (event) {\n    return event.data;\n  };\n\n  var isCallback = opts.isCallback || false;\n\n  var handler = function handler() {\n    var data = getMessageData.apply(null, arguments);\n    if (!data) return;\n    if (data.sender !== 'postmsg-rpc/client' || data.func !== funcName) return;\n    var msg = {\n      sender: 'postmsg-rpc/server',\n      id: data.id\n    };\n\n    var onSuccess = function onSuccess(res) {\n      msg.res = res;\n      postMessage(msg, targetOrigin);\n    };\n\n    var onError = function onError(err) {\n      msg.err = Object.assign({\n        message: err.message\n      }, err.output && err.output.payload);\n\n      if (process.env.NODE_ENV !== 'production') {\n        msg.err.stack = msg.err.stack || err.stack;\n      }\n\n      postMessage(msg, targetOrigin);\n    };\n\n    if (isCallback) {\n      func.apply(null, data.args.concat(function (err, res) {\n        if (err) return onError(err);\n        onSuccess(res);\n      }));\n    } else {\n      var res = func.apply(null, data.args);\n      Promise.resolve(res).then(onSuccess).catch(onError);\n    }\n  };\n\n  addListener('message', handler);\n  return {\n    close: function close() {\n      return removeListener('message', handler);\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"script"}