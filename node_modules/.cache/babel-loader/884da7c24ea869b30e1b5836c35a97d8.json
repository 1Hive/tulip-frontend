{"ast":null,"code":"'use strict';\n\nconst pageResults = require('graph-results-pager');\n\nconst {\n  Promise\n} = require('bluebird');\n\nconst {\n  graphAPIEndpoints\n} = require('./constants');\n\nconst sushi = require('./queries/sushi');\n\nconst blocks = require('./queries/blocks');\n\nconst charts = require('./queries/charts');\n\nconst exchange = require('./queries/exchange');\n\nconst exchange_v1 = require('./queries/exchange_v1');\n\nconst masterchef = require('./queries/masterchef');\n\nconst bar = require('./queries/bar');\n\nconst maker = require('./queries/maker');\n\nconst timelock = require('./queries/timelock');\n\nconst lockup = require('./queries/lockup');\n\nconst utils = require('./utils');\n\nmodule.exports = {\n  pageResults,\n  graphAPIEndpoints,\n  sushi,\n  blocks,\n  charts,\n  exchange,\n  exchange_v1,\n  masterchef,\n  bar,\n  maker,\n  timelock,\n  lockup,\n  utils,\n\n  async timeseries({\n    blocks = undefined,\n    timestamps = undefined,\n    target = undefined\n  } = {}, targetArguments) {\n    if (!target) {\n      throw new Error(\"sushi-data: Target function undefined\");\n    }\n\n    if (!blocks && !timestamps) {\n      throw new Error(\"sushi-data: Timeframe undefined\");\n    }\n\n    if (blocks) {\n      return Promise.map(blocks, async block => ({\n        block,\n        data: await target({\n          block,\n          ...targetArguments\n        })\n      }));\n    } else {\n      return Promise.map(timestamps, async timestamp => ({\n        timestamp,\n        data: await target({\n          timestamp,\n          ...targetArguments\n        })\n      }));\n    }\n  }\n\n};","map":null,"metadata":{},"sourceType":"script"}