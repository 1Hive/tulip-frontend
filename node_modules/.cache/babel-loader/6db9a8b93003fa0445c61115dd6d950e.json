{"ast":null,"code":"'use strict';\n\nvar _createForOfIteratorHelper = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar pReduce = require('p-reduce');\n\nvar is = require('@sindresorhus/is');\n\nmodule.exports = function (iterable) {\n  var ret = [];\n\n  var _iterator = _createForOfIteratorHelper(iterable),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var task = _step.value;\n      var type = is(task);\n\n      if (type !== 'Function') {\n        return Promise.reject(new TypeError(\"Expected task to be a `Function`, received `\".concat(type, \"`\")));\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return pReduce(iterable, function (_, fn) {\n    return Promise.resolve().then(fn).then(function (val) {\n      ret.push(val);\n    });\n  }).then(function () {\n    return ret;\n  });\n};","map":null,"metadata":{},"sourceType":"script"}