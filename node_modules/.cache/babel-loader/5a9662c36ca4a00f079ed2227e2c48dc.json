{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar slicedToArray = require('./slicedToArray-a8a77f0e.js');\n\nrequire('./unsupportedIterableToArray-f175acfa.js');\n\nvar React = require('react');\n\nrequire('./_commonjsHelpers-1b94f6bc.js');\n\nvar index = require('./index-46d0e707.js');\n\nrequire('./defineProperty-3cad0327.js');\n\nrequire('./toConsumableArray-cc0d28a9.js');\n\nvar _styled = require('styled-components');\n\nrequire('./getPrototypeOf-55c9e80c.js');\n\nrequire('./color.js');\n\nrequire('./components.js');\n\nrequire('./css.js');\n\nrequire('./miscellaneous.js');\n\nvar environment = require('./environment.js');\n\nrequire('./font.js');\n\nrequire('./keycodes.js');\n\nvar web3 = require('./web3-4e58c255.js');\n\nvar constants = require('./constants.js');\n\nrequire('./breakpoints.js');\n\nrequire('./springs.js');\n\nvar textStyles = require('./text-styles.js');\n\nrequire('./theme-dark.js');\n\nrequire('./theme-light.js');\n\nrequire('./Theme.js');\n\nvar _extends = require('./extends-023d783e.js');\n\nvar objectWithoutProperties = require('./objectWithoutProperties-c6d3675c.js');\n\nrequire('./index-4def0554.js');\n\nrequire('./_baseGetTag-42b4dd3e.js');\n\nrequire('./Viewport-819c53c9.js');\n\nrequire('./Layout.js');\n\nrequire('./FocusVisible.js');\n\nrequire('./ButtonBase.js');\n\nrequire('./IconPropTypes-12cd7567.js');\n\nrequire('./IconCopy.js');\n\nrequire('./IconCross.js');\n\nrequire('./objectWithoutPropertiesLoose-1af20ad0.js');\n\nrequire('react-dom');\n\nrequire('./web-7cbdbd84.js');\n\nrequire('./Button.js');\n\nrequire('./ButtonIcon.js');\n\nrequire('./Link.js');\n\nrequire('./TextInput.js');\n\nrequire('./ToastHub.js');\n\nrequire('./Root-8693e46b.js');\n\nrequire('./RootPortal.js');\n\nrequire('./TextCopy.js');\n\nvar EthIdenticon = require('./EthIdenticon.js');\n\nrequire('./AddressField.js');\n\nvar BadgeBase = require('./BadgeBase.js');\n\nvar BadgePopoverActionType = require('./BadgePopoverActionType.js');\n\nrequire('./Tag.js');\n\nrequire('./proptypes-9c58a90f.js');\n\nrequire('./Popover.js');\n\nrequire('./BadgePopoverBase.js');\n\nvar IdentityBadgePopover = require('./IdentityBadgePopover.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\nvar _styled__default = /*#__PURE__*/_interopDefaultLegacy(_styled);\n\nvar _StyledDiv = _styled__default['default'](\"div\").withConfig({\n  displayName: \"IdentityBadge___StyledDiv\",\n  componentId: \"q71pax-0\"\n})([\"display:block;margin-right:\", \"px;\", \";\"], function (p) {\n  return p._css;\n}, function (p) {\n  return p._css2;\n});\n\nvar IdentityBadge = /*#__PURE__*/React__default['default'].memo(function IdentityBadge(_ref) {\n  var badgeOnly = _ref.badgeOnly,\n      compact = _ref.compact,\n      connectedAccount = _ref.connectedAccount,\n      entity = _ref.entity,\n      label = _ref.label,\n      labelStyle = _ref.labelStyle,\n      networkType = _ref.networkType,\n      popoverAction = _ref.popoverAction,\n      popoverTitle = _ref.popoverTitle,\n      shorten = _ref.shorten,\n      customLabel = _ref.customLabel,\n      fontSize = _ref.fontSize,\n      props = objectWithoutProperties.objectWithoutProperties(_ref, [\"badgeOnly\", \"compact\", \"connectedAccount\", \"entity\", \"label\", \"labelStyle\", \"networkType\", \"popoverAction\", \"popoverTitle\", \"shorten\", \"customLabel\", \"fontSize\"]);\n\n  if (customLabel) {\n    environment.warnOnce('IdentityBadge:customLabel', 'The “customLabel” prop is deprecated. Please use “label” instead.');\n    label = label || customLabel;\n  }\n\n  if (fontSize) {\n    environment.warnOnce('IdentityBadge:fontSize', 'The “fontSize” prop is deprecated. Please use “labelStyle” to style the label instead.');\n  }\n\n  var badgeRef = React.useRef(null);\n\n  var _useState = React.useState(false),\n      _useState2 = slicedToArray.slicedToArray(_useState, 2),\n      opened = _useState2[0],\n      setOpened = _useState2[1];\n\n  var handleClose = React.useCallback(function () {\n    return setOpened(false);\n  }, []);\n  var handleOpen = React.useCallback(function () {\n    return setOpened(true);\n  }, []);\n  var address = web3.isAddress(entity) ? entity : null;\n  var displayLabel = label || (address && shorten ? web3.shortenAddress(address) : entity);\n  return /*#__PURE__*/React__default['default'].createElement(BadgeBase.default, _extends._extends_1({\n    badgeRef: badgeRef,\n    compact: compact,\n    disabled: badgeOnly,\n    icon: address && /*#__PURE__*/React__default['default'].createElement(_StyledDiv, {\n      _css: 1 * constants.GU,\n      _css2: compact ? \"\\n                  position: relative;\\n                  top: -1px;\\n                \" : ''\n    }, /*#__PURE__*/React__default['default'].createElement(EthIdenticon.default, {\n      scale: compact ? 0.75 : 1,\n      radius: compact ? 2 : 0,\n      address: address\n    })),\n    label: displayLabel,\n    labelStyle: \"\\n        \".concat(!label && address ? textStyles.textStyle('address1') : '', \"\\n        \").concat(labelStyle, \"\\n      \"),\n    onClick: address ? handleOpen : undefined,\n    title: address\n  }, props), function (popoverDisabled) {\n    return !popoverDisabled && address && /*#__PURE__*/React__default['default'].createElement(IdentityBadgePopover.default, {\n      address: address,\n      connectedAccount: connectedAccount,\n      networkType: networkType,\n      onClose: handleClose,\n      opener: badgeRef.current,\n      popoverAction: popoverAction,\n      title: popoverTitle,\n      visible: opened\n    });\n  });\n});\nIdentityBadge.propTypes = {\n  badgeOnly: index.propTypes.bool,\n  compact: index.propTypes.bool,\n  connectedAccount: index.propTypes.bool,\n  entity: index.propTypes.string,\n  label: index.propTypes.string,\n  labelStyle: index.propTypes.string,\n  networkType: index.propTypes.string,\n  popoverAction: BadgePopoverActionType.default,\n  popoverTitle: index.propTypes.node,\n  shorten: index.propTypes.bool,\n  // Deprecated\n  customLabel: index.propTypes.string,\n  fontSize: index.propTypes.string\n};\nIdentityBadge.defaultProps = {\n  entity: '',\n  labelStyle: '',\n  networkType: 'main',\n  shorten: true\n};\nexports.default = IdentityBadge;","map":{"version":3,"sources":["../src/components/IdentityBadge/IdentityBadge.js"],"names":["IdentityBadge","badgeOnly","compact","connectedAccount","entity","label","labelStyle","networkType","popoverAction","popoverTitle","shorten","customLabel","fontSize","props","warnOnce","badgeRef","useRef","opened","setOpened","useState","handleClose","useCallback","handleOpen","address","isAddress","displayLabel","shortenAddress","BadgeBase","GU","EthIdenticon","textStyle","IdentityBadgePopover","PropTypes","BadgePopoverActionType","string"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { GU, textStyle } from '../../style'\nimport { isAddress, shortenAddress, warnOnce } from '../../utils'\nimport BadgeBase from '../BadgeBase/BadgeBase'\nimport BadgePopoverActionType from '../BadgeBase/BadgePopoverActionType'\nimport EthIdenticon from '../EthIdenticon/EthIdenticon'\nimport IdentityBadgePopover from './IdentityBadgePopover'\n\nconst IdentityBadge = React.memo(function IdentityBadge({\n  badgeOnly,\n  compact,\n  connectedAccount,\n  entity,\n  label,\n  labelStyle,\n  networkType,\n  popoverAction,\n  popoverTitle,\n  shorten,\n\n  // Deprecated\n  customLabel,\n  fontSize,\n\n  ...props\n}) {\n  if (customLabel) {\n    warnOnce(\n      'IdentityBadge:customLabel',\n      'The “customLabel” prop is deprecated. Please use “label” instead.'\n    )\n    label = label || customLabel\n  }\n  if (fontSize) {\n    warnOnce(\n      'IdentityBadge:fontSize',\n      'The “fontSize” prop is deprecated. Please use “labelStyle” to style the label instead.'\n    )\n  }\n\n  const badgeRef = useRef(null)\n  const [opened, setOpened] = useState(false)\n  const handleClose = useCallback(() => setOpened(false), [])\n  const handleOpen = useCallback(() => setOpened(true), [])\n\n  const address = isAddress(entity) ? entity : null\n  const displayLabel =\n    label || (address && shorten ? shortenAddress(address) : entity)\n\n  return (\n    <BadgeBase\n      badgeRef={badgeRef}\n      compact={compact}\n      disabled={badgeOnly}\n      icon={\n        address && (\n          <div\n            css={`\n              display: block;\n              margin-right: ${1 * GU}px;\n              ${compact\n                ? `\n                  position: relative;\n                  top: -1px;\n                `\n                : ''};\n            `}\n          >\n            <EthIdenticon\n              scale={compact ? 0.75 : 1}\n              radius={compact ? 2 : 0}\n              address={address}\n            />\n          </div>\n        )\n      }\n      label={displayLabel}\n      labelStyle={`\n        ${!label && address ? textStyle('address1') : ''}\n        ${labelStyle}\n      `}\n      onClick={address ? handleOpen : undefined}\n      title={address}\n      {...props}\n    >\n      {popoverDisabled =>\n        !popoverDisabled &&\n        address && (\n          <IdentityBadgePopover\n            address={address}\n            connectedAccount={connectedAccount}\n            networkType={networkType}\n            onClose={handleClose}\n            opener={badgeRef.current}\n            popoverAction={popoverAction}\n            title={popoverTitle}\n            visible={opened}\n          />\n        )\n      }\n    </BadgeBase>\n  )\n})\n\nIdentityBadge.propTypes = {\n  badgeOnly: PropTypes.bool,\n  compact: PropTypes.bool,\n  connectedAccount: PropTypes.bool,\n  entity: PropTypes.string,\n  label: PropTypes.string,\n  labelStyle: PropTypes.string,\n  networkType: PropTypes.string,\n  popoverAction: BadgePopoverActionType,\n  popoverTitle: PropTypes.node,\n  shorten: PropTypes.bool,\n\n  // Deprecated\n  customLabel: PropTypes.string,\n  fontSize: PropTypes.string,\n}\n\nIdentityBadge.defaultProps = {\n  entity: '',\n  labelStyle: '',\n  networkType: 'main',\n  shorten: true,\n}\n\nexport default IdentityBadge\n"]},"metadata":{},"sourceType":"script"}