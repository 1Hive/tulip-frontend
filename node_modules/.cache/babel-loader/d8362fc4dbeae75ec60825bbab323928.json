{"ast":null,"code":"import _classCallCheck from \"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Storage for static keys of previously connected peers.\n */\n\n\nvar Keycache = /*#__PURE__*/function () {\n  function Keycache() {\n    _classCallCheck(this, Keycache);\n\n    _defineProperty(this, \"storage\", new Map());\n  }\n\n  _createClass(Keycache, [{\n    key: \"store\",\n    value: function store(peerId, key) {\n      this.storage.set(peerId.id, key);\n    }\n  }, {\n    key: \"load\",\n    value: function load(peerId) {\n      if (!peerId) {\n        return null;\n      }\n\n      return this.storage.get(peerId.id) || null;\n    }\n  }, {\n    key: \"resetStorage\",\n    value: function resetStorage() {\n      this.storage.clear();\n    }\n  }]);\n\n  return Keycache;\n}();\n\nvar KeyCache = new Keycache();\nexport { KeyCache };","map":null,"metadata":{},"sourceType":"module"}