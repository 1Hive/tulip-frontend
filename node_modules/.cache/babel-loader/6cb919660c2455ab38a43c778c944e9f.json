{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TranslationStatusModel = exports.TranslationStatus = void 0;\n\nconst core_1 = require(\"../core\");\n\nclass TranslationStatus extends core_1.CrowdinApi {\n  /**\n   * @param projectId project identifier\n   * @param branchId branch identifier\n   * @param limit maximum number of items to retrieve (default 25)\n   * @param offset starting offset in the collection (default 0)\n   */\n  getBranchProgress(projectId, branchId, limit, offset) {\n    const url = `${this.url}/projects/${projectId}/branches/${branchId}/languages/progress`;\n    return this.getList(url, limit, offset);\n  }\n  /**\n   * @param projectId project identifier\n   * @param directoryId directory identifier\n   * @param limit maximum number of items to retrieve (default 25)\n   * @param offset starting offset in the collection (default 0)\n   */\n\n\n  getDirectoryProgress(projectId, directoryId, limit, offset) {\n    const url = `${this.url}/projects/${projectId}/directories/${directoryId}/languages/progress`;\n    return this.getList(url, limit, offset);\n  }\n  /**\n   * @param projectId project identifier\n   * @param languageId language identifier\n   * @param limit maximum number of items to retrieve (default 25)\n   * @param offset starting offset in the collection (default 0)\n   */\n\n\n  getLanguageProgress(projectId, languageId, limit, offset) {\n    const url = `${this.url}/projects/${projectId}/languages/${languageId}/progress`;\n    return this.getList(url, limit, offset);\n  }\n  /**\n   * @param projectId project identifier\n   * @param limit maximum number of items to retrieve (default 25)\n   * @param offset starting offset in the collection (default 0)\n   * @param languageIds language identifier for filter\n   */\n\n\n  getProjectProgress(projectId, limit, offset, languageIds) {\n    let url = `${this.url}/projects/${projectId}/languages/progress`;\n    url = this.addQueryParam(url, 'languageIds', languageIds);\n    return this.getList(url, limit, offset);\n  }\n  /**\n   * @param projectId project identifier\n   * @param fileId file identifier\n   * @param limit maximum number of items to retrieve (default 25)\n   * @param offset starting offset in the collection (default 0)\n   */\n\n\n  getFileProgress(projectId, fileId, limit, offset) {\n    const url = `${this.url}/projects/${projectId}/files/${fileId}/languages/progress`;\n    return this.getList(url, limit, offset);\n  }\n  /**\n   * @param projectId project identifier\n   * @param limit maximum number of items to retrieve (default 25)\n   * @param offset starting offset in the collection (default 0)\n   * @param category defines the issue category\n   * @param validation defines the QA check issue validation type\n   * @param languageIds filter progress by languageId\n   */\n\n\n  listQaCheckIssues(projectId, limit, offset, category, validation, languageIds) {\n    let url = `${this.url}/projects/${projectId}/qa-checks`;\n    url = this.addQueryParam(url, 'category', category);\n    url = this.addQueryParam(url, 'validation', validation);\n    url = this.addQueryParam(url, 'languageIds', languageIds);\n    return this.getList(url, limit, offset);\n  }\n\n}\n\nexports.TranslationStatus = TranslationStatus;\nvar TranslationStatusModel;\n\n(function (TranslationStatusModel) {\n  let Category;\n\n  (function (Category) {\n    Category[\"EMPTY\"] = \"empty\";\n    Category[\"VARIABLES\"] = \"variables\";\n    Category[\"TAGS\"] = \"tags\";\n    Category[\"PUNCTUATION\"] = \"punctuation\";\n    Category[\"SYMBOL_REGISTER\"] = \"symbol_register\";\n    Category[\"SPACES\"] = \"spaces\";\n    Category[\"SIZE\"] = \"size\";\n    Category[\"SPECIAL_SYMBOLS\"] = \"special_symbols\";\n    Category[\"WRONG_TRANSLATION\"] = \"wrong_translation\";\n    Category[\"SPELLCHECK\"] = \"spellcheck\";\n    Category[\"ICU\"] = \"icu\";\n  })(Category = TranslationStatusModel.Category || (TranslationStatusModel.Category = {}));\n\n  let Validation;\n\n  (function (Validation) {\n    Validation[\"EMPTY_STRING_CHECK\"] = \"empty_string_check\";\n    Validation[\"EMPTY_SUGGESTION_CHECK\"] = \"empty_suggestion_check\";\n    Validation[\"MAX_LENGTH_CHECK\"] = \"max_length_check\";\n    Validation[\"TAGS_CHECK\"] = \"tags_check\";\n    Validation[\"MISMATCH_IDS_CHECK\"] = \"mismatch_ids_check\";\n    Validation[\"CDATA_CHECK\"] = \"cdata_check\";\n    Validation[\"SPECIALS_SYMBOLS_CHECK\"] = \"specials_symbols_check\";\n    Validation[\"LEADING_NEWLINES_CHECK\"] = \"leading_newlines_check\";\n    Validation[\"TRAILING_NEWLINES_CHECK\"] = \"trailing_newlines_check\";\n    Validation[\"LEADING_SPACES_CHECK\"] = \"leading_spaces_check\";\n    Validation[\"TRAILING_SPACES_CHECK\"] = \"trailing_spaces_check\";\n    Validation[\"MULTIPLE_SPACES_CHECK\"] = \"multiple_spaces_check\";\n    Validation[\"CUSTOM_BLOCKED_VARIABLES_CHECK\"] = \"custom_blocked_variables_check\";\n    Validation[\"HIGHEST_PRIORITY_CUSTOM_VARIABLES_CHECK\"] = \"highest_priority_custom_variables_check\";\n    Validation[\"HIGHEST_PRIORITY_VARIABLES_CHECK\"] = \"highest_priority_variables_check\";\n    Validation[\"C_VARIABLES_CHECK\"] = \"c_variables_check\";\n    Validation[\"PYTHON_VARIABLES_CHECK\"] = \"python_variables_check\";\n    Validation[\"RAILS_VARIABLES_CHECK\"] = \"rails_variables_check\";\n    Validation[\"JAVA_VARIABLES_CHECK\"] = \"java_variables_check\";\n    Validation[\"DOT_NET_VARIABLES_CHECK\"] = \"dot_net_variables_check\";\n    Validation[\"TWIG_VARIABLES_CHECK\"] = \"twig_variables_check\";\n    Validation[\"PHP_VARIABLES_CHECK\"] = \"php_variables_check\";\n    Validation[\"FREEMARKER_VARIABLES_CHECK\"] = \"freemarker_variables_check\";\n    Validation[\"LOWEST_PRIORITY_VARIABLE_CHECK\"] = \"lowest_priority_variable_check\";\n    Validation[\"LOWEST_PRIORITY_CUSTOM_VARIABLES_CHECK\"] = \"lowest_priority_custom_variables_check\";\n    Validation[\"PUNCTUATION_CHECK\"] = \"punctuation_check\";\n    Validation[\"SPACES_BEFORE_PUNCTUATION_CHECK\"] = \"spaces_before_punctuation_check\";\n    Validation[\"SPACES_AFTER_PUNCTUATION_CHECK\"] = \"spaces_after_punctuation_check\";\n    Validation[\"NON_BREAKING_SPACES_CHECK\"] = \"non_breaking_spaces_check\";\n    Validation[\"CAPITALIZE_CHECK\"] = \"capitalize_check\";\n    Validation[\"MULTIPLE_UPPERCASE_CHECK\"] = \"multiple_uppercase_check\";\n    Validation[\"PARENTHESES_CHECK\"] = \"parentheses_check\";\n    Validation[\"ENTITIES_CHECK\"] = \"entities_check\";\n    Validation[\"ESCAPED_QUOTES_CHECK\"] = \"escaped_quotes_check\";\n    Validation[\"WRONG_TRANSLATION_ISSUE_CHECK\"] = \"wrong_translation_issue_check\";\n    Validation[\"SPELLCHECK\"] = \"spellcheck\";\n    Validation[\"ICU_CHECK\"] = \"icu_check\";\n  })(Validation = TranslationStatusModel.Validation || (TranslationStatusModel.Validation = {}));\n})(TranslationStatusModel = exports.TranslationStatusModel || (exports.TranslationStatusModel = {}));","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/node_modules/@crowdin/crowdin-api-client/out/translationStatus/index.js"],"names":["Object","defineProperty","exports","value","TranslationStatusModel","TranslationStatus","core_1","require","CrowdinApi","getBranchProgress","projectId","branchId","limit","offset","url","getList","getDirectoryProgress","directoryId","getLanguageProgress","languageId","getProjectProgress","languageIds","addQueryParam","getFileProgress","fileId","listQaCheckIssues","category","validation","Category","Validation"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationStatusModel = exports.TranslationStatus = void 0;\nconst core_1 = require(\"../core\");\nclass TranslationStatus extends core_1.CrowdinApi {\n    /**\n     * @param projectId project identifier\n     * @param branchId branch identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    getBranchProgress(projectId, branchId, limit, offset) {\n        const url = `${this.url}/projects/${projectId}/branches/${branchId}/languages/progress`;\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param directoryId directory identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    getDirectoryProgress(projectId, directoryId, limit, offset) {\n        const url = `${this.url}/projects/${projectId}/directories/${directoryId}/languages/progress`;\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param languageId language identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    getLanguageProgress(projectId, languageId, limit, offset) {\n        const url = `${this.url}/projects/${projectId}/languages/${languageId}/progress`;\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     * @param languageIds language identifier for filter\n     */\n    getProjectProgress(projectId, limit, offset, languageIds) {\n        let url = `${this.url}/projects/${projectId}/languages/progress`;\n        url = this.addQueryParam(url, 'languageIds', languageIds);\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    getFileProgress(projectId, fileId, limit, offset) {\n        const url = `${this.url}/projects/${projectId}/files/${fileId}/languages/progress`;\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     * @param category defines the issue category\n     * @param validation defines the QA check issue validation type\n     * @param languageIds filter progress by languageId\n     */\n    listQaCheckIssues(projectId, limit, offset, category, validation, languageIds) {\n        let url = `${this.url}/projects/${projectId}/qa-checks`;\n        url = this.addQueryParam(url, 'category', category);\n        url = this.addQueryParam(url, 'validation', validation);\n        url = this.addQueryParam(url, 'languageIds', languageIds);\n        return this.getList(url, limit, offset);\n    }\n}\nexports.TranslationStatus = TranslationStatus;\nvar TranslationStatusModel;\n(function (TranslationStatusModel) {\n    let Category;\n    (function (Category) {\n        Category[\"EMPTY\"] = \"empty\";\n        Category[\"VARIABLES\"] = \"variables\";\n        Category[\"TAGS\"] = \"tags\";\n        Category[\"PUNCTUATION\"] = \"punctuation\";\n        Category[\"SYMBOL_REGISTER\"] = \"symbol_register\";\n        Category[\"SPACES\"] = \"spaces\";\n        Category[\"SIZE\"] = \"size\";\n        Category[\"SPECIAL_SYMBOLS\"] = \"special_symbols\";\n        Category[\"WRONG_TRANSLATION\"] = \"wrong_translation\";\n        Category[\"SPELLCHECK\"] = \"spellcheck\";\n        Category[\"ICU\"] = \"icu\";\n    })(Category = TranslationStatusModel.Category || (TranslationStatusModel.Category = {}));\n    let Validation;\n    (function (Validation) {\n        Validation[\"EMPTY_STRING_CHECK\"] = \"empty_string_check\";\n        Validation[\"EMPTY_SUGGESTION_CHECK\"] = \"empty_suggestion_check\";\n        Validation[\"MAX_LENGTH_CHECK\"] = \"max_length_check\";\n        Validation[\"TAGS_CHECK\"] = \"tags_check\";\n        Validation[\"MISMATCH_IDS_CHECK\"] = \"mismatch_ids_check\";\n        Validation[\"CDATA_CHECK\"] = \"cdata_check\";\n        Validation[\"SPECIALS_SYMBOLS_CHECK\"] = \"specials_symbols_check\";\n        Validation[\"LEADING_NEWLINES_CHECK\"] = \"leading_newlines_check\";\n        Validation[\"TRAILING_NEWLINES_CHECK\"] = \"trailing_newlines_check\";\n        Validation[\"LEADING_SPACES_CHECK\"] = \"leading_spaces_check\";\n        Validation[\"TRAILING_SPACES_CHECK\"] = \"trailing_spaces_check\";\n        Validation[\"MULTIPLE_SPACES_CHECK\"] = \"multiple_spaces_check\";\n        Validation[\"CUSTOM_BLOCKED_VARIABLES_CHECK\"] = \"custom_blocked_variables_check\";\n        Validation[\"HIGHEST_PRIORITY_CUSTOM_VARIABLES_CHECK\"] = \"highest_priority_custom_variables_check\";\n        Validation[\"HIGHEST_PRIORITY_VARIABLES_CHECK\"] = \"highest_priority_variables_check\";\n        Validation[\"C_VARIABLES_CHECK\"] = \"c_variables_check\";\n        Validation[\"PYTHON_VARIABLES_CHECK\"] = \"python_variables_check\";\n        Validation[\"RAILS_VARIABLES_CHECK\"] = \"rails_variables_check\";\n        Validation[\"JAVA_VARIABLES_CHECK\"] = \"java_variables_check\";\n        Validation[\"DOT_NET_VARIABLES_CHECK\"] = \"dot_net_variables_check\";\n        Validation[\"TWIG_VARIABLES_CHECK\"] = \"twig_variables_check\";\n        Validation[\"PHP_VARIABLES_CHECK\"] = \"php_variables_check\";\n        Validation[\"FREEMARKER_VARIABLES_CHECK\"] = \"freemarker_variables_check\";\n        Validation[\"LOWEST_PRIORITY_VARIABLE_CHECK\"] = \"lowest_priority_variable_check\";\n        Validation[\"LOWEST_PRIORITY_CUSTOM_VARIABLES_CHECK\"] = \"lowest_priority_custom_variables_check\";\n        Validation[\"PUNCTUATION_CHECK\"] = \"punctuation_check\";\n        Validation[\"SPACES_BEFORE_PUNCTUATION_CHECK\"] = \"spaces_before_punctuation_check\";\n        Validation[\"SPACES_AFTER_PUNCTUATION_CHECK\"] = \"spaces_after_punctuation_check\";\n        Validation[\"NON_BREAKING_SPACES_CHECK\"] = \"non_breaking_spaces_check\";\n        Validation[\"CAPITALIZE_CHECK\"] = \"capitalize_check\";\n        Validation[\"MULTIPLE_UPPERCASE_CHECK\"] = \"multiple_uppercase_check\";\n        Validation[\"PARENTHESES_CHECK\"] = \"parentheses_check\";\n        Validation[\"ENTITIES_CHECK\"] = \"entities_check\";\n        Validation[\"ESCAPED_QUOTES_CHECK\"] = \"escaped_quotes_check\";\n        Validation[\"WRONG_TRANSLATION_ISSUE_CHECK\"] = \"wrong_translation_issue_check\";\n        Validation[\"SPELLCHECK\"] = \"spellcheck\";\n        Validation[\"ICU_CHECK\"] = \"icu_check\";\n    })(Validation = TranslationStatusModel.Validation || (TranslationStatusModel.Validation = {}));\n})(TranslationStatusModel = exports.TranslationStatusModel || (exports.TranslationStatusModel = {}));\n"]},"metadata":{},"sourceType":"script"}