{"ast":null,"code":"'use strict';\n\nconst crypto = require('./crypto');\n\nconst lp = require('it-length-prefixed');\n\nconst {\n  int32BEEncode\n} = lp;\n\nconst debug = require('debug');\n\nconst log = debug('libp2p:secio');\nlog.error = debug('libp2p:secio:error'); // step 1. Propose\n// -- propose cipher suite + send pubkeys + nonce\n\nmodule.exports = async function propose(state, wrapped) {\n  log('1. propose - start');\n  const prop = crypto.createProposal(state);\n  log('1. propose - writing proposal', prop);\n  await wrapped.write(lp.encode.single(prop, {\n    lengthEncoder: int32BEEncode\n  }));\n  log('1. propose - reading proposal');\n  const msg = (await wrapped.readLP()).slice();\n  log('1. propose - read proposal', msg);\n  await crypto.identify(state, msg);\n  await crypto.selectProtocols(state);\n  log('1. propose - finish');\n};","map":null,"metadata":{},"sourceType":"script"}