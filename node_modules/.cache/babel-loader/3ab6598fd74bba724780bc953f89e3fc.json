{"ast":null,"code":"var _jsxFileName = \"/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/contexts/ThemeContext.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ThemeProvider as SCThemeProvider } from 'styled-components';\nimport { light, dark } from '@pancakeswap-libs/uikit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CACHE_KEY = 'IS_DARK';\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  isDark: null,\n  toggleTheme: () => null\n});\n\nconst ThemeContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY);\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false;\n  });\n\n  const toggleTheme = () => {\n    setIsDark(prevState => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState));\n      return !prevState;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      isDark,\n      toggleTheme\n    },\n    children: /*#__PURE__*/_jsxDEV(SCThemeProvider, {\n      theme: isDark ? dark : light,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ThemeContextProvider, \"pAsbKUsFomXXiy7DBgXOCWI8VwY=\");\n\n_c = ThemeContextProvider;\nexport { ThemeContext, ThemeContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeContextProvider\");","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/contexts/ThemeContext.tsx"],"names":["React","useState","ThemeProvider","SCThemeProvider","light","dark","CACHE_KEY","ThemeContext","createContext","isDark","toggleTheme","ThemeContextProvider","children","setIsDark","isDarkUserSetting","localStorage","getItem","JSON","parse","prevState","setItem","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAa,IAAIC,eAA1B,QAAiD,mBAAjD;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,yBAA5B;;AAEA,MAAMC,SAAS,GAAG,SAAlB;AAEA,MAAMC,YAAY,gBAAGP,KAAK,CAACQ,aAAN,CAAoB;AAAEC,EAAAA,MAAM,EAAE,IAAV;AAAgBC,EAAAA,WAAW,EAAE,MAAM;AAAnC,CAApB,CAArB;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC7C,QAAM,CAACH,MAAD,EAASI,SAAT,IAAsBZ,QAAQ,CAAC,MAAM;AACzC,UAAMa,iBAAiB,GAAGC,YAAY,CAACC,OAAb,CAAqBV,SAArB,CAA1B;AACA,WAAOQ,iBAAiB,GAAGG,IAAI,CAACC,KAAL,CAAWJ,iBAAX,CAAH,GAAmC,KAA3D;AACD,GAHmC,CAApC;;AAKA,QAAMJ,WAAW,GAAG,MAAM;AACxBG,IAAAA,SAAS,CAAEM,SAAD,IAAe;AACvBJ,MAAAA,YAAY,CAACK,OAAb,CAAqBd,SAArB,EAAgCW,IAAI,CAACI,SAAL,CAAe,CAACF,SAAhB,CAAhC;AACA,aAAO,CAACA,SAAR;AACD,KAHQ,CAAT;AAID,GALD;;AAOA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEV,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAA9B;AAAA,2BACE,QAAC,eAAD;AAAiB,MAAA,KAAK,EAAED,MAAM,GAAGJ,IAAH,GAAUD,KAAxC;AAAA,gBAAgDQ;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAlBD;;GAAMD,oB;;KAAAA,oB;AAoBN,SAASJ,YAAT,EAAuBI,oBAAvB","sourcesContent":["import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap-libs/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n"]},"metadata":{},"sourceType":"module"}