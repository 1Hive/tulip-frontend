{"ast":null,"code":"import _styled3 from \"styled-components\";\nimport _styled2 from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/fabianmolina/Documents/1hive/tulip-frontend/src/components/Farming/FarmTable/index.js\";\nimport React, { useState } from 'react';\nimport { DataView, textStyle, Button } from '@1hive/1hive-ui';\nimport Loading from '../../Loading';\nimport { getKnownTokenImg } from '../../../utils/known-tokens';\nimport PairName from '../PairName';\nimport RewardComponent from '../RewardComponent';\nimport Fuse from 'fuse.js';\nimport DepositModal from '../DepositModal';\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"FarmTable___StyledDiv\",\n  componentId: \"flmx2u-0\"\n})([\"\", \";font-family:'Overpass',sans-serif;font-weight:300;font-size:18px;\"], p => p._css);\n\nvar _StyledDataView = _styled(DataView).withConfig({\n  displayName: \"FarmTable___StyledDataView\",\n  componentId: \"flmx2u-1\"\n})([\"border-top:none;\"]);\n\nvar _StyledButton = _styled(Button).withConfig({\n  displayName: \"FarmTable___StyledButton\",\n  componentId: \"flmx2u-2\"\n})([\"background:linear-gradient(90deg,#aaf5d4,#7ce0d6);\"]);\n\nconst FarmTable = props => {\n  const [modalAction, setModalAction] = useState(false);\n  const [modalData, setModalData] = useState('');\n  const pairs = props.pairData || [];\n  console.log(pairs);\n  const fuse = new Fuse(pairs, {\n    keys: ['name', 'symbol']\n  });\n  const results = fuse.search(props.searchValue);\n\n  const handleModalActions = () => {\n    setModalAction(true);\n  };\n\n  const handleModalClose = () => {\n    setModalAction(false);\n  };\n\n  if (pairs.length === 0) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(_StyledDiv, {\n      _css: textStyle('body2'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(_StyledDataView, {\n      fields: ['Asset', 'Base Yield', 'Reward Yield', 'Total Yield', 'Reward Asset', ' '],\n      emptyState: {\n        default: {\n          displayLoader: false,\n          title: 'Getting Pools',\n          subtitle: null,\n          illustration: /*#__PURE__*/React.createElement(Loading, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }\n          }),\n          clearLabel: null\n        },\n        loading: {\n          displayLoader: true,\n          title: 'No data available.',\n          subtitle: null,\n          illustration: /*#__PURE__*/React.createElement(\"img\", {\n            src: \"https://i1.wp.com/www.cssscript.com/wp-content/uploads/2014/10/iOS-OS-X-Style-Pure-CSS-Loading-Spinner.jpg?fit=400%2C300&ssl=1\",\n            alt: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }\n          }),\n          clearLabel: null\n        }\n      },\n      entries: props.searchValue ? results : pairs,\n      header: true,\n      renderEntry: ({\n        name,\n        symbol,\n        poolToken,\n        totalShares,\n        lastRewardTimestamp,\n        allocPoint,\n        accHsfPerShare\n      }) => {\n        const customLabel = name;\n        const baseYield = 23;\n        const rewardYield = parseInt(baseYield * 2);\n        const totalYield = parseInt(baseYield + rewardYield);\n        const token0Img = getKnownTokenImg(symbol);\n        const token1Img = getKnownTokenImg(null);\n        const imgObj = {\n          pair1: token0Img,\n          pair2: token1Img\n        };\n        console.log(imgObj);\n        return [/*#__PURE__*/React.createElement(PairName, {\n          image: imgObj,\n          name: customLabel,\n          subheadline: \"Honeyswap\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }\n        }, baseYield, \"%\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }\n        }, rewardYield, \"%\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }\n        }, totalYield, \"%\"), /*#__PURE__*/React.createElement(RewardComponent, {\n          image: getKnownTokenImg('AG'),\n          name: \"Agave\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(_StyledButton, {\n          id: symbol,\n          label: \"Stake\",\n          onClick: e => {\n            handleModalActions();\n            console.log(e.target.id);\n            setModalData(e.target.id);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(DepositModal, {\n          modalAction: modalAction,\n          handleModalClose: handleModalClose,\n          tokenImg: imgObj,\n          data: modalData,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }\n        }))];\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }));\n  }\n};\n\nexport default FarmTable;","map":{"version":3,"sources":["/Users/fabianmolina/Documents/1hive/tulip-frontend/src/components/Farming/FarmTable/index.js"],"names":["React","useState","DataView","textStyle","Button","Loading","getKnownTokenImg","PairName","RewardComponent","Fuse","DepositModal","FarmTable","props","modalAction","setModalAction","modalData","setModalData","pairs","pairData","console","log","fuse","keys","results","search","searchValue","handleModalActions","handleModalClose","length","default","displayLoader","title","subtitle","illustration","clearLabel","loading","name","symbol","poolToken","totalShares","lastRewardTimestamp","allocPoint","accHsfPerShare","customLabel","baseYield","rewardYield","parseInt","totalYield","token0Img","token1Img","imgObj","pair1","pair2","e","target","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { DataView, textStyle, Button } from '@1hive/1hive-ui'\nimport Loading from '../../Loading'\nimport { getKnownTokenImg } from '../../../utils/known-tokens'\nimport PairName from '../PairName'\nimport RewardComponent from '../RewardComponent'\nimport Fuse from 'fuse.js'\nimport DepositModal from '../DepositModal'\n\nconst FarmTable = props => {\n  const [modalAction, setModalAction] = useState(false)\n  const [modalData, setModalData] = useState('')\n  const pairs = props.pairData || []\n  console.log(pairs)\n  const fuse = new Fuse(pairs, {\n    keys: ['name', 'symbol'],\n  })\n  const results = fuse.search(props.searchValue)\n\n  const handleModalActions = () => {\n    setModalAction(true)\n  }\n  const handleModalClose = () => {\n    setModalAction(false)\n  }\n\n  if (pairs.length === 0) {\n    return <Loading />\n  } else {\n    return (\n      <div\n        css={`\n          ${textStyle('body2')};\n          font-family: 'Overpass', sans-serif;\n          font-weight: 300;\n          font-size: 18px;\n        `}\n      >\n        <DataView\n          fields={[\n            'Asset',\n            'Base Yield',\n            'Reward Yield',\n            'Total Yield',\n            'Reward Asset',\n            ' ',\n          ]}\n          css={`\n            border-top: none;\n          `}\n          emptyState={{\n            default: {\n              displayLoader: false,\n              title: 'Getting Pools',\n              subtitle: null,\n              illustration: <Loading />,\n              clearLabel: null,\n            },\n            loading: {\n              displayLoader: true,\n              title: 'No data available.',\n              subtitle: null,\n              illustration: (\n                <img\n                  src=\"https://i1.wp.com/www.cssscript.com/wp-content/uploads/2014/10/iOS-OS-X-Style-Pure-CSS-Loading-Spinner.jpg?fit=400%2C300&ssl=1\"\n                  alt=\"\"\n                />\n              ),\n              clearLabel: null,\n            },\n          }}\n          entries={props.searchValue ? results : pairs}\n          header\n          renderEntry={({\n            name,\n            symbol,\n            poolToken,\n            totalShares,\n            lastRewardTimestamp,\n            allocPoint,\n            accHsfPerShare,\n          }) => {\n            const customLabel = name\n            const baseYield = 23\n            const rewardYield = parseInt(baseYield * 2)\n            const totalYield = parseInt(baseYield + rewardYield)\n            const token0Img = getKnownTokenImg(symbol)\n            const token1Img = getKnownTokenImg(null)\n            const imgObj = {\n              pair1: token0Img,\n              pair2: token1Img,\n            }\n            console.log(imgObj)\n            return [\n              <PairName\n                image={imgObj}\n                name={customLabel}\n                subheadline=\"Honeyswap\"\n              />,\n              <p>{baseYield}%</p>,\n              <p>{rewardYield}%</p>,\n              <p>{totalYield}%</p>,\n              <RewardComponent image={getKnownTokenImg('AG')} name=\"Agave\" />,\n              <React.Fragment>\n                <Button\n                  css={`\n                    background: linear-gradient(90deg, #aaf5d4, #7ce0d6);\n                  `}\n                  id={symbol}\n                  label=\"Stake\"\n                  onClick={e => {\n                    handleModalActions()\n                    console.log(e.target.id)\n                    setModalData(e.target.id)\n                  }}\n                />\n                <DepositModal\n                  modalAction={modalAction}\n                  handleModalClose={handleModalClose}\n                  tokenImg={imgObj}\n                  data={modalData}\n                />\n              </React.Fragment>,\n            ]\n          }}\n        />\n      </div>\n    )\n  }\n}\nexport default FarmTable\n"]},"metadata":{},"sourceType":"module"}