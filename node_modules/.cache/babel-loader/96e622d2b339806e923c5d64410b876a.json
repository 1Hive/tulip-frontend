{"ast":null,"code":"import { _ as _slicedToArray } from './slicedToArray-ad07b557.js';\nimport './unsupportedIterableToArray-aef68344.js';\nimport { _ as _defineProperty } from './defineProperty-a0480c32.js';\nimport './miscellaneous.js';\nimport './environment.js';\nimport { monospace } from './font.js';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar TEXT_STYLES = {\n  title1: {\n    size: 32,\n    weight: 600,\n    lineHeight: 1.5\n  },\n  title2: {\n    size: 26,\n    weight: 400,\n    lineHeight: 1.5\n  },\n  title3: {\n    size: 24,\n    weight: 400,\n    lineHeight: 1.5\n  },\n  title4: {\n    size: 20,\n    weight: 400,\n    lineHeight: 1.5\n  },\n  body1: {\n    size: 18,\n    weight: 400,\n    lineHeight: 1.5\n  },\n  body2: {\n    size: 16,\n    weight: 400,\n    lineHeight: 1.5\n  },\n  body3: {\n    size: 14,\n    weight: 400,\n    lineHeight: 1.5\n  },\n  body4: {\n    size: 12,\n    weight: 400,\n    lineHeight: 1.5\n  },\n  label1: {\n    size: 14,\n    weight: 400,\n    lineHeight: 1.5,\n    transform: 'uppercase'\n  },\n  label2: {\n    size: 12,\n    weight: 600,\n    lineHeight: 1.5,\n    transform: 'uppercase'\n  },\n  label3: {\n    size: 10,\n    weight: 400,\n    lineHeight: 1.5,\n    transform: 'uppercase'\n  },\n  address1: {\n    size: 16,\n    weight: 400,\n    lineHeight: 1.5,\n    monospace: true\n  },\n  address2: {\n    size: 14,\n    weight: 400,\n    lineHeight: 1.5,\n    monospace: true\n  }\n};\nvar STYLES_CSS = {\n  size: function size(value) {\n    return \"font-size: \".concat(value, \"px;\");\n  },\n  weight: function weight(value) {\n    return \"font-weight: \".concat(value, \";\");\n  },\n  transform: function transform(value) {\n    return \"text-transform: \".concat(value, \";\");\n  },\n  lineHeight: function lineHeight(value) {\n    return \"line-height: \".concat(value, \";\");\n  },\n  monospace: function monospace$1(value) {\n    return value ? monospace() : '';\n  }\n};\n\nfunction textStyleToCss(textStyle) {\n  return Object.entries(textStyle).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        name = _ref2[0],\n        value = _ref2[1];\n\n    return STYLES_CSS[name](value);\n  }).join('');\n}\n\nfunction textStyle(name) {\n  var includeLineHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (!TEXT_STYLES[name]) {\n    throw new Error('textStyle(): the text style doesnâ€™t exist: ' + name);\n  }\n\n  var style = _objectSpread({}, TEXT_STYLES[name]);\n\n  if (!includeLineHeight) {\n    delete style.lineHeight;\n  }\n\n  return textStyleToCss(style);\n}\n\nexport { TEXT_STYLES, textStyle };","map":null,"metadata":{},"sourceType":"module"}