{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { getCakeAddress } from 'utils/addressHelpers';\nimport useTokenBalance from './useTokenBalance';\n/**\n * A hook to check if a wallet's CAKE balance is at least the amount passed in\n */\n\nconst useHasCakeBalance = minimumBalance => {\n  _s();\n\n  const cakeBalance = useTokenBalance(getCakeAddress());\n  return cakeBalance.gte(minimumBalance);\n};\n\n_s(useHasCakeBalance, \"yMTS5bfkf/qSmnIOwUlIxIEslgM=\", false, function () {\n  return [useTokenBalance];\n});\n\nexport default useHasCakeBalance;","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/hooks/useHasCakeBalance.ts"],"names":["getCakeAddress","useTokenBalance","useHasCakeBalance","minimumBalance","cakeBalance","gte"],"mappings":";;AACA,SAASA,cAAT,QAA+B,sBAA/B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA;AACA;AACA;;AACA,MAAMC,iBAAiB,GAAIC,cAAD,IAA+B;AAAA;;AACvD,QAAMC,WAAW,GAAGH,eAAe,CAACD,cAAc,EAAf,CAAnC;AACA,SAAOI,WAAW,CAACC,GAAZ,CAAgBF,cAAhB,CAAP;AACD,CAHD;;GAAMD,iB;UACgBD,e;;;AAItB,eAAeC,iBAAf","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useTokenBalance from './useTokenBalance'\n\n/**\n * A hook to check if a wallet's CAKE balance is at least the amount passed in\n */\nconst useHasCakeBalance = (minimumBalance: BigNumber) => {\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  return cakeBalance.gte(minimumBalance)\n}\n\nexport default useHasCakeBalance\n"]},"metadata":{},"sourceType":"module"}