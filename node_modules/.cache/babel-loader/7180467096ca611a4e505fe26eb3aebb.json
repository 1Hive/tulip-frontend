{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _taggedTemplateLiteral = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\n\nvar pageResults = require('graph-results-pager');\n\nvar ws = require('isomorphic-ws');\n\nvar _require = require('subscriptions-transport-ws'),\n    SubscriptionClient = _require.SubscriptionClient;\n\nvar _require2 = require('graphql-request'),\n    request = _require2.request,\n    gql = _require2.gql;\n\nvar _require3 = require('./../../constants'),\n    graphAPIEndpoints = _require3.graphAPIEndpoints,\n    graphWSEndpoints = _require3.graphWSEndpoints,\n    TWENTY_FOUR_HOURS = _require3.TWENTY_FOUR_HOURS;\n\nvar _require4 = require('./../../utils'),\n    timestampToBlock = _require4.timestampToBlock,\n    blockToTimestamp = _require4.blockToTimestamp;\n\nmodule.exports = {\n  factory: function factory() {\n    var _arguments = arguments;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _ref, _ref$block, block, _ref$timestamp, timestamp, result;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _ref = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : {}, _ref$block = _ref.block, block = _ref$block === void 0 ? undefined : _ref$block, _ref$timestamp = _ref.timestamp, timestamp = _ref$timestamp === void 0 ? undefined : _ref$timestamp;\n\n              if (!block) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.t0 = block;\n              _context.next = 13;\n              break;\n\n            case 5:\n              if (!timestamp) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 8;\n              return timestampToBlock(timestamp);\n\n            case 8:\n              _context.t1 = _context.sent;\n              _context.next = 12;\n              break;\n\n            case 11:\n              _context.t1 = undefined;\n\n            case 12:\n              _context.t0 = _context.t1;\n\n            case 13:\n              block = _context.t0;\n              block = block ? \"block: { number: \".concat(block, \" }\") : \"\";\n              _context.next = 17;\n              return request(graphAPIEndpoints.exchange, gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"{\\n                    factory(id: \\\"\", \"\\\", \", \") {\\n                        \", \"\\n                    }\\n                }\"])), factoryAddress, block, _factory.properties.toString()));\n\n            case 17:\n              result = _context.sent;\n              return _context.abrupt(\"return\", _factory.callback(result.factory));\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  observeFactory: function observeFactory() {\n    var query = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n            subscription {\\n                factory(id: \\\"\", \"\\\") {\\n                    \", \"\\n                }\\n        }\"])), factoryAddress, _factory.properties.toString());\n    var client = new SubscriptionClient(graphWSEndpoints.exchange, {\n      reconnect: true\n    }, ws);\n    var observable = client.request({\n      query: query\n    });\n    return {\n      subscribe: function subscribe(_ref2) {\n        var _next = _ref2.next,\n            error = _ref2.error,\n            complete = _ref2.complete;\n        return observable.subscribe({\n          next: function next(results) {\n            _next(_factory.callback(results.data.factory));\n          },\n          error: error,\n          complete: complete\n        });\n      }\n    };\n  },\n  dayData: function dayData() {\n    var _arguments2 = arguments;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _ref3, _ref3$minTimestamp, minTimestamp, _ref3$maxTimestamp, maxTimestamp, _ref3$minBlock, minBlock, _ref3$maxBlock, maxBlock;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _ref3 = _arguments2.length > 0 && _arguments2[0] !== undefined ? _arguments2[0] : {}, _ref3$minTimestamp = _ref3.minTimestamp, minTimestamp = _ref3$minTimestamp === void 0 ? undefined : _ref3$minTimestamp, _ref3$maxTimestamp = _ref3.maxTimestamp, maxTimestamp = _ref3$maxTimestamp === void 0 ? undefined : _ref3$maxTimestamp, _ref3$minBlock = _ref3.minBlock, minBlock = _ref3$minBlock === void 0 ? undefined : _ref3$minBlock, _ref3$maxBlock = _ref3.maxBlock, maxBlock = _ref3$maxBlock === void 0 ? undefined : _ref3$maxBlock;\n              _context2.t0 = pageResults;\n              _context2.t1 = graphAPIEndpoints.exchange;\n              _context2.t2 = minTimestamp;\n\n              if (_context2.t2) {\n                _context2.next = 13;\n                break;\n              }\n\n              if (!minBlock) {\n                _context2.next = 11;\n                break;\n              }\n\n              _context2.next = 8;\n              return blockToTimestamp(minBlock);\n\n            case 8:\n              _context2.t3 = _context2.sent;\n              _context2.next = 12;\n              break;\n\n            case 11:\n              _context2.t3 = undefined;\n\n            case 12:\n              _context2.t2 = _context2.t3;\n\n            case 13:\n              _context2.t4 = _context2.t2;\n              _context2.t5 = maxTimestamp;\n\n              if (_context2.t5) {\n                _context2.next = 24;\n                break;\n              }\n\n              if (!maxBlock) {\n                _context2.next = 22;\n                break;\n              }\n\n              _context2.next = 19;\n              return blockToTimestamp(maxBlock);\n\n            case 19:\n              _context2.t6 = _context2.sent;\n              _context2.next = 23;\n              break;\n\n            case 22:\n              _context2.t6 = undefined;\n\n            case 23:\n              _context2.t5 = _context2.t6;\n\n            case 24:\n              _context2.t7 = _context2.t5;\n              _context2.t8 = {\n                date_gte: _context2.t4,\n                date_lte: _context2.t7\n              };\n              _context2.t9 = {\n                orderDirection: 'desc',\n                where: _context2.t8\n              };\n              _context2.t10 = _dayData.properties;\n              _context2.t11 = {\n                entity: 'dayDatas',\n                selection: _context2.t9,\n                properties: _context2.t10\n              };\n              _context2.t12 = {\n                api: _context2.t1,\n                query: _context2.t11\n              };\n              return _context2.abrupt(\"return\", (0, _context2.t0)(_context2.t12).then(function (results) {\n                return _dayData.callback(results);\n              }).catch(function (err) {\n                return console.log(err);\n              }));\n\n            case 31:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  twentyFourHourData: function twentyFourHourData() {\n    var _arguments3 = arguments;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _ref4, _ref4$block, block, _ref4$timestamp, timestamp, result, result24ago;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _ref4 = _arguments3.length > 0 && _arguments3[0] !== undefined ? _arguments3[0] : {}, _ref4$block = _ref4.block, block = _ref4$block === void 0 ? undefined : _ref4$block, _ref4$timestamp = _ref4.timestamp, timestamp = _ref4$timestamp === void 0 ? undefined : _ref4$timestamp;\n\n              if (!timestamp) {\n                _context3.next = 5;\n                break;\n              }\n\n              _context3.t0 = timestamp;\n              _context3.next = 13;\n              break;\n\n            case 5:\n              if (!block) {\n                _context3.next = 11;\n                break;\n              }\n\n              _context3.next = 8;\n              return blockToTimestamp(block);\n\n            case 8:\n              _context3.t1 = _context3.sent;\n              _context3.next = 12;\n              break;\n\n            case 11:\n              _context3.t1 = Date.now() / 1000;\n\n            case 12:\n              _context3.t0 = _context3.t1;\n\n            case 13:\n              timestamp = _context3.t0;\n              timestamp24ago = timestamp - TWENTY_FOUR_HOURS;\n              _context3.next = 17;\n              return timestampToBlock(timestamp);\n\n            case 17:\n              block = _context3.sent;\n              _context3.next = 20;\n              return timestampToBlock(timestamp24ago);\n\n            case 20:\n              block24ago = _context3.sent;\n              block = \"block: { number: \".concat(block, \" }\");\n              block24ago = \"block: { number: \".concat(block24ago, \" }\");\n              _context3.next = 25;\n              return request(graphAPIEndpoints.exchange, gql(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"{\\n                    factory(id: \\\"\", \"\\\", \", \") {\\n                        \", \"\\n                    }\\n                }\"])), factoryAddress, block, _twentyFourHourData.properties.toString()));\n\n            case 25:\n              result = _context3.sent;\n              _context3.next = 28;\n              return request(graphAPIEndpoints.exchange, gql(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"{\\n                    factory(id: \\\"\", \"\\\", \", \") {\\n                        \", \"\\n                    }\\n                }\"])), factoryAddress, block24ago, _twentyFourHourData.properties.toString()));\n\n            case 28:\n              result24ago = _context3.sent;\n              return _context3.abrupt(\"return\", _twentyFourHourData.callback(result.factory, result24ago.factory));\n\n            case 30:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  }\n};\nvar _factory = {\n  properties: ['pairCount', 'volumeUSD', 'volumeETH', 'untrackedVolumeUSD', 'liquidityUSD', 'liquidityETH', 'txCount', 'tokenCount', 'userCount'],\n  callback: function callback(results) {\n    return {\n      pairCount: Number(results.pairCount),\n      volumeUSD: Number(results.volumeUSD),\n      volumeETH: Number(results.volumeETH),\n      untrackedVolumeUSD: Number(results.untrackedVolumeUSD),\n      liquidityUSD: Number(results.liquidityUSD),\n      liquidityETH: Number(results.liquidityETH),\n      txCount: Number(results.txCount),\n      tokenCount: Number(results.tokenCount),\n      userCount: Number(results.userCount)\n    };\n  }\n};\nvar _dayData = {\n  properties: ['id', 'date', 'volumeETH', 'volumeUSD', 'liquidityETH', 'liquidityUSD', 'txCount'],\n  callback: function callback(results) {\n    return results.map(function (_ref5) {\n      var id = _ref5.id,\n          date = _ref5.date,\n          volumeETH = _ref5.volumeETH,\n          volumeUSD = _ref5.volumeUSD,\n          liquidityETH = _ref5.liquidityETH,\n          liquidityUSD = _ref5.liquidityUSD,\n          txCount = _ref5.txCount;\n      return {\n        id: Number(id),\n        date: new Date(date * 1000),\n        volumeETH: Number(volumeETH),\n        volumeUSD: Number(volumeUSD),\n        liquidityETH: Number(liquidityETH),\n        liquidityUSD: Number(liquidityUSD),\n        txCount: Number(txCount)\n      };\n    });\n  }\n};\nvar _twentyFourHourData = {\n  properties: ['id', 'volumeUSD', 'volumeETH', 'untrackedVolumeUSD', 'liquidityUSD', 'liquidityETH', 'txCount', 'pairCount'],\n  callback: function callback(results, results24ago) {\n    return {\n      id: results.id,\n      volumeUSD: Number(results.volumeUSD) - Number(results24ago.volumeUSD),\n      volumeETH: Number(results.volumeETH) - Number(results24ago.volumeETH),\n      untrackedVolumeUSD: Number(results.untrackedVolumeUSD) - Number(results24ago.untrackedVolumeUSD),\n      liquidityETH: Number(results.liquidityETH) - Number(results24ago.liquidityETH),\n      liquidityUSD: Number(results.liquidityUSD) - Number(results24ago.liquidityUSD),\n      txCount: Number(results.txCount) - Number(results24ago.txCount),\n      pairCount: Number(results.pairCount) - Number(results24ago.pairCount)\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"script"}