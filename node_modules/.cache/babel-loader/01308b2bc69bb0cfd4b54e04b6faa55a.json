{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar extract_files_1 = require(\"extract-files\");\n\nvar form_data_1 = __importDefault(require(\"form-data\"));\n/**\n * Duck type if NodeJS stream\n * https://github.com/sindresorhus/is-stream/blob/3750505b0727f6df54324784fe369365ef78841e/index.js#L3\n */\n\n\nvar isExtractableFileEnhanced = function isExtractableFileEnhanced(value) {\n  return extract_files_1.isExtractableFile(value) || value !== null && typeof value === 'object' && typeof value.pipe === 'function';\n};\n/**\n * Returns Multipart Form if body contains files\n * (https://github.com/jaydenseric/graphql-multipart-request-spec)\n * Otherwise returns JSON\n */\n\n\nfunction createRequestBody(query, variables) {\n  var _a = extract_files_1.extractFiles({\n    query: query,\n    variables: variables\n  }, '', isExtractableFileEnhanced),\n      clone = _a.clone,\n      files = _a.files;\n\n  if (files.size === 0) {\n    return JSON.stringify(clone);\n  }\n\n  var Form = typeof FormData === 'undefined' ? form_data_1.default : FormData;\n  var form = new Form();\n  form.append('operations', JSON.stringify(clone));\n  var map = {};\n  var i = 0;\n  files.forEach(function (paths) {\n    map[++i] = paths;\n  });\n  form.append('map', JSON.stringify(map));\n  i = 0;\n  files.forEach(function (paths, file) {\n    form.append(\"\" + ++i, file);\n  });\n  return form;\n}\n\nexports.default = createRequestBody;","map":null,"metadata":{},"sourceType":"script"}