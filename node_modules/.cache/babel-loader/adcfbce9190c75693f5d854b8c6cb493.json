{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _asyncIterator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nexports.first = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(iterator) {\n    var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, value;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _context.prev = 2;\n            _iterator = _asyncIterator(iterator);\n\n          case 4:\n            _context.next = 6;\n            return _iterator.next();\n\n          case 6:\n            _step = _context.sent;\n            _iteratorNormalCompletion = _step.done;\n            _context.next = 10;\n            return _step.value;\n\n          case 10:\n            _value = _context.sent;\n\n            if (_iteratorNormalCompletion) {\n              _context.next = 17;\n              break;\n            }\n\n            value = _value;\n            return _context.abrupt(\"return\", value);\n\n          case 14:\n            _iteratorNormalCompletion = true;\n            _context.next = 4;\n            break;\n\n          case 17:\n            _context.next = 23;\n            break;\n\n          case 19:\n            _context.prev = 19;\n            _context.t0 = _context[\"catch\"](2);\n            _didIteratorError = true;\n            _iteratorError = _context.t0;\n\n          case 23:\n            _context.prev = 23;\n            _context.prev = 24;\n\n            if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n              _context.next = 28;\n              break;\n            }\n\n            _context.next = 28;\n            return _iterator.return();\n\n          case 28:\n            _context.prev = 28;\n\n            if (!_didIteratorError) {\n              _context.next = 31;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 31:\n            return _context.finish(28);\n\n          case 32:\n            return _context.finish(23);\n\n          case 33:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 19, 23, 33], [24,, 28, 32]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.last = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(iterator) {\n    var value, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _value2;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _iteratorNormalCompletion2 = true;\n            _didIteratorError2 = false;\n            _context2.prev = 2;\n            _iterator2 = _asyncIterator(iterator);\n\n          case 4:\n            _context2.next = 6;\n            return _iterator2.next();\n\n          case 6:\n            _step2 = _context2.sent;\n            _iteratorNormalCompletion2 = _step2.done;\n            _context2.next = 10;\n            return _step2.value;\n\n          case 10:\n            _value2 = _context2.sent;\n\n            if (_iteratorNormalCompletion2) {\n              _context2.next = 16;\n              break;\n            }\n\n            value = _value2;\n\n          case 13:\n            _iteratorNormalCompletion2 = true;\n            _context2.next = 4;\n            break;\n\n          case 16:\n            _context2.next = 22;\n            break;\n\n          case 18:\n            _context2.prev = 18;\n            _context2.t0 = _context2[\"catch\"](2);\n            _didIteratorError2 = true;\n            _iteratorError2 = _context2.t0;\n\n          case 22:\n            _context2.prev = 22;\n            _context2.prev = 23;\n\n            if (!(!_iteratorNormalCompletion2 && _iterator2.return != null)) {\n              _context2.next = 27;\n              break;\n            }\n\n            _context2.next = 27;\n            return _iterator2.return();\n\n          case 27:\n            _context2.prev = 27;\n\n            if (!_didIteratorError2) {\n              _context2.next = 30;\n              break;\n            }\n\n            throw _iteratorError2;\n\n          case 30:\n            return _context2.finish(27);\n\n          case 31:\n            return _context2.finish(22);\n\n          case 32:\n            return _context2.abrupt(\"return\", value);\n\n          case 33:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 18, 22, 32], [23,, 27, 31]]);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.all = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(iterator) {\n    var values, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, _value3, value;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            values = [];\n            _iteratorNormalCompletion3 = true;\n            _didIteratorError3 = false;\n            _context3.prev = 3;\n            _iterator3 = _asyncIterator(iterator);\n\n          case 5:\n            _context3.next = 7;\n            return _iterator3.next();\n\n          case 7:\n            _step3 = _context3.sent;\n            _iteratorNormalCompletion3 = _step3.done;\n            _context3.next = 11;\n            return _step3.value;\n\n          case 11:\n            _value3 = _context3.sent;\n\n            if (_iteratorNormalCompletion3) {\n              _context3.next = 18;\n              break;\n            }\n\n            value = _value3;\n            values.push(value);\n\n          case 15:\n            _iteratorNormalCompletion3 = true;\n            _context3.next = 5;\n            break;\n\n          case 18:\n            _context3.next = 24;\n            break;\n\n          case 20:\n            _context3.prev = 20;\n            _context3.t0 = _context3[\"catch\"](3);\n            _didIteratorError3 = true;\n            _iteratorError3 = _context3.t0;\n\n          case 24:\n            _context3.prev = 24;\n            _context3.prev = 25;\n\n            if (!(!_iteratorNormalCompletion3 && _iterator3.return != null)) {\n              _context3.next = 29;\n              break;\n            }\n\n            _context3.next = 29;\n            return _iterator3.return();\n\n          case 29:\n            _context3.prev = 29;\n\n            if (!_didIteratorError3) {\n              _context3.next = 32;\n              break;\n            }\n\n            throw _iteratorError3;\n\n          case 32:\n            return _context3.finish(29);\n\n          case 33:\n            return _context3.finish(24);\n\n          case 34:\n            return _context3.abrupt(\"return\", values);\n\n          case 35:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[3, 20, 24, 34], [25,, 29, 33]]);\n  }));\n\n  return function (_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexports.extendIterator = function (iterator) {\n  iterator.first = function () {\n    return exports.first(iterator);\n  };\n\n  iterator.last = function () {\n    return exports.last(iterator);\n  };\n\n  iterator.all = function () {\n    return exports.all(iterator);\n  };\n\n  return iterator;\n};","map":null,"metadata":{},"sourceType":"script"}