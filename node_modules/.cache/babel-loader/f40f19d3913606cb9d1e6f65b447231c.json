{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar pageResults = require('graph-results-pager');\n\nvar ws = require('isomorphic-ws');\n\nvar _require = require('subscriptions-transport-ws'),\n    SubscriptionClient = _require.SubscriptionClient;\n\nvar _require2 = require('graphql-request'),\n    request = _require2.request,\n    gql = _require2.gql;\n\nvar _require3 = require('../constants'),\n    graphAPIEndpoints = _require3.graphAPIEndpoints,\n    graphWSEndpoints = _require3.graphWSEndpoints;\n\nvar _require4 = require('../utils'),\n    timestampToBlock = _require4.timestampToBlock;\n\nmodule.exports = {\n  userHistory: function userHistory() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$minTimestamp = _ref.minTimestamp,\n        minTimestamp = _ref$minTimestamp === void 0 ? undefined : _ref$minTimestamp,\n        _ref$maxTimestamp = _ref.maxTimestamp,\n        maxTimestamp = _ref$maxTimestamp === void 0 ? undefined : _ref$maxTimestamp,\n        _ref$minBlock = _ref.minBlock,\n        minBlock = _ref$minBlock === void 0 ? undefined : _ref$minBlock,\n        _ref$maxBlock = _ref.maxBlock,\n        maxBlock = _ref$maxBlock === void 0 ? undefined : _ref$maxBlock,\n        _ref$user_address = _ref.user_address,\n        user_address = _ref$user_address === void 0 ? undefined : _ref$user_address,\n        _ref$max = _ref.max,\n        max = _ref$max === void 0 ? undefined : _ref$max;\n\n    if (!user_address) {\n      throw new Error(\"sushi-data: User address undefined\");\n    }\n\n    return pageResults({\n      api: graphAPIEndpoints.exchange_v1,\n      query: {\n        entity: 'liquidityPositionSnapshots',\n        selection: {\n          where: {\n            user: \"\\\\\\\"\".concat(user_address.toLowerCase(), \"\\\\\\\"\"),\n            block_gte: minBlock || undefined,\n            block_lte: maxBlock || undefined,\n            timestamp_gte: minTimestamp || undefined,\n            timestamp_lte: maxTimestamp || undefined\n          }\n        },\n        properties: _userHistory.properties\n      },\n      max: max\n    }).then(function (results) {\n      return _userHistory.callback(results);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  },\n  userPositions: function userPositions() {\n    var _arguments = arguments;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _ref2, _ref2$block, block, _ref2$timestamp, timestamp, _ref2$user_address, user_address;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _ref2 = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : {}, _ref2$block = _ref2.block, block = _ref2$block === void 0 ? undefined : _ref2$block, _ref2$timestamp = _ref2.timestamp, timestamp = _ref2$timestamp === void 0 ? undefined : _ref2$timestamp, _ref2$user_address = _ref2.user_address, user_address = _ref2$user_address === void 0 ? undefined : _ref2$user_address;\n\n              if (user_address) {\n                _context.next = 3;\n                break;\n              }\n\n              throw new Error(\"sushi-data: User address undefined\");\n\n            case 3:\n              _context.t0 = pageResults;\n              _context.t1 = graphAPIEndpoints.exchange_v1;\n              _context.t2 = {\n                user: \"\\\\\\\"\".concat(user_address.toLowerCase(), \"\\\\\\\"\")\n              };\n\n              if (!block) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.t3 = {\n                number: block\n              };\n              _context.next = 19;\n              break;\n\n            case 10:\n              if (!timestamp) {\n                _context.next = 17;\n                break;\n              }\n\n              _context.next = 13;\n              return timestampToBlock(timestamp);\n\n            case 13:\n              _context.t5 = _context.sent;\n              _context.t4 = {\n                number: _context.t5\n              };\n              _context.next = 18;\n              break;\n\n            case 17:\n              _context.t4 = undefined;\n\n            case 18:\n              _context.t3 = _context.t4;\n\n            case 19:\n              _context.t6 = _context.t3;\n              _context.t7 = {\n                where: _context.t2,\n                block: _context.t6\n              };\n              _context.t8 = _userPositions.properties;\n              _context.t9 = {\n                entity: 'liquidityPositions',\n                selection: _context.t7,\n                properties: _context.t8\n              };\n              _context.t10 = {\n                api: _context.t1,\n                query: _context.t9\n              };\n              return _context.abrupt(\"return\", (0, _context.t0)(_context.t10).then(function (results) {\n                return _userPositions.callback(results);\n              }).catch(function (err) {\n                return console.log(err);\n              }));\n\n            case 25:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }\n};\nvar _userHistory = {\n  properties: ['id', 'timestamp', 'block', 'pair { id, reserve0, reserve1, reserveUSD, token0 { id }, token1 { id } }', 'token0PriceUSD', 'token1PriceUSD', 'reserve0', 'reserve1', 'reserveUSD', 'liquidityTokenTotalSupply', 'liquidityTokenBalance'],\n  callback: function callback(results) {\n    return results.map(function (entry) {\n      return {\n        id: entry.id,\n        timestamp: Number(entry.timestamp),\n        block: Number(entry.block),\n        pair: {\n          id: entry.pair.id,\n          reserve0: Number(entry.pair.reserve0),\n          reserve1: Number(entry.pair.reserve1),\n          reserveUSD: Number(entry.pair.reserveUSD),\n          token0: {\n            id: entry.pair.token0.id\n          },\n          token1: {\n            id: entry.pair.token1.id\n          }\n        },\n        token0PriceUSD: Number(entry.token0PriceUSD),\n        token1PriceUSD: Number(entry.token1PriceUSD),\n        reserve0: Number(entry.reserve0),\n        reserve1: Number(entry.reserve1),\n        reserveUSD: Number(entry.reserveUSD),\n        liquidityTokenTotalSupply: Number(entry.liquidityTokenTotalSupply),\n        liquidityTokenBalance: Number(entry.liquidityTokenBalance)\n      };\n    });\n  }\n};\nvar _userPositions = {\n  properties: ['id', 'pair { id, reserve0, reserve1, reserveUSD, token0 { id, symbol, derivedETH }, token1 { id, symbol, derivedETH }, totalSupply }', 'liquidityTokenBalance'],\n  callback: function callback(results) {\n    return results.map(function (entry) {\n      return {\n        id: entry.id,\n        pair: {\n          id: entry.pair.id,\n          reserve0: Number(entry.pair.reserve0),\n          reserve1: Number(entry.pair.reserve1),\n          reserveUSD: Number(entry.pair.reserveUSD),\n          token0: {\n            id: entry.pair.token0.id,\n            symbol: entry.pair.token0.symbol,\n            derivedETH: Number(entry.pair.token0.derivedETH)\n          },\n          token1: {\n            id: entry.pair.token1.id,\n            symbol: entry.pair.token1.symbol,\n            derivedETH: Number(entry.pair.token1.derivedETH)\n          },\n          totalSupply: Number(entry.pair.totalSupply)\n        },\n        liquidityTokenBalance: Number(entry.liquidityTokenBalance)\n      };\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"script"}