{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Distributions = void 0;\n\nconst core_1 = require(\"../core\");\n\nclass Distributions extends core_1.CrowdinApi {\n  /**\n   * @param projectId project identifier\n   * @param limit maximum number of items to retrieve (default 25)\n   * @param offset starting offset in the collection (default 0)\n   */\n  listDistributions(projectId, limit, offset) {\n    const url = `${this.url}/projects/${projectId}/distributions`;\n    return this.getList(url, limit, offset);\n  }\n  /**\n   * @param projectId project identifier\n   * @param request request body\n   */\n\n\n  createDistribution(projectId, request) {\n    const url = `${this.url}/projects/${projectId}/distributions`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param hash hash\n   */\n\n\n  getDistribution(projectId, hash) {\n    const url = `${this.url}/projects/${projectId}/distributions/${hash}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param hash hash\n   */\n\n\n  deleteDistribution(projectId, hash) {\n    const url = `${this.url}/projects/${projectId}/distributions/${hash}`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param hash hash\n   * @param request request body\n   */\n\n\n  editDistribution(projectId, hash, request) {\n    const url = `${this.url}/projects/${projectId}/distributions/${hash}`;\n    return this.patch(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param hash hash\n   */\n\n\n  getDistributionRelease(projectId, hash) {\n    const url = `${this.url}/projects/${projectId}/distributions/${hash}/release`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param hash hash\n   * @param request request body\n   */\n\n\n  createDistributionRelease(projectId, hash) {\n    const url = `${this.url}/projects/${projectId}/distributions/${hash}/release`;\n    return this.post(url, {}, this.defaultConfig());\n  }\n\n}\n\nexports.Distributions = Distributions;","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/node_modules/@crowdin/crowdin-api-client/out/distributions/index.js"],"names":["Object","defineProperty","exports","value","Distributions","core_1","require","CrowdinApi","listDistributions","projectId","limit","offset","url","getList","createDistribution","request","post","defaultConfig","getDistribution","hash","get","deleteDistribution","delete","editDistribution","patch","getDistributionRelease","createDistributionRelease"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,aAAR,GAAwB,KAAK,CAA7B;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AACA,MAAMF,aAAN,SAA4BC,MAAM,CAACE,UAAnC,CAA8C;AAC1C;AACJ;AACA;AACA;AACA;AACIC,EAAAA,iBAAiB,CAACC,SAAD,EAAYC,KAAZ,EAAmBC,MAAnB,EAA2B;AACxC,UAAMC,GAAG,GAAI,GAAE,KAAKA,GAAI,aAAYH,SAAU,gBAA9C;AACA,WAAO,KAAKI,OAAL,CAAaD,GAAb,EAAkBF,KAAlB,EAAyBC,MAAzB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIG,EAAAA,kBAAkB,CAACL,SAAD,EAAYM,OAAZ,EAAqB;AACnC,UAAMH,GAAG,GAAI,GAAE,KAAKA,GAAI,aAAYH,SAAU,gBAA9C;AACA,WAAO,KAAKO,IAAL,CAAUJ,GAAV,EAAeG,OAAf,EAAwB,KAAKE,aAAL,EAAxB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIC,EAAAA,eAAe,CAACT,SAAD,EAAYU,IAAZ,EAAkB;AAC7B,UAAMP,GAAG,GAAI,GAAE,KAAKA,GAAI,aAAYH,SAAU,kBAAiBU,IAAK,EAApE;AACA,WAAO,KAAKC,GAAL,CAASR,GAAT,EAAc,KAAKK,aAAL,EAAd,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACII,EAAAA,kBAAkB,CAACZ,SAAD,EAAYU,IAAZ,EAAkB;AAChC,UAAMP,GAAG,GAAI,GAAE,KAAKA,GAAI,aAAYH,SAAU,kBAAiBU,IAAK,EAApE;AACA,WAAO,KAAKG,MAAL,CAAYV,GAAZ,EAAiB,KAAKK,aAAL,EAAjB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIM,EAAAA,gBAAgB,CAACd,SAAD,EAAYU,IAAZ,EAAkBJ,OAAlB,EAA2B;AACvC,UAAMH,GAAG,GAAI,GAAE,KAAKA,GAAI,aAAYH,SAAU,kBAAiBU,IAAK,EAApE;AACA,WAAO,KAAKK,KAAL,CAAWZ,GAAX,EAAgBG,OAAhB,EAAyB,KAAKE,aAAL,EAAzB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIQ,EAAAA,sBAAsB,CAAChB,SAAD,EAAYU,IAAZ,EAAkB;AACpC,UAAMP,GAAG,GAAI,GAAE,KAAKA,GAAI,aAAYH,SAAU,kBAAiBU,IAAK,UAApE;AACA,WAAO,KAAKC,GAAL,CAASR,GAAT,EAAc,KAAKK,aAAL,EAAd,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIS,EAAAA,yBAAyB,CAACjB,SAAD,EAAYU,IAAZ,EAAkB;AACvC,UAAMP,GAAG,GAAI,GAAE,KAAKA,GAAI,aAAYH,SAAU,kBAAiBU,IAAK,UAApE;AACA,WAAO,KAAKH,IAAL,CAAUJ,GAAV,EAAe,EAAf,EAAmB,KAAKK,aAAL,EAAnB,CAAP;AACH;;AA3DyC;;AA6D9Cf,OAAO,CAACE,aAAR,GAAwBA,aAAxB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Distributions = void 0;\nconst core_1 = require(\"../core\");\nclass Distributions extends core_1.CrowdinApi {\n    /**\n     * @param projectId project identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    listDistributions(projectId, limit, offset) {\n        const url = `${this.url}/projects/${projectId}/distributions`;\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    createDistribution(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/distributions`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param hash hash\n     */\n    getDistribution(projectId, hash) {\n        const url = `${this.url}/projects/${projectId}/distributions/${hash}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param hash hash\n     */\n    deleteDistribution(projectId, hash) {\n        const url = `${this.url}/projects/${projectId}/distributions/${hash}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param hash hash\n     * @param request request body\n     */\n    editDistribution(projectId, hash, request) {\n        const url = `${this.url}/projects/${projectId}/distributions/${hash}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param hash hash\n     */\n    getDistributionRelease(projectId, hash) {\n        const url = `${this.url}/projects/${projectId}/distributions/${hash}/release`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param hash hash\n     * @param request request body\n     */\n    createDistributionRelease(projectId, hash) {\n        const url = `${this.url}/projects/${projectId}/distributions/${hash}/release`;\n        return this.post(url, {}, this.defaultConfig());\n    }\n}\nexports.Distributions = Distributions;\n"]},"metadata":{},"sourceType":"script"}