{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SourceStringsModel = exports.SourceStrings = void 0;\n\nconst core_1 = require(\"../core\");\n\nclass SourceStrings extends core_1.CrowdinApi {\n  listProjectStrings(projectId, fileIdOrRequest, limit, offset, filter, denormalizePlaceholders, labelIds, scope) {\n    let url = `${this.url}/projects/${projectId}/strings`;\n    let request;\n\n    if (fileIdOrRequest && typeof fileIdOrRequest === 'object') {\n      request = fileIdOrRequest;\n    } else {\n      request = {\n        fileId: fileIdOrRequest,\n        limit,\n        offset,\n        filter,\n        denormalizePlaceholders,\n        labelIds,\n        scope\n      };\n    }\n\n    url = this.addQueryParam(url, 'fileId', request.fileId);\n    url = this.addQueryParam(url, 'filter', request.filter);\n    url = this.addQueryParam(url, 'denormalizePlaceholders', request.denormalizePlaceholders);\n    url = this.addQueryParam(url, 'labelIds', request.labelIds);\n    url = this.addQueryParam(url, 'scope', request.scope);\n    return this.getList(url, request.limit, request.offset);\n  }\n  /**\n   * @param projectId project identifier\n   * @param request request body\n   */\n\n\n  addString(projectId, request) {\n    const url = `${this.url}/projects/${projectId}/strings`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param stringId string identifier\n   */\n\n\n  getString(projectId, stringId) {\n    const url = `${this.url}/projects/${projectId}/strings/${stringId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param stringId string identifier\n   */\n\n\n  deleteString(projectId, stringId) {\n    const url = `${this.url}/projects/${projectId}/strings/${stringId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param stringId string identifier\n   * @param request request body\n   */\n\n\n  editString(projectId, stringId, request) {\n    const url = `${this.url}/projects/${projectId}/strings/${stringId}`;\n    return this.patch(url, request, this.defaultConfig());\n  }\n\n}\n\nexports.SourceStrings = SourceStrings;\nvar SourceStringsModel;\n\n(function (SourceStringsModel) {\n  let Type;\n\n  (function (Type) {\n    Type[Type[\"TEXT\"] = 0] = \"TEXT\";\n    Type[Type[\"ASSET\"] = 1] = \"ASSET\";\n    Type[Type[\"ICU\"] = 2] = \"ICU\";\n  })(Type = SourceStringsModel.Type || (SourceStringsModel.Type = {}));\n\n  let Scope;\n\n  (function (Scope) {\n    Scope[\"IDENTIFIER\"] = \"identifier\";\n    Scope[\"TEXT\"] = \"text\";\n    Scope[\"CONTEXT\"] = \"context\";\n  })(Scope = SourceStringsModel.Scope || (SourceStringsModel.Scope = {}));\n})(SourceStringsModel = exports.SourceStringsModel || (exports.SourceStringsModel = {}));","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/node_modules/@crowdin/crowdin-api-client/out/sourceStrings/index.js"],"names":["Object","defineProperty","exports","value","SourceStringsModel","SourceStrings","core_1","require","CrowdinApi","listProjectStrings","projectId","fileIdOrRequest","limit","offset","filter","denormalizePlaceholders","labelIds","scope","url","request","fileId","addQueryParam","getList","addString","post","defaultConfig","getString","stringId","get","deleteString","delete","editString","patch","Type","Scope"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SourceStringsModel = exports.SourceStrings = void 0;\nconst core_1 = require(\"../core\");\nclass SourceStrings extends core_1.CrowdinApi {\n    listProjectStrings(projectId, fileIdOrRequest, limit, offset, filter, denormalizePlaceholders, labelIds, scope) {\n        let url = `${this.url}/projects/${projectId}/strings`;\n        let request;\n        if (fileIdOrRequest && typeof fileIdOrRequest === 'object') {\n            request = fileIdOrRequest;\n        }\n        else {\n            request = { fileId: fileIdOrRequest, limit, offset, filter, denormalizePlaceholders, labelIds, scope };\n        }\n        url = this.addQueryParam(url, 'fileId', request.fileId);\n        url = this.addQueryParam(url, 'filter', request.filter);\n        url = this.addQueryParam(url, 'denormalizePlaceholders', request.denormalizePlaceholders);\n        url = this.addQueryParam(url, 'labelIds', request.labelIds);\n        url = this.addQueryParam(url, 'scope', request.scope);\n        return this.getList(url, request.limit, request.offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    addString(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/strings`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringId string identifier\n     */\n    getString(projectId, stringId) {\n        const url = `${this.url}/projects/${projectId}/strings/${stringId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringId string identifier\n     */\n    deleteString(projectId, stringId) {\n        const url = `${this.url}/projects/${projectId}/strings/${stringId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringId string identifier\n     * @param request request body\n     */\n    editString(projectId, stringId, request) {\n        const url = `${this.url}/projects/${projectId}/strings/${stringId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n}\nexports.SourceStrings = SourceStrings;\nvar SourceStringsModel;\n(function (SourceStringsModel) {\n    let Type;\n    (function (Type) {\n        Type[Type[\"TEXT\"] = 0] = \"TEXT\";\n        Type[Type[\"ASSET\"] = 1] = \"ASSET\";\n        Type[Type[\"ICU\"] = 2] = \"ICU\";\n    })(Type = SourceStringsModel.Type || (SourceStringsModel.Type = {}));\n    let Scope;\n    (function (Scope) {\n        Scope[\"IDENTIFIER\"] = \"identifier\";\n        Scope[\"TEXT\"] = \"text\";\n        Scope[\"CONTEXT\"] = \"context\";\n    })(Scope = SourceStringsModel.Scope || (SourceStringsModel.Scope = {}));\n})(SourceStringsModel = exports.SourceStringsModel || (exports.SourceStringsModel = {}));\n"]},"metadata":{},"sourceType":"script"}