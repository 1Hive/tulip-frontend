{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MachineTranslation = void 0;\n\nconst core_1 = require(\"../core\");\n\nclass MachineTranslation extends core_1.CrowdinApi {\n  /**\n   * @param groupId group identifier\n   * @param limit maximum number of items to retrieve (default 25)\n   * @param offset starting offset in the collection (default 0)\n   */\n  listMts(groupId, limit, offset) {\n    let url = `${this.url}/mts`;\n    url = this.addQueryParam(url, 'groupId', groupId);\n    return this.getList(url, limit, offset);\n  }\n  /**\n   * @param request request body\n   */\n\n\n  createMt(request) {\n    const url = `${this.url}/mts`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param mtId mt identifier\n   */\n\n\n  getMt(mtId) {\n    const url = `${this.url}/mts/${mtId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param mtId mt identifier\n   */\n\n\n  deleteMt(mtId) {\n    const url = `${this.url}/mts/${mtId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param mtId mt identifier\n   * @param request request body\n   */\n\n\n  updateMt(mtId, request) {\n    const url = `${this.url}/mts/${mtId}`;\n    return this.patch(url, request, this.defaultConfig());\n  }\n\n}\n\nexports.MachineTranslation = MachineTranslation;","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/node_modules/@crowdin/crowdin-api-client/out/machineTranslation/index.js"],"names":["Object","defineProperty","exports","value","MachineTranslation","core_1","require","CrowdinApi","listMts","groupId","limit","offset","url","addQueryParam","getList","createMt","request","post","defaultConfig","getMt","mtId","get","deleteMt","delete","updateMt","patch"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,kBAAR,GAA6B,KAAK,CAAlC;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AACA,MAAMF,kBAAN,SAAiCC,MAAM,CAACE,UAAxC,CAAmD;AAC/C;AACJ;AACA;AACA;AACA;AACIC,EAAAA,OAAO,CAACC,OAAD,EAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AAC5B,QAAIC,GAAG,GAAI,GAAE,KAAKA,GAAI,MAAtB;AACAA,IAAAA,GAAG,GAAG,KAAKC,aAAL,CAAmBD,GAAnB,EAAwB,SAAxB,EAAmCH,OAAnC,CAAN;AACA,WAAO,KAAKK,OAAL,CAAaF,GAAb,EAAkBF,KAAlB,EAAyBC,MAAzB,CAAP;AACH;AACD;AACJ;AACA;;;AACII,EAAAA,QAAQ,CAACC,OAAD,EAAU;AACd,UAAMJ,GAAG,GAAI,GAAE,KAAKA,GAAI,MAAxB;AACA,WAAO,KAAKK,IAAL,CAAUL,GAAV,EAAeI,OAAf,EAAwB,KAAKE,aAAL,EAAxB,CAAP;AACH;AACD;AACJ;AACA;;;AACIC,EAAAA,KAAK,CAACC,IAAD,EAAO;AACR,UAAMR,GAAG,GAAI,GAAE,KAAKA,GAAI,QAAOQ,IAAK,EAApC;AACA,WAAO,KAAKC,GAAL,CAAST,GAAT,EAAc,KAAKM,aAAL,EAAd,CAAP;AACH;AACD;AACJ;AACA;;;AACII,EAAAA,QAAQ,CAACF,IAAD,EAAO;AACX,UAAMR,GAAG,GAAI,GAAE,KAAKA,GAAI,QAAOQ,IAAK,EAApC;AACA,WAAO,KAAKG,MAAL,CAAYX,GAAZ,EAAiB,KAAKM,aAAL,EAAjB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIM,EAAAA,QAAQ,CAACJ,IAAD,EAAOJ,OAAP,EAAgB;AACpB,UAAMJ,GAAG,GAAI,GAAE,KAAKA,GAAI,QAAOQ,IAAK,EAApC;AACA,WAAO,KAAKK,KAAL,CAAWb,GAAX,EAAgBI,OAAhB,EAAyB,KAAKE,aAAL,EAAzB,CAAP;AACH;;AAvC8C;;AAyCnDhB,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MachineTranslation = void 0;\nconst core_1 = require(\"../core\");\nclass MachineTranslation extends core_1.CrowdinApi {\n    /**\n     * @param groupId group identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    listMts(groupId, limit, offset) {\n        let url = `${this.url}/mts`;\n        url = this.addQueryParam(url, 'groupId', groupId);\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param request request body\n     */\n    createMt(request) {\n        const url = `${this.url}/mts`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param mtId mt identifier\n     */\n    getMt(mtId) {\n        const url = `${this.url}/mts/${mtId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param mtId mt identifier\n     */\n    deleteMt(mtId) {\n        const url = `${this.url}/mts/${mtId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param mtId mt identifier\n     * @param request request body\n     */\n    updateMt(mtId, request) {\n        const url = `${this.url}/mts/${mtId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n}\nexports.MachineTranslation = MachineTranslation;\n"]},"metadata":{},"sourceType":"script"}