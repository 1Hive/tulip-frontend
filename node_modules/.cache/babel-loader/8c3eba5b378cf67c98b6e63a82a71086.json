{"ast":null,"code":"'use strict';\n\nconst log = require('debug')('ipfs:mfs:utils:update-tree');\n\nconst addLink = require('./add-link');\n\nconst defaultOptions = {\n  shardSplitThreshold: 1000\n}; // loop backwards through the trail, replacing links of all components to update CIDs\n\nconst updateTree = async (context, trail, options) => {\n  options = Object.assign({}, defaultOptions, options);\n  log('Trail', trail);\n  trail = trail.slice().reverse();\n  let index = 0;\n  let child;\n\n  for await (const node of context.ipld.getMany(trail.map(node => node.cid))) {\n    const cid = trail[index].cid;\n    const name = trail[index].name;\n    index++;\n\n    if (!child) {\n      child = {\n        cid,\n        name,\n        size: node.size\n      };\n      continue;\n    }\n\n    const result = await addLink(context, {\n      parent: node,\n      name: child.name,\n      cid: child.cid,\n      size: child.size,\n      flush: options.flush,\n      shardSplitThreshold: options.shardSplitThreshold,\n      hashAlg: options.hashAlg,\n      cidVersion: options.cidVersion\n    }); // new child for next loop\n\n    child = {\n      cid: result.cid,\n      name,\n      size: result.size\n    };\n  }\n\n  log(`Final CID ${child.cid}`);\n  return child.cid;\n};\n\nmodule.exports = updateTree;","map":null,"metadata":{},"sourceType":"script"}