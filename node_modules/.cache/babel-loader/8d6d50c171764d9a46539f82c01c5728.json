{"ast":null,"code":"import _regeneratorRuntime from \"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { Buffer } from \"buffer\";\nimport { XXHandshake } from \"./handshake-xx\";\nimport { decodePayload, getPeerIdFromPayload, verifySignedPayload } from \"./utils\";\nimport { logger, logLocalEphemeralKeys, logRemoteEphemeralKey, logRemoteStaticKey } from \"./logger\";\nimport { decode0, decode1 } from \"./encoder\";\nexport var XXFallbackHandshake = /*#__PURE__*/function (_XXHandshake) {\n  _inherits(XXFallbackHandshake, _XXHandshake);\n\n  var _super = _createSuper(XXFallbackHandshake);\n\n  function XXFallbackHandshake(isInitiator, payload, prologue, staticKeypair, connection, initialMsg, remotePeer, ephemeralKeys, handshake) {\n    var _this;\n\n    _classCallCheck(this, XXFallbackHandshake);\n\n    _this = _super.call(this, isInitiator, payload, prologue, staticKeypair, connection, remotePeer, handshake);\n\n    _defineProperty(_assertThisInitialized(_this), \"ephemeralKeys\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"initialMsg\", void 0);\n\n    if (ephemeralKeys) {\n      _this.ephemeralKeys = ephemeralKeys;\n    }\n\n    _this.initialMsg = initialMsg;\n    return _this;\n  } // stage 0\n\n\n  _createClass(XXFallbackHandshake, [{\n    key: \"propose\",\n    value: function () {\n      var _propose = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var receivedMessageBuffer, _this$xx$recvMessage, valid;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this.isInitiator) {\n                  _context.next = 6;\n                  break;\n                }\n\n                this.xx.sendMessage(this.session, Buffer.alloc(0), this.ephemeralKeys);\n                logger(\"XX Fallback Stage 0 - Initialized state as the first message was sent by initiator.\");\n                logLocalEphemeralKeys(this.session.hs.e);\n                _context.next = 13;\n                break;\n\n              case 6:\n                logger(\"XX Fallback Stage 0 - Responder decoding initial msg from IK.\");\n                receivedMessageBuffer = decode0(this.initialMsg);\n                _this$xx$recvMessage = this.xx.recvMessage(this.session, {\n                  ne: receivedMessageBuffer.ne,\n                  ns: Buffer.alloc(0),\n                  ciphertext: Buffer.alloc(0)\n                }), valid = _this$xx$recvMessage.valid;\n\n                if (valid) {\n                  _context.next = 11;\n                  break;\n                }\n\n                throw new Error(\"xx fallback stage 0 decryption validation fail\");\n\n              case 11:\n                logger(\"XX Fallback Stage 0 - Responder used received message from IK.\");\n                logRemoteEphemeralKey(this.session.hs.re);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function propose() {\n        return _propose.apply(this, arguments);\n      }\n\n      return propose;\n    }() // stage 1\n\n  }, {\n    key: \"exchange\",\n    value: function () {\n      var _exchange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var receivedMessageBuffer, _this$xx$recvMessage2, plaintext, valid, decodedPayload;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.isInitiator) {\n                  _context2.next = 30;\n                  break;\n                }\n\n                receivedMessageBuffer = decode1(this.initialMsg);\n                _this$xx$recvMessage2 = this.xx.recvMessage(this.session, receivedMessageBuffer), plaintext = _this$xx$recvMessage2.plaintext, valid = _this$xx$recvMessage2.valid;\n\n                if (valid) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                throw new Error(\"xx fallback stage 1 decryption validation fail\");\n\n              case 5:\n                logger('XX Fallback Stage 1 - Initiator used received message from IK.');\n                logRemoteEphemeralKey(this.session.hs.re);\n                logRemoteStaticKey(this.session.hs.rs);\n                logger(\"Initiator going to check remote's signature...\");\n                _context2.prev = 9;\n                _context2.next = 12;\n                return decodePayload(plaintext);\n\n              case 12:\n                decodedPayload = _context2.sent;\n                _context2.t0 = this.remotePeer;\n\n                if (_context2.t0) {\n                  _context2.next = 18;\n                  break;\n                }\n\n                _context2.next = 17;\n                return getPeerIdFromPayload(decodedPayload);\n\n              case 17:\n                _context2.t0 = _context2.sent;\n\n              case 18:\n                this.remotePeer = _context2.t0;\n                _context2.next = 21;\n                return verifySignedPayload(this.session.hs.rs, decodedPayload, this.remotePeer);\n\n              case 21:\n                this.setRemoteEarlyData(decodedPayload.data);\n                _context2.next = 27;\n                break;\n\n              case 24:\n                _context2.prev = 24;\n                _context2.t1 = _context2[\"catch\"](9);\n                throw new Error(\"Error occurred while verifying signed payload from responder: \".concat(_context2.t1.message));\n\n              case 27:\n                logger(\"All good with the signature!\");\n                _context2.next = 34;\n                break;\n\n              case 30:\n                logger(\"XX Fallback Stage 1 - Responder start\");\n                _context2.next = 33;\n                return _get(_getPrototypeOf(XXFallbackHandshake.prototype), \"exchange\", this).call(this);\n\n              case 33:\n                logger(\"XX Fallback Stage 1 - Responder end\");\n\n              case 34:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[9, 24]]);\n      }));\n\n      function exchange() {\n        return _exchange.apply(this, arguments);\n      }\n\n      return exchange;\n    }()\n  }]);\n\n  return XXFallbackHandshake;\n}(XXHandshake);","map":null,"metadata":{},"sourceType":"module"}