{"ast":null,"code":"import { _ as _slicedToArray } from './slicedToArray-ad07b557.js';\nimport './unsupportedIterableToArray-aef68344.js';\nimport React from 'react';\nimport './_commonjsHelpers-97e6d7b1.js';\nimport { P as PropTypes } from './index-097535f1.js';\nimport './defineProperty-a0480c32.js';\nimport './toConsumableArray-07f01111.js';\nimport _styled from 'styled-components';\nimport './getPrototypeOf-97db713a.js';\nimport './color.js';\nimport './components.js';\nimport './contains-component.js';\nimport './css.js';\nimport './dayjs.min-e57fb69a.js';\nimport './date.js';\nimport './miscellaneous.js';\nimport './environment.js';\nimport './font.js';\nimport './math-e6d0e93a.js';\nimport './characters.js';\nimport './format.js';\nimport './keycodes.js';\nimport './url.js';\nimport './web3.js';\nimport { RADIUS, GU } from './constants.js';\nimport './breakpoints.js';\nimport './springs.js';\nimport { textStyle } from './text-styles.js';\nimport './theme-dark.js';\nimport './theme-light.js';\nimport { useTheme } from './Theme.js';\nimport './extends-db4f0c26.js';\nimport { _ as _objectWithoutProperties } from './objectWithoutProperties-234758e1.js';\nimport { o } from './index-422d37c0.js';\nimport './FocusVisible.js';\nimport ButtonBase from './ButtonBase.js';\n\nvar _StyledButtonBase = _styled(ButtonBase).withConfig({\n  displayName: \"BadgeBase___StyledButtonBase\",\n  componentId: \"sc-1myaths-0\"\n})([\"display:inline-flex;overflow:hidden;color:\", \";height:\", \"px;background:\", \";\", \";&:active{\", \";}border-radius:\", \"px;\"], function (p) {\n  return p._css;\n}, function (p) {\n  return p._css2;\n}, function (p) {\n  return p._css3;\n}, function (p) {\n  return p._css4;\n}, function (p) {\n  return p._css5;\n}, RADIUS);\n\nvar _StyledDiv = _styled(\"div\").withConfig({\n  displayName: \"BadgeBase___StyledDiv\",\n  componentId: \"sc-1myaths-1\"\n})([\"overflow:hidden;display:flex;align-items:center;text-decoration:none;\", \";\"], function (p) {\n  return p._css6;\n});\n\nvar _StyledSpan = _styled(\"span\").withConfig({\n  displayName: \"BadgeBase___StyledSpan\",\n  componentId: \"sc-1myaths-2\"\n})([\"white-space:nowrap;text-overflow:ellipsis;overflow:hidden;\", \" \", \"\"], function (p) {\n  return p._css7;\n}, function (p) {\n  return p._css8;\n});\n\nvar BadgeBase = React.memo(function BadgeBase(_ref) {\n  var badgeRef = _ref.badgeRef,\n      children = _ref.children,\n      className = _ref.className,\n      compact = _ref.compact,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      icon = _ref.icon,\n      label = _ref.label,\n      labelStyle = _ref.labelStyle,\n      onClick = _ref.onClick,\n      style = _ref.style,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"badgeRef\", \"children\", \"className\", \"compact\", \"disabled\", \"href\", \"icon\", \"label\", \"labelStyle\", \"onClick\", \"style\", \"title\"]);\n\n  var theme = useTheme();\n\n  var _useInside = o('DropDown'),\n      _useInside2 = _slicedToArray(_useInside, 1),\n      insideDropDownMenu = _useInside2[0];\n\n  if (insideDropDownMenu) {\n    disabled = true;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_StyledButtonBase, {\n    ref: badgeRef,\n    title: title,\n    disabled: disabled,\n    element: href || disabled ? 'a' : 'button',\n    onClick: !disabled ? onClick : undefined,\n    href: !disabled ? href : undefined,\n    focusRingRadius: RADIUS,\n    _css: theme.badgeContent,\n    _css2: 3 * GU,\n    _css3: compact ? 'transparent' : theme.badge,\n    _css4: insideDropDownMenu ? 'cursor: pointer' : '',\n    _css5: !disabled && compact ? \"background: \".concat(theme.badgePressed) : ''\n  }, /*#__PURE__*/React.createElement(_StyledDiv, {\n    className: className,\n    style: style,\n    _css6: compact ? \"\\n                  padding: 0 \".concat(1 * GU, \"px;\\n                  border-radius: 2px;\\n                \") : \"\\n                  padding-left: \".concat((icon ? 0 : 1.5) * GU, \"px;\\n                  padding-right: \").concat((icon ? 1 : 1.5) * GU, \"px;\\n                  border-radius: \").concat(RADIUS, \"px;\\n                \")\n  }, icon, /*#__PURE__*/React.createElement(_StyledSpan, {\n    _css7: textStyle('body2'),\n    _css8: labelStyle\n  }, label))), typeof children === 'function' ? children(disabled) // whether popover is disabled\n  : children);\n});\nBadgeBase.propTypes = {\n  badgeRef: PropTypes.any,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  className: PropTypes.string,\n  compact: PropTypes.bool,\n  disabled: PropTypes.bool,\n  href: PropTypes.string,\n  icon: PropTypes.node,\n  label: PropTypes.node.isRequired,\n  labelStyle: PropTypes.string,\n  onClick: PropTypes.func,\n  style: PropTypes.object,\n  title: PropTypes.string\n};\nexport default BadgeBase;","map":null,"metadata":{},"sourceType":"module"}