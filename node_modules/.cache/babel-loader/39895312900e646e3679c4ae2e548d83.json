{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar PeerId = require('peer-id');\n\nvar CID = require('cids');\n\nvar _require = require('../../utils'),\n    withTimeoutOption = _require.withTimeoutOption;\n\nmodule.exports = function (_ref) {\n  var bitswap = _ref.bitswap;\n  return withTimeoutOption( /*#__PURE__*/function () {\n    var _wantlist = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(peerId) {\n      var options,\n          list,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n              // eslint-disable-line require-await\n              if (peerId && !CID.isCID(peerId) && typeof peerId !== 'string' && !Buffer.isBuffer(peerId) && !PeerId.isPeerId(peerId)) {\n                options = peerId;\n                peerId = null;\n              }\n\n              list = peerId ? bitswap.wantlistForPeer(PeerId.createFromCID(peerId)) : bitswap.getWantlist(options);\n              return _context.abrupt(\"return\", Array.from(list).map(function (e) {\n                return e[1].cid;\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function wantlist(_x) {\n      return _wantlist.apply(this, arguments);\n    }\n\n    return wantlist;\n  }());\n};","map":null,"metadata":{},"sourceType":"script"}