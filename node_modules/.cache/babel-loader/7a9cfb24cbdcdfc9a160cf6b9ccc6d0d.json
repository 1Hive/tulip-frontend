{"ast":null,"code":"var _objectSpread = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _slicedToArray = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _require = require(\"date-fns\"),\n    getWeek = _require.getWeek,\n    subWeeks = _require.subWeeks,\n    subYears = _require.subYears,\n    startOfMinute = _require.startOfMinute,\n    getUnixTime = _require.getUnixTime;\n\nvar _require2 = require('./../constants'),\n    TWENTY_FOUR_HOURS = _require2.TWENTY_FOUR_HOURS;\n\nvar _require3 = require('./exchange'),\n    dayData = _require3.dayData,\n    tokenHourData = _require3.tokenHourData,\n    tokenDayData = _require3.tokenDayData,\n    pairHourData = _require3.pairHourData,\n    pairDayData = _require3.pairDayData,\n    ethPriceHourly = _require3.ethPriceHourly;\n\nmodule.exports = {\n  factory: function factory() {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var data, weeklyData, startIndexWeekly, currentWeek;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return dayData();\n\n            case 2:\n              data = _context.sent;\n              weeklyData = [];\n              startIndexWeekly = -1;\n              currentWeek = -1;\n              data.forEach(function (entry, i) {\n                var week = getWeek(data[i].date);\n\n                if (week !== currentWeek) {\n                  currentWeek = week;\n                  startIndexWeekly++;\n                }\n\n                weeklyData[startIndexWeekly] = weeklyData[startIndexWeekly] || {};\n                weeklyData[startIndexWeekly].date = data[i].date;\n                weeklyData[startIndexWeekly].weeklyVolumeUSD = (weeklyData[startIndexWeekly].weeklyVolumeUSD ? weeklyData[startIndexWeekly].weeklyVolumeUSD : 0) + data[i].volumeUSD;\n              });\n              return _context.abrupt(\"return\", [data, weeklyData]);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  tokenHourly: function tokenHourly(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _ref$token_address, token_address, _ref$startTime, startTime, _yield$Promise$all, _yield$Promise$all2, tokenData, ethPrices;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _ref$token_address = _ref.token_address, token_address = _ref$token_address === void 0 ? undefined : _ref$token_address, _ref$startTime = _ref.startTime, startTime = _ref$startTime === void 0 ? undefined : _ref$startTime;\n\n              if (token_address) {\n                _context2.next = 3;\n                break;\n              }\n\n              throw new Error(\"sushi-data: Token address undefined\");\n\n            case 3:\n              _context2.next = 5;\n              return Promise.all([tokenHourData({\n                minTimestamp: startTime,\n                token_address: token_address\n              }), ethPriceHourly({\n                minTimestamp: startTime\n              })]);\n\n            case 5:\n              _yield$Promise$all = _context2.sent;\n              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n              tokenData = _yield$Promise$all2[0];\n              ethPrices = _yield$Promise$all2[1];\n              tokenData = tokenData.map(function (tokenEntry) {\n                var ethPriceUSD = ethPrices.find(function (ethEntry) {\n                  return ethEntry.timestamp === tokenEntry.timestamp;\n                }).priceUSD;\n                return _objectSpread(_objectSpread({}, tokenEntry), {}, {\n                  priceUSD: tokenEntry.derivedETH * ethPriceUSD\n                });\n              });\n              tokenData = tokenData.map(function (tokenEntry, i) {\n                return _objectSpread(_objectSpread({}, tokenEntry), {}, {\n                  volume: tokenData[i - 1] ? tokenEntry.volume - tokenData[i - 1].volume : undefined,\n                  volumeUSD: tokenData[i - 1] ? tokenEntry.volumeUSD - tokenData[i - 1].volumeUSD : undefined,\n                  untrackedVolumeUSD: tokenData[i - 1] ? tokenEntry.untrackedVolumeUSD - tokenData[i - 1].untrackedVolumeUSD : undefined,\n                  txCount: tokenData[i - 1] ? tokenEntry.txCount - tokenData[i - 1].txCount : undefined,\n                  open: tokenEntry.priceUSD,\n                  close: tokenData[i + 1] ? tokenData[i + 1].priceUSD : undefined\n                });\n              });\n              return _context2.abrupt(\"return\", tokenData);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  tokenDaily: function tokenDaily() {\n    var _arguments = arguments;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _ref2, _ref2$token_address, token_address, data, endTime, startTime, dayIndexSet, dayIndexArray, timestamp, latestLiquidity, latestLiquidityUSD, latestLiquidityETH, latestPriceUSD, index, nextDay, currentDayIndex;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _ref2 = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : {}, _ref2$token_address = _ref2.token_address, token_address = _ref2$token_address === void 0 ? undefined : _ref2$token_address;\n\n              if (token_address) {\n                _context3.next = 3;\n                break;\n              }\n\n              throw new Error(\"sushi-data: Token address undefined\");\n\n            case 3:\n              _context3.next = 5;\n              return tokenDayData({\n                token_address: token_address\n              });\n\n            case 5:\n              data = _context3.sent;\n              endTime = getUnixTime(new Date());\n              startTime = getUnixTime(startOfMinute(subYears(new Date(), 1)));\n              dayIndexSet = new Set();\n              dayIndexArray = [];\n              data.forEach(function (dayData, i) {\n                // add the day index to the set of days\n                dayIndexSet.add((data[i].timestamp / TWENTY_FOUR_HOURS).toFixed(0));\n                dayIndexArray.push(data[i]);\n              }); // fill in empty days\n\n              timestamp = data[0] && data[0].timestamp ? data[0].timestamp : startTime;\n              latestLiquidity = data[0] && data[0].liquidity;\n              latestLiquidityUSD = data[0] && data[0].liquidityUSD;\n              latestLiquidityETH = data[0] && data[0].liquidityETH;\n              latestPriceUSD = data[0] && data[0].priceUSD;\n              index = 1;\n\n              while (timestamp < endTime - TWENTY_FOUR_HOURS) {\n                nextDay = timestamp + TWENTY_FOUR_HOURS;\n                currentDayIndex = (nextDay / TWENTY_FOUR_HOURS).toFixed(0);\n\n                if (!dayIndexSet.has(currentDayIndex)) {\n                  data.push({\n                    id: \"\".concat(data[0].id.split(\"-\")[0], \"-\").concat(nextDay / TWENTY_FOUR_HOURS),\n                    date: new Date(nextDay * 1000),\n                    timestamp: nextDay,\n                    volume: 0,\n                    volumeETH: 0,\n                    volumeUSD: 0,\n                    liquidity: latestLiquidity,\n                    liquidityETH: latestLiquidityETH,\n                    liquidityUSD: latestLiquidityUSD,\n                    priceUSD: latestPriceUSD,\n                    txCount: 0\n                  });\n                } else {\n                  latestLiquidity = dayIndexArray[index].liquidity;\n                  latestLiquidityETH = dayIndexArray[index].liquidityETH;\n                  latestLiquidityUSD = dayIndexArray[index].liquidityUSD;\n                  latestPriceUSD = dayIndexArray[index].priceUSD;\n                  index = index + 1;\n                }\n\n                timestamp = nextDay;\n              }\n\n              data = data.sort(function (a, b) {\n                return parseInt(a.timestamp) > parseInt(b.timestamp) ? 1 : -1;\n              });\n              return _context3.abrupt(\"return\", data);\n\n            case 20:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  pairHourly: function pairHourly(_ref3) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var _ref3$pair_address, pair_address, _ref3$startTime, startTime, pairData;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _ref3$pair_address = _ref3.pair_address, pair_address = _ref3$pair_address === void 0 ? undefined : _ref3$pair_address, _ref3$startTime = _ref3.startTime, startTime = _ref3$startTime === void 0 ? undefined : _ref3$startTime;\n\n              if (pair_address) {\n                _context4.next = 3;\n                break;\n              }\n\n              throw new Error(\"sushi-data: Pair address undefined\");\n\n            case 3:\n              _context4.next = 5;\n              return pairHourData({\n                minTimestamp: startTime,\n                pair_address: pair_address\n              });\n\n            case 5:\n              pairData = _context4.sent;\n              pairData = pairData.map(function (pairEntry, i) {\n                return _objectSpread(_objectSpread({}, pairEntry), {}, {\n                  volumeToken0: pairData[i - 1] ? pairEntry.volumeToken0 - pairData[i - 1].volumeToken0 : undefined,\n                  volumeToken1: pairData[i - 1] ? pairEntry.volumeToken1 - pairData[i - 1].volumeToken1 : undefined,\n                  rate0: {\n                    open: pairEntry.token0Price,\n                    close: pairData[i + 1] ? pairData[i + 1].token0Price : undefined\n                  },\n                  rate1: {\n                    open: pairEntry.token1Price,\n                    close: pairData[i + 1] ? pairData[i + 1].token1Price : undefined\n                  },\n                  txCount: pairData[i - 1] ? pairEntry.txCount - pairData[i - 1].txCount : undefined\n                });\n              });\n              return _context4.abrupt(\"return\", pairData);\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  },\n  pairDaily: function pairDaily() {\n    var _arguments2 = arguments;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var _ref4, _ref4$pair_address, pair_address, data, endTime, startTime, dayIndexSet, dayIndexArray, timestamp, latestLiquidityUSD, index, nextDay, currentDayIndex;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _ref4 = _arguments2.length > 0 && _arguments2[0] !== undefined ? _arguments2[0] : {}, _ref4$pair_address = _ref4.pair_address, pair_address = _ref4$pair_address === void 0 ? undefined : _ref4$pair_address;\n\n              if (pair_address) {\n                _context5.next = 3;\n                break;\n              }\n\n              throw new Error(\"sushi-data: Pair address undefined\");\n\n            case 3:\n              _context5.next = 5;\n              return pairDayData({\n                pair_address: pair_address\n              });\n\n            case 5:\n              data = _context5.sent;\n              endTime = getUnixTime(new Date());\n              startTime = getUnixTime(startOfMinute(subYears(new Date(), 1)));\n              dayIndexSet = new Set();\n              dayIndexArray = [];\n              data.forEach(function (dayData, i) {\n                // add the day index to the set of days\n                dayIndexSet.add((data[i].timestamp / TWENTY_FOUR_HOURS).toFixed(0));\n                dayIndexArray.push(data[i]);\n              });\n              timestamp = data[0].timestamp ? data[0].timestamp : startTime;\n              latestLiquidityUSD = data[0].liquidityUSD;\n              index = 1;\n\n              while (timestamp < endTime - TWENTY_FOUR_HOURS) {\n                nextDay = timestamp + TWENTY_FOUR_HOURS;\n                currentDayIndex = (nextDay / TWENTY_FOUR_HOURS).toFixed(0);\n\n                if (!dayIndexSet.has(currentDayIndex)) {\n                  data.push({\n                    id: \"\".concat(data[0].id.split(\"-\")[0], \"-\").concat(nextDay / TWENTY_FOUR_HOURS),\n                    date: new Date(nextDay * 1000),\n                    timestamp: nextDay,\n                    volumeUSD: 0,\n                    volumeToken0: 0,\n                    volumeToken1: 0,\n                    liquidityUSD: latestLiquidityUSD,\n                    txCount: 0\n                  });\n                } else {\n                  latestLiquidityUSD = dayIndexArray[index].liquidityUSD;\n                  index = index + 1;\n                }\n\n                timestamp = nextDay;\n              }\n\n              data = data.sort(function (a, b) {\n                return parseInt(a.timestamp) > parseInt(b.timestamp) ? 1 : -1;\n              });\n              return _context5.abrupt(\"return\", data);\n\n            case 17:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }))();\n  }\n};","map":null,"metadata":{},"sourceType":"script"}