{"ast":null,"code":"'use strict';\n\nconst errCode = require('err-code');\n\nconst extractDataFromBlock = require('../utils/extract-data-from-block');\n\nconst validateOffsetAndLength = require('../utils/validate-offset-and-length');\n\nconst mh = require('multihashing-async').multihash;\n\nconst rawContent = node => {\n  return function* (options = {}) {\n    const {\n      offset,\n      length\n    } = validateOffsetAndLength(node.length, options.offset, options.length);\n    yield extractDataFromBlock(node, 0, offset, offset + length);\n  };\n};\n\nconst resolve = async (cid, name, path, toResolve, resolve, depth, ipld, options) => {\n  if (toResolve.length) {\n    throw errCode(new Error(`No link named ${path} found in raw node ${cid.toBaseEncodedString()}`), 'ERR_NOT_FOUND');\n  }\n\n  const buf = await mh.decode(cid.multihash);\n  return {\n    entry: {\n      name,\n      path,\n      cid,\n      node: buf,\n      content: rawContent(buf.digest),\n      depth\n    }\n  };\n};\n\nmodule.exports = resolve;","map":null,"metadata":{},"sourceType":"script"}