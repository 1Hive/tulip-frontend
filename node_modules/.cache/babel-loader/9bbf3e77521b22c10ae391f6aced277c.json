{"ast":null,"code":"/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\nconst campaigns = [{\n  id: '511060000',\n  type: 'ifo',\n  title: 'Berry',\n  badge: 'ifo-bry.svg'\n}, {\n  id: '511050000',\n  type: 'ifo',\n  title: 'Soteria',\n  badge: 'ifo-wsote.svg'\n}, {\n  id: '511040000',\n  type: 'ifo',\n  title: 'Helmet',\n  badge: 'ifo-helmet.svg'\n}, {\n  id: '511030000',\n  type: 'ifo',\n  title: 'Tenet',\n  badge: 'ifo-ten.svg'\n}, {\n  id: '511020000',\n  type: 'ifo',\n  title: 'Ditto',\n  badge: 'ifo-ditto.svg'\n}, {\n  id: '511010000',\n  type: 'ifo',\n  title: 'Blink',\n  badge: 'ifo-blk.svg'\n}];\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\n\nexport const campaignMap = new Map();\ncampaigns.forEach(campaign => {\n  campaignMap.set(campaign.id, campaign);\n});\nexport default campaigns;","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/config/constants/campaigns.ts"],"names":["campaigns","id","type","title","badge","campaignMap","Map","forEach","campaign","set"],"mappings":"AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,SAAqB,GAAG,CAC5B;AACEC,EAAAA,EAAE,EAAE,WADN;AAEEC,EAAAA,IAAI,EAAE,KAFR;AAGEC,EAAAA,KAAK,EAAE,OAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAD4B,EAO5B;AACEH,EAAAA,EAAE,EAAE,WADN;AAEEC,EAAAA,IAAI,EAAE,KAFR;AAGEC,EAAAA,KAAK,EAAE,SAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAP4B,EAa5B;AACEH,EAAAA,EAAE,EAAE,WADN;AAEEC,EAAAA,IAAI,EAAE,KAFR;AAGEC,EAAAA,KAAK,EAAE,QAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAb4B,EAmB5B;AACEH,EAAAA,EAAE,EAAE,WADN;AAEEC,EAAAA,IAAI,EAAE,KAFR;AAGEC,EAAAA,KAAK,EAAE,OAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAnB4B,EAyB5B;AACEH,EAAAA,EAAE,EAAE,WADN;AAEEC,EAAAA,IAAI,EAAE,KAFR;AAGEC,EAAAA,KAAK,EAAE,OAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CAzB4B,EA+B5B;AACEH,EAAAA,EAAE,EAAE,WADN;AAEEC,EAAAA,IAAI,EAAE,KAFR;AAGEC,EAAAA,KAAK,EAAE,OAHT;AAIEC,EAAAA,KAAK,EAAE;AAJT,CA/B4B,CAA9B;AAuCA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAG,IAAIC,GAAJ,EAApB;AAEPN,SAAS,CAACO,OAAV,CAAmBC,QAAD,IAAc;AAC9BH,EAAAA,WAAW,CAACI,GAAZ,CAAgBD,QAAQ,CAACP,EAAzB,EAA6BO,QAA7B;AACD,CAFD;AAIA,eAAeR,SAAf","sourcesContent":["import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n"]},"metadata":{},"sourceType":"module"}