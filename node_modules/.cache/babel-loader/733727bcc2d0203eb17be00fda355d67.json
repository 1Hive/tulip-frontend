{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar CID = require('cids');\n\nvar errCode = require('err-code');\n\nvar resolve = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cid, name, path, toResolve, _resolve, depth, ipld, options) {\n    var node, subObject, subPath, prop;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return ipld.get(cid, options);\n\n          case 2:\n            node = _context.sent;\n            subObject = node;\n            subPath = path;\n\n          case 5:\n            if (!toResolve.length) {\n              _context.next = 18;\n              break;\n            }\n\n            prop = toResolve[0];\n\n            if (!(prop in subObject)) {\n              _context.next = 15;\n              break;\n            }\n\n            // remove the bit of the path we have resolved\n            toResolve.shift();\n            subPath = \"\".concat(subPath, \"/\").concat(prop);\n\n            if (!CID.isCID(subObject[prop])) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              entry: {\n                name: name,\n                path: path,\n                cid: cid,\n                node: node,\n                depth: depth\n              },\n              next: {\n                cid: subObject[prop],\n                name: prop,\n                path: subPath,\n                toResolve: toResolve\n              }\n            });\n\n          case 12:\n            subObject = subObject[prop];\n            _context.next = 16;\n            break;\n\n          case 15:\n            throw errCode(new Error(\"No property named \".concat(prop, \" found in cbor node \").concat(cid.toBaseEncodedString())), 'ERR_NO_PROP');\n\n          case 16:\n            _context.next = 5;\n            break;\n\n          case 18:\n            return _context.abrupt(\"return\", {\n              entry: {\n                name: name,\n                path: path,\n                cid: cid,\n                node: node,\n                depth: depth\n              }\n            });\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function resolve(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = resolve;","map":null,"metadata":{},"sourceType":"script"}