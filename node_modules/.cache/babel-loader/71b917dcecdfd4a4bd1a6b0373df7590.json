{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _slicedToArray = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _objectSpread = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar pSome = require('p-some');\n\nvar PCancelable = require('p-cancelable');\n\nmodule.exports = function (iterable, options) {\n  var anyCancelable = pSome(iterable, _objectSpread(_objectSpread({}, options), {}, {\n    count: 1\n  }));\n  return PCancelable.fn( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(onCancel) {\n      var _yield$anyCancelable, _yield$anyCancelable2, value;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              onCancel(function () {\n                anyCancelable.cancel();\n              });\n              _context.next = 3;\n              return anyCancelable;\n\n            case 3:\n              _yield$anyCancelable = _context.sent;\n              _yield$anyCancelable2 = _slicedToArray(_yield$anyCancelable, 1);\n              value = _yield$anyCancelable2[0];\n              return _context.abrupt(\"return\", value);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }())();\n};\n\nmodule.exports.AggregateError = pSome.AggregateError;","map":null,"metadata":{},"sourceType":"script"}