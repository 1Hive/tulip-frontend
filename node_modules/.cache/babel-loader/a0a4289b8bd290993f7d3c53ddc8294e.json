{"ast":null,"code":"var _jsxFileName = \"/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Profile/components/ConfirmProfileCreationModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Modal, Flex, Text } from '@pancakeswap-libs/uikit';\nimport { useDispatch } from 'react-redux';\nimport BigNumber from 'bignumber.js';\nimport useI18n from 'hooks/useI18n';\nimport { useCake, usePancakeRabbits, useProfile } from 'hooks/useContract';\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction';\nimport { fetchProfile } from 'state/profile';\nimport { useToast } from 'state/hooks';\nimport { REGISTER_COST } from '../ProfileCreation/config';\nimport ApproveConfirmButtons from './ApproveConfirmButtons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ConfirmProfileCreationModal = ({\n  account,\n  teamId,\n  tokenId,\n  minimumCakeRequired,\n  allowance,\n  onDismiss\n}) => {\n  _s();\n\n  const TranslateString = useI18n();\n  const profileContract = useProfile();\n  const pancakeRabbitsContract = usePancakeRabbits();\n  const dispatch = useDispatch();\n  const {\n    toastSuccess\n  } = useToast();\n  const cakeContract = useCake();\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await cakeContract.methods.allowance(account, profileContract.options.address).call();\n        const currentAllowance = new BigNumber(response);\n        return currentAllowance.gte(minimumCakeRequired);\n      } catch (error) {\n        return false;\n      }\n    },\n    onApprove: () => {\n      return cakeContract.methods.approve(profileContract.options.address, allowance.toJSON()).send({\n        from: account\n      });\n    },\n    onConfirm: () => {\n      return profileContract.methods.createProfile(teamId, pancakeRabbitsContract.options.address, tokenId).send({\n        from: account\n      });\n    },\n    onSuccess: async () => {\n      await dispatch(fetchProfile(account));\n      onDismiss();\n      toastSuccess('Profile created!');\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: \"Complete Profile\",\n    onDismiss: onDismiss,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      color: \"textSubtle\",\n      mb: \"8px\",\n      children: TranslateString(999, 'Submitting NFT to contract and confirming User Name and Team.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"space-between\",\n      mb: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: TranslateString(999, 'Cost')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: TranslateString(999, `${REGISTER_COST} CAKE`, {\n          num: REGISTER_COST\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ApproveConfirmButtons, {\n      isApproveDisabled: isConfirmed || isConfirming || isApproved,\n      isApproving: isApproving,\n      isConfirmDisabled: !isApproved || isConfirmed,\n      isConfirming: isConfirming,\n      onApprove: handleApprove,\n      onConfirm: handleConfirm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConfirmProfileCreationModal, \"jFFqTxw01AVXeraHMqoC9eO33y8=\", false, function () {\n  return [useI18n, useProfile, usePancakeRabbits, useDispatch, useToast, useCake, useApproveConfirmTransaction];\n});\n\n_c = ConfirmProfileCreationModal;\nexport default ConfirmProfileCreationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmProfileCreationModal\");","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Profile/components/ConfirmProfileCreationModal.tsx"],"names":["React","Modal","Flex","Text","useDispatch","BigNumber","useI18n","useCake","usePancakeRabbits","useProfile","useApproveConfirmTransaction","fetchProfile","useToast","REGISTER_COST","ApproveConfirmButtons","ConfirmProfileCreationModal","account","teamId","tokenId","minimumCakeRequired","allowance","onDismiss","TranslateString","profileContract","pancakeRabbitsContract","dispatch","toastSuccess","cakeContract","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","onRequiresApproval","response","methods","options","address","call","currentAllowance","gte","error","onApprove","approve","toJSON","send","from","onConfirm","createProfile","onSuccess","num"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Modal, Flex, Text } from '@pancakeswap-libs/uikit'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport useI18n from 'hooks/useI18n'\nimport { useCake, usePancakeRabbits, useProfile } from 'hooks/useContract'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { fetchProfile } from 'state/profile'\nimport { useToast } from 'state/hooks'\nimport { REGISTER_COST } from '../ProfileCreation/config'\nimport ApproveConfirmButtons from './ApproveConfirmButtons'\n\ninterface Props {\n  userName: string\n  tokenId: number\n  account: string\n  teamId: number\n  minimumCakeRequired: BigNumber\n  allowance: BigNumber\n  onDismiss?: () => void\n}\n\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\n  account,\n  teamId,\n  tokenId,\n  minimumCakeRequired,\n  allowance,\n  onDismiss,\n}) => {\n  const TranslateString = useI18n()\n  const profileContract = useProfile()\n  const pancakeRabbitsContract = usePancakeRabbits()\n  const dispatch = useDispatch()\n  const { toastSuccess } = useToast()\n  const cakeContract = useCake()\n\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await cakeContract.methods.allowance(account, profileContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        return currentAllowance.gte(minimumCakeRequired)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return cakeContract.methods.approve(profileContract.options.address, allowance.toJSON()).send({ from: account })\n    },\n    onConfirm: () => {\n      return profileContract.methods\n        .createProfile(teamId, pancakeRabbitsContract.options.address, tokenId)\n        .send({ from: account })\n    },\n    onSuccess: async () => {\n      await dispatch(fetchProfile(account))\n      onDismiss()\n      toastSuccess('Profile created!')\n    },\n  })\n\n  return (\n    <Modal title=\"Complete Profile\" onDismiss={onDismiss}>\n      <Text color=\"textSubtle\" mb=\"8px\">\n        {TranslateString(999, 'Submitting NFT to contract and confirming User Name and Team.')}\n      </Text>\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\n        <Text>{TranslateString(999, 'Cost')}</Text>\n        <Text>{TranslateString(999, `${REGISTER_COST} CAKE`, { num: REGISTER_COST })}</Text>\n      </Flex>\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n    </Modal>\n  )\n}\n\nexport default ConfirmProfileCreationModal\n"]},"metadata":{},"sourceType":"module"}