{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _require = require('ipld-dag-pb'),\n    DAGNode = _require.DAGNode;\n\nvar _require2 = require('../../../utils'),\n    withTimeoutOption = _require2.withTimeoutOption;\n\nmodule.exports = function (_ref) {\n  var ipld = _ref.ipld,\n      gcLock = _ref.gcLock,\n      preload = _ref.preload;\n\n  var get = require('../get')({\n    ipld: ipld,\n    preload: preload\n  });\n\n  var put = require('../put')({\n    ipld: ipld,\n    gcLock: gcLock,\n    preload: preload\n  });\n\n  return withTimeoutOption( /*#__PURE__*/function () {\n    var _setData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(multihash, data, options) {\n      var node;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return get(multihash, options);\n\n            case 2:\n              node = _context.sent;\n              return _context.abrupt(\"return\", put(new DAGNode(data, node.Links), options));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function setData(_x, _x2, _x3) {\n      return _setData.apply(this, arguments);\n    }\n\n    return setData;\n  }());\n};","map":null,"metadata":{},"sourceType":"script"}