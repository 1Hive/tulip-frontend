{"ast":null,"code":"'use strict';\n\nconst errcode = require('err-code');\n/**\n * Select the best record out of the given records.\n *\n * @param {Object} selectors\n * @param {Buffer} k\n * @param {Array<Buffer>} records\n * @returns {number} - The index of the best record.\n */\n\n\nconst bestRecord = (selectors, k, records) => {\n  if (records.length === 0) {\n    const errMsg = 'No records given';\n    throw errcode(new Error(errMsg), 'ERR_NO_RECORDS_RECEIVED');\n  }\n\n  const parts = k.toString().split('/');\n\n  if (parts.length < 3) {\n    const errMsg = 'Record key does not have a selector function';\n    throw errcode(new Error(errMsg), 'ERR_NO_SELECTOR_FUNCTION_FOR_RECORD_KEY');\n  }\n\n  const selector = selectors[parts[1].toString()];\n\n  if (!selector) {\n    const errMsg = `Unrecognized key prefix: ${parts[1]}`;\n    throw errcode(new Error(errMsg), 'ERR_UNRECOGNIZED_KEY_PREFIX');\n  }\n\n  return selector(k, records);\n};\n\nmodule.exports = {\n  bestRecord: bestRecord,\n  selectors: require('./selectors')\n};","map":null,"metadata":{},"sourceType":"script"}