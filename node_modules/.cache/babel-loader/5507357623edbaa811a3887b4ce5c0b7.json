{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _taggedTemplateLiteral = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _templateObject, _templateObject2;\n\nvar pageResults = require('graph-results-pager');\n\nvar ws = require('isomorphic-ws');\n\nvar _require = require('subscriptions-transport-ws'),\n    SubscriptionClient = _require.SubscriptionClient;\n\nvar _require2 = require('graphql-request'),\n    request = _require2.request,\n    gql = _require2.gql;\n\nvar _require3 = require('./../constants'),\n    graphAPIEndpoints = _require3.graphAPIEndpoints,\n    graphWSEndpoints = _require3.graphWSEndpoints,\n    makerAddress = _require3.makerAddress;\n\nvar _require4 = require('./../utils'),\n    timestampToBlock = _require4.timestampToBlock;\n\nmodule.exports = {\n  info: function info() {\n    var _arguments = arguments;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _ref, _ref$block, block, _ref$timestamp, timestamp, result;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _ref = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : {}, _ref$block = _ref.block, block = _ref$block === void 0 ? undefined : _ref$block, _ref$timestamp = _ref.timestamp, timestamp = _ref$timestamp === void 0 ? undefined : _ref$timestamp;\n\n              if (!block) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.t0 = block;\n              _context.next = 13;\n              break;\n\n            case 5:\n              if (!timestamp) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 8;\n              return timestampToBlock(timestamp);\n\n            case 8:\n              _context.t1 = _context.sent;\n              _context.next = 12;\n              break;\n\n            case 11:\n              _context.t1 = undefined;\n\n            case 12:\n              _context.t0 = _context.t1;\n\n            case 13:\n              block = _context.t0;\n              block = block ? \"block: { number: \".concat(block, \" }\") : \"\";\n              _context.next = 17;\n              return request(graphAPIEndpoints.maker, gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"{\\n                    makers(first: 1, \", \") {\\n                        \", \"\\n                    }\\n                }\"])), block, _info.properties.toString()));\n\n            case 17:\n              result = _context.sent;\n              return _context.abrupt(\"return\", _info.callback(result.makers[0]));\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  servings: function servings() {\n    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref2$minTimestamp = _ref2.minTimestamp,\n        minTimestamp = _ref2$minTimestamp === void 0 ? undefined : _ref2$minTimestamp,\n        _ref2$maxTimestamp = _ref2.maxTimestamp,\n        maxTimestamp = _ref2$maxTimestamp === void 0 ? undefined : _ref2$maxTimestamp,\n        _ref2$minBlock = _ref2.minBlock,\n        minBlock = _ref2$minBlock === void 0 ? undefined : _ref2$minBlock,\n        _ref2$maxBlock = _ref2.maxBlock,\n        maxBlock = _ref2$maxBlock === void 0 ? undefined : _ref2$maxBlock,\n        _ref2$max = _ref2.max,\n        max = _ref2$max === void 0 ? undefined : _ref2$max;\n\n    return pageResults({\n      api: graphAPIEndpoints.maker,\n      query: {\n        entity: 'servings',\n        selection: {\n          where: {\n            block_gte: minBlock || undefined,\n            block_lte: maxBlock || undefined,\n            timestamp_gte: minTimestamp || undefined,\n            timestamp_lte: maxTimestamp || undefined\n          }\n        },\n        properties: _servings.properties\n      },\n      max: max\n    }).then(function (results) {\n      return _servings.callback(results);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  },\n  servers: function servers() {\n    var _arguments2 = arguments;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _ref3, _ref3$block, block, _ref3$timestamp, timestamp, _ref3$max, max;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _ref3 = _arguments2.length > 0 && _arguments2[0] !== undefined ? _arguments2[0] : {}, _ref3$block = _ref3.block, block = _ref3$block === void 0 ? undefined : _ref3$block, _ref3$timestamp = _ref3.timestamp, timestamp = _ref3$timestamp === void 0 ? undefined : _ref3$timestamp, _ref3$max = _ref3.max, max = _ref3$max === void 0 ? undefined : _ref3$max;\n              _context2.t0 = pageResults;\n              _context2.t1 = graphAPIEndpoints.maker;\n\n              if (!block) {\n                _context2.next = 7;\n                break;\n              }\n\n              _context2.t2 = {\n                number: block\n              };\n              _context2.next = 16;\n              break;\n\n            case 7:\n              if (!timestamp) {\n                _context2.next = 14;\n                break;\n              }\n\n              _context2.next = 10;\n              return timestampToBlock(timestamp);\n\n            case 10:\n              _context2.t4 = _context2.sent;\n              _context2.t3 = {\n                number: _context2.t4\n              };\n              _context2.next = 15;\n              break;\n\n            case 14:\n              _context2.t3 = undefined;\n\n            case 15:\n              _context2.t2 = _context2.t3;\n\n            case 16:\n              _context2.t5 = _context2.t2;\n              _context2.t6 = _servers.properties;\n              _context2.t7 = {\n                entity: 'servers',\n                block: _context2.t5,\n                properties: _context2.t6\n              };\n              _context2.t8 = max;\n              _context2.t9 = {\n                api: _context2.t1,\n                query: _context2.t7,\n                max: _context2.t8\n              };\n              return _context2.abrupt(\"return\", (0, _context2.t0)(_context2.t9).then(function (results) {\n                return _servers.callback(results);\n              }).catch(function (err) {\n                return console.log(err);\n              }));\n\n            case 22:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  pendingServings: function pendingServings() {\n    var _arguments3 = arguments;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _ref4, _ref4$block, block, _ref4$timestamp, timestamp, _ref4$max, max;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _ref4 = _arguments3.length > 0 && _arguments3[0] !== undefined ? _arguments3[0] : {}, _ref4$block = _ref4.block, block = _ref4$block === void 0 ? undefined : _ref4$block, _ref4$timestamp = _ref4.timestamp, timestamp = _ref4$timestamp === void 0 ? undefined : _ref4$timestamp, _ref4$max = _ref4.max, max = _ref4$max === void 0 ? undefined : _ref4$max;\n              _context3.t0 = pageResults;\n              _context3.t1 = graphAPIEndpoints.exchange;\n              _context3.t2 = {\n                where: {\n                  id: \"\\\\\\\"\".concat(makerAddress, \"\\\\\\\"\")\n                }\n              };\n\n              if (!block) {\n                _context3.next = 8;\n                break;\n              }\n\n              _context3.t3 = {\n                number: block\n              };\n              _context3.next = 17;\n              break;\n\n            case 8:\n              if (!timestamp) {\n                _context3.next = 15;\n                break;\n              }\n\n              _context3.next = 11;\n              return timestampToBlock(timestamp);\n\n            case 11:\n              _context3.t5 = _context3.sent;\n              _context3.t4 = {\n                number: _context3.t5\n              };\n              _context3.next = 16;\n              break;\n\n            case 15:\n              _context3.t4 = undefined;\n\n            case 16:\n              _context3.t3 = _context3.t4;\n\n            case 17:\n              _context3.t6 = _context3.t3;\n              _context3.t7 = _pendingServings.properties;\n              _context3.t8 = {\n                entity: 'users',\n                selection: _context3.t2,\n                block: _context3.t6,\n                properties: _context3.t7\n              };\n              _context3.t9 = max;\n              _context3.t10 = {\n                api: _context3.t1,\n                query: _context3.t8,\n                max: _context3.t9\n              };\n              return _context3.abrupt(\"return\", (0, _context3.t0)(_context3.t10).then(function (results) {\n                return _pendingServings.callback(results);\n              }).catch(function (err) {\n                return console.log(err);\n              }));\n\n            case 23:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  observePendingServings: function observePendingServings() {\n    var query = gql(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n            subscription {\\n                users(first: 1000, where: {id: \\\"\", \"\\\"}) {\\n                    \", \"\\n                }\\n        }\"])), makerAddress, _pendingServings.properties.toString());\n    var client = new SubscriptionClient(graphWSEndpoints.exchange, {\n      reconnect: true\n    }, ws);\n    var observable = client.request({\n      query: query\n    });\n    return {\n      subscribe: function subscribe(_ref5) {\n        var _next = _ref5.next,\n            error = _ref5.error,\n            complete = _ref5.complete;\n        return observable.subscribe({\n          next: function next(results) {\n            _next(_pendingServings.callback(results.data.users));\n          },\n          error: error,\n          complete: complete\n        });\n      }\n    };\n  }\n};\nvar _info = {\n  properties: ['id', 'sushiServed'],\n  callback: function callback(results) {\n    return {\n      address: results.id,\n      sushiServed: Number(results.sushiServed)\n    };\n  }\n};\nvar _servings = {\n  properties: ['server { id }', 'tx', 'pair', 'token0', 'token1', 'sushiServed', 'block', 'timestamp'],\n  callback: function callback(results) {\n    return results.map(function (_ref6) {\n      var server = _ref6.server,\n          tx = _ref6.tx,\n          pair = _ref6.pair,\n          token0 = _ref6.token0,\n          token1 = _ref6.token1,\n          sushiServed = _ref6.sushiServed,\n          block = _ref6.block,\n          timestamp = _ref6.timestamp;\n      return {\n        serverAddress: server.id,\n        tx: tx,\n        pair: pair,\n        token0: token0,\n        token1: token1,\n        sushiServed: Number(sushiServed),\n        block: Number(block),\n        timestamp: Number(timestamp * 1000),\n        date: new Date(timestamp * 1000)\n      };\n    });\n  }\n};\nvar _servers = {\n  properties: ['id', 'sushiServed', 'servings(first: 1000, orderBy: block, orderDirection: desc) { tx, block, pair, sushiServed }'],\n  callback: function callback(results) {\n    return results.map(function (_ref7) {\n      var id = _ref7.id,\n          sushiServed = _ref7.sushiServed,\n          servings = _ref7.servings;\n      return {\n        serverAddress: id,\n        sushiServed: Number(sushiServed),\n        servings: servings.map(function (_ref8) {\n          var tx = _ref8.tx,\n              block = _ref8.block,\n              pair = _ref8.pair,\n              sushiServed = _ref8.sushiServed;\n          return {\n            tx: tx,\n            block: Number(block),\n            pair: pair,\n            sushiServed: Number(sushiServed)\n          };\n        })\n      };\n    });\n  }\n};\nvar _pendingServings = {\n  properties: ['liquidityPositions(first: 1000) { id, liquidityTokenBalance, pair { id, totalSupply, reserveUSD, token0 { id, name, symbol }, token1 { id, symbol, name } } }'],\n  callback: function callback(results) {\n    return results[0].liquidityPositions.map(function (_ref9) {\n      var liquidityTokenBalance = _ref9.liquidityTokenBalance,\n          pair = _ref9.pair;\n      return {\n        address: pair.id,\n        token0: pair.token0,\n        token1: pair.token1,\n        valueUSD: liquidityTokenBalance / pair.totalSupply * pair.reserveUSD\n      };\n    }).sort(function (a, b) {\n      return b.valueUSD - a.valueUSD;\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"script"}