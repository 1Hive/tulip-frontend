{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TranslationMemoryModel = exports.TranslationMemory = void 0;\n\nconst core_1 = require(\"../core\");\n\nclass TranslationMemory extends core_1.CrowdinApi {\n  /**\n   * @param groupId group identifier\n   * @param limit maximum number of items to retrieve (default 25)\n   * @param offset starting offset in the collection (default 0)\n   */\n  listTm(groupId, limit, offset) {\n    let url = `${this.url}/tms`;\n    url = this.addQueryParam(url, 'groupId', groupId);\n    return this.getList(url, limit, offset);\n  }\n  /**\n   * @param request request body\n   */\n\n\n  addTm(request) {\n    const url = `${this.url}/tms`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param tmId tm identifier\n   */\n\n\n  getTm(tmId) {\n    const url = `${this.url}/tms/${tmId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param tmId tm identifier\n   */\n\n\n  deleteTm(tmId) {\n    const url = `${this.url}/tms/${tmId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param tmId tm identifier\n   * @param request request body\n   */\n\n\n  editTm(tmId, request) {\n    const url = `${this.url}/tms/${tmId}`;\n    return this.patch(url, request, this.defaultConfig());\n  }\n  /**\n   * @param tmId tm identifier\n   */\n\n\n  clearTm(tmId) {\n    const url = `${this.url}/tms/${tmId}/segments`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param tmId tm identifier\n   * @param exportId export identifier\n   */\n\n\n  downloadTm(tmId, exportId) {\n    const url = `${this.url}/tms/${tmId}/exports/${exportId}/download`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param tmId tm identifier\n   * @param request request body\n   */\n\n\n  exportTm(tmId, request) {\n    const url = `${this.url}/tms/${tmId}/exports`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param tmId tm identifier\n   * @param exportId export identifier\n   */\n\n\n  checkExportStatus(tmId, exportId) {\n    const url = `${this.url}/tms/${tmId}/exports/${exportId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param tmId tm identifier\n   * @param request request body\n   */\n\n\n  importTm(tmId, request) {\n    const url = `${this.url}/tms/${tmId}/imports`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param tmId tm identifier\n   * @param importId import identifier\n   */\n\n\n  checkImportStatus(tmId, importId) {\n    const url = `${this.url}/tms/${tmId}/imports/${importId}`;\n    return this.get(url, this.defaultConfig());\n  }\n\n}\n\nexports.TranslationMemory = TranslationMemory;\nvar TranslationMemoryModel;\n\n(function (TranslationMemoryModel) {\n  let Format;\n\n  (function (Format) {\n    Format[\"TMX\"] = \"tmx\";\n    Format[\"CSV\"] = \"csv\";\n    Format[\"XLSX\"] = \"xlsx\";\n  })(Format = TranslationMemoryModel.Format || (TranslationMemoryModel.Format = {}));\n})(TranslationMemoryModel = exports.TranslationMemoryModel || (exports.TranslationMemoryModel = {}));","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/node_modules/@crowdin/crowdin-api-client/out/translationMemory/index.js"],"names":["Object","defineProperty","exports","value","TranslationMemoryModel","TranslationMemory","core_1","require","CrowdinApi","listTm","groupId","limit","offset","url","addQueryParam","getList","addTm","request","post","defaultConfig","getTm","tmId","get","deleteTm","delete","editTm","patch","clearTm","downloadTm","exportId","exportTm","checkExportStatus","importTm","checkImportStatus","importId","Format"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,sBAAR,GAAiCF,OAAO,CAACG,iBAAR,GAA4B,KAAK,CAAlE;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AACA,MAAMF,iBAAN,SAAgCC,MAAM,CAACE,UAAvC,CAAkD;AAC9C;AACJ;AACA;AACA;AACA;AACIC,EAAAA,MAAM,CAACC,OAAD,EAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AAC3B,QAAIC,GAAG,GAAI,GAAE,KAAKA,GAAI,MAAtB;AACAA,IAAAA,GAAG,GAAG,KAAKC,aAAL,CAAmBD,GAAnB,EAAwB,SAAxB,EAAmCH,OAAnC,CAAN;AACA,WAAO,KAAKK,OAAL,CAAaF,GAAb,EAAkBF,KAAlB,EAAyBC,MAAzB,CAAP;AACH;AACD;AACJ;AACA;;;AACII,EAAAA,KAAK,CAACC,OAAD,EAAU;AACX,UAAMJ,GAAG,GAAI,GAAE,KAAKA,GAAI,MAAxB;AACA,WAAO,KAAKK,IAAL,CAAUL,GAAV,EAAeI,OAAf,EAAwB,KAAKE,aAAL,EAAxB,CAAP;AACH;AACD;AACJ;AACA;;;AACIC,EAAAA,KAAK,CAACC,IAAD,EAAO;AACR,UAAMR,GAAG,GAAI,GAAE,KAAKA,GAAI,QAAOQ,IAAK,EAApC;AACA,WAAO,KAAKC,GAAL,CAAST,GAAT,EAAc,KAAKM,aAAL,EAAd,CAAP;AACH;AACD;AACJ;AACA;;;AACII,EAAAA,QAAQ,CAACF,IAAD,EAAO;AACX,UAAMR,GAAG,GAAI,GAAE,KAAKA,GAAI,QAAOQ,IAAK,EAApC;AACA,WAAO,KAAKG,MAAL,CAAYX,GAAZ,EAAiB,KAAKM,aAAL,EAAjB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIM,EAAAA,MAAM,CAACJ,IAAD,EAAOJ,OAAP,EAAgB;AAClB,UAAMJ,GAAG,GAAI,GAAE,KAAKA,GAAI,QAAOQ,IAAK,EAApC;AACA,WAAO,KAAKK,KAAL,CAAWb,GAAX,EAAgBI,OAAhB,EAAyB,KAAKE,aAAL,EAAzB,CAAP;AACH;AACD;AACJ;AACA;;;AACIQ,EAAAA,OAAO,CAACN,IAAD,EAAO;AACV,UAAMR,GAAG,GAAI,GAAE,KAAKA,GAAI,QAAOQ,IAAK,WAApC;AACA,WAAO,KAAKG,MAAL,CAAYX,GAAZ,EAAiB,KAAKM,aAAL,EAAjB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIS,EAAAA,UAAU,CAACP,IAAD,EAAOQ,QAAP,EAAiB;AACvB,UAAMhB,GAAG,GAAI,GAAE,KAAKA,GAAI,QAAOQ,IAAK,YAAWQ,QAAS,WAAxD;AACA,WAAO,KAAKP,GAAL,CAAST,GAAT,EAAc,KAAKM,aAAL,EAAd,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIW,EAAAA,QAAQ,CAACT,IAAD,EAAOJ,OAAP,EAAgB;AACpB,UAAMJ,GAAG,GAAI,GAAE,KAAKA,GAAI,QAAOQ,IAAK,UAApC;AACA,WAAO,KAAKH,IAAL,CAAUL,GAAV,EAAeI,OAAf,EAAwB,KAAKE,aAAL,EAAxB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIY,EAAAA,iBAAiB,CAACV,IAAD,EAAOQ,QAAP,EAAiB;AAC9B,UAAMhB,GAAG,GAAI,GAAE,KAAKA,GAAI,QAAOQ,IAAK,YAAWQ,QAAS,EAAxD;AACA,WAAO,KAAKP,GAAL,CAAST,GAAT,EAAc,KAAKM,aAAL,EAAd,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIa,EAAAA,QAAQ,CAACX,IAAD,EAAOJ,OAAP,EAAgB;AACpB,UAAMJ,GAAG,GAAI,GAAE,KAAKA,GAAI,QAAOQ,IAAK,UAApC;AACA,WAAO,KAAKH,IAAL,CAAUL,GAAV,EAAeI,OAAf,EAAwB,KAAKE,aAAL,EAAxB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIc,EAAAA,iBAAiB,CAACZ,IAAD,EAAOa,QAAP,EAAiB;AAC9B,UAAMrB,GAAG,GAAI,GAAE,KAAKA,GAAI,QAAOQ,IAAK,YAAWa,QAAS,EAAxD;AACA,WAAO,KAAKZ,GAAL,CAAST,GAAT,EAAc,KAAKM,aAAL,EAAd,CAAP;AACH;;AAtF6C;;AAwFlDjB,OAAO,CAACG,iBAAR,GAA4BA,iBAA5B;AACA,IAAID,sBAAJ;;AACA,CAAC,UAAUA,sBAAV,EAAkC;AAC/B,MAAI+B,MAAJ;;AACA,GAAC,UAAUA,MAAV,EAAkB;AACfA,IAAAA,MAAM,CAAC,KAAD,CAAN,GAAgB,KAAhB;AACAA,IAAAA,MAAM,CAAC,KAAD,CAAN,GAAgB,KAAhB;AACAA,IAAAA,MAAM,CAAC,MAAD,CAAN,GAAiB,MAAjB;AACH,GAJD,EAIGA,MAAM,GAAG/B,sBAAsB,CAAC+B,MAAvB,KAAkC/B,sBAAsB,CAAC+B,MAAvB,GAAgC,EAAlE,CAJZ;AAKH,CAPD,EAOG/B,sBAAsB,GAAGF,OAAO,CAACE,sBAAR,KAAmCF,OAAO,CAACE,sBAAR,GAAiC,EAApE,CAP5B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationMemoryModel = exports.TranslationMemory = void 0;\nconst core_1 = require(\"../core\");\nclass TranslationMemory extends core_1.CrowdinApi {\n    /**\n     * @param groupId group identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    listTm(groupId, limit, offset) {\n        let url = `${this.url}/tms`;\n        url = this.addQueryParam(url, 'groupId', groupId);\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param request request body\n     */\n    addTm(request) {\n        const url = `${this.url}/tms`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param tmId tm identifier\n     */\n    getTm(tmId) {\n        const url = `${this.url}/tms/${tmId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param tmId tm identifier\n     */\n    deleteTm(tmId) {\n        const url = `${this.url}/tms/${tmId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param tmId tm identifier\n     * @param request request body\n     */\n    editTm(tmId, request) {\n        const url = `${this.url}/tms/${tmId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param tmId tm identifier\n     */\n    clearTm(tmId) {\n        const url = `${this.url}/tms/${tmId}/segments`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param tmId tm identifier\n     * @param exportId export identifier\n     */\n    downloadTm(tmId, exportId) {\n        const url = `${this.url}/tms/${tmId}/exports/${exportId}/download`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param tmId tm identifier\n     * @param request request body\n     */\n    exportTm(tmId, request) {\n        const url = `${this.url}/tms/${tmId}/exports`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param tmId tm identifier\n     * @param exportId export identifier\n     */\n    checkExportStatus(tmId, exportId) {\n        const url = `${this.url}/tms/${tmId}/exports/${exportId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param tmId tm identifier\n     * @param request request body\n     */\n    importTm(tmId, request) {\n        const url = `${this.url}/tms/${tmId}/imports`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param tmId tm identifier\n     * @param importId import identifier\n     */\n    checkImportStatus(tmId, importId) {\n        const url = `${this.url}/tms/${tmId}/imports/${importId}`;\n        return this.get(url, this.defaultConfig());\n    }\n}\nexports.TranslationMemory = TranslationMemory;\nvar TranslationMemoryModel;\n(function (TranslationMemoryModel) {\n    let Format;\n    (function (Format) {\n        Format[\"TMX\"] = \"tmx\";\n        Format[\"CSV\"] = \"csv\";\n        Format[\"XLSX\"] = \"xlsx\";\n    })(Format = TranslationMemoryModel.Format || (TranslationMemoryModel.Format = {}));\n})(TranslationMemoryModel = exports.TranslationMemoryModel || (exports.TranslationMemoryModel = {}));\n"]},"metadata":{},"sourceType":"script"}