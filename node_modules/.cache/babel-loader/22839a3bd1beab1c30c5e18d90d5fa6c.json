{"ast":null,"code":"import _slicedToArray from\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _styled6 from\"styled-components\";import _styled5 from\"styled-components\";import _styled4 from\"styled-components\";import _styled3 from\"styled-components\";import _styled2 from\"styled-components\";import _styled from\"styled-components\";import React,{useCallback}from'react';import{ButtonBase,GU,Link,RADIUS,useTheme,textStyle}from'@1hive/1hive-ui';import{getProviderFromUseWalletId}from'../../ethereum-providers';import{getUseWalletProviders}from'../../lib/web3-utils';var PROVIDERS_INFO=getUseWalletProviders().map(function(provider){return[provider.id,getProviderFromUseWalletId(provider.id)];});var _StyledDiv=_styled(\"div\").withConfig({displayName:\"ScreenProviders___StyledDiv\",componentId:\"sc-5te2az-0\"})([\"display:flex;flex-direction:column;justify-content:center;width:100%;padding:\",\"px \",\"px 0;\"],function(p){return p._css;},function(p){return p._css2;});var _StyledDiv2=_styled(\"div\").withConfig({displayName:\"ScreenProviders___StyledDiv2\",componentId:\"sc-5te2az-1\"})([\"display:grid;grid-gap:\",\"px;grid-auto-flow:row;grid-template-columns:repeat(1,1fr);\"],function(p){return p._css3;});var _StyledDiv3=_styled(\"div\").withConfig({displayName:\"ScreenProviders___StyledDiv3\",componentId:\"sc-5te2az-2\"})([\"display:flex;justify-content:center;margin-top:\",\"px;\"],function(p){return p._css4;});var _StyledLink=_styled(Link).withConfig({displayName:\"ScreenProviders___StyledLink\",componentId:\"sc-5te2az-3\"})([\"text-decoration:none\"]);function ScreenProviders(_ref){var onActivate=_ref.onActivate;return/*#__PURE__*/React.createElement(_StyledDiv,{_css:2*GU,_css2:2*GU},/*#__PURE__*/React.createElement(_StyledDiv2,{_css3:1.5*GU},PROVIDERS_INFO.map(function(_ref2){var _ref3=_slicedToArray(_ref2,2),id=_ref3[0],provider=_ref3[1];return/*#__PURE__*/React.createElement(ProviderButton,{key:id,id:id,provider:provider,onActivate:onActivate});})),/*#__PURE__*/React.createElement(_StyledDiv3,{_css4:2*GU},/*#__PURE__*/React.createElement(_StyledLink,{href:\"https://ethereum.org/wallets/\"},\"Don\\u2019t have an Ethereum account?\")));}var _StyledButtonBase=_styled(ButtonBase).withConfig({displayName:\"ScreenProviders___StyledButtonBase\",componentId:\"sc-5te2az-4\"})([\"position:relative;display:flex;flex-direction:column;align-items:center;justify-content:center;width:100%;height:\",\"px;background:\",\";box-shadow:0px 2px 4px rgba(0,0,0,0.15);border-radius:\",\"px;&:active{top:1px;box-shadow:0px 2px 4px rgba(0,0,0,0.1);}\"],function(p){return p._css5;},function(p){return p._css6;},RADIUS);var _StyledDiv4=_styled(\"div\").withConfig({displayName:\"ScreenProviders___StyledDiv4\",componentId:\"sc-5te2az-5\"})([\"margin-top:\",\"px;\",\";\"],function(p){return p._css7;},function(p){return p._css8;});function ProviderButton(_ref4){var id=_ref4.id,provider=_ref4.provider,onActivate=_ref4.onActivate;var theme=useTheme();var handleClick=useCallback(function(){onActivate(id);},[onActivate,id]);return/*#__PURE__*/React.createElement(_StyledButtonBase,{key:id,onClick:handleClick,_css5:12*GU,_css6:theme.surface},/*#__PURE__*/React.createElement(\"img\",{src:provider.image,alt:\"\",height:5.25*GU}),/*#__PURE__*/React.createElement(_StyledDiv4,{_css7:1*GU,_css8:textStyle('body1')},provider.name));}export default ScreenProviders;","map":{"version":3,"sources":["/Users/fabianmolina/Documents/1hive/tulip-frontend/src/components/Account/ScreenProviders.js"],"names":["React","useCallback","ButtonBase","GU","Link","RADIUS","useTheme","textStyle","getProviderFromUseWalletId","getUseWalletProviders","PROVIDERS_INFO","map","provider","id","ScreenProviders","onActivate","ProviderButton","theme","handleClick","surface","image","name"],"mappings":"wZAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,KAAmC,OAAnC,CAEA,OACEC,UADF,CAEEC,EAFF,CAGEC,IAHF,CAIEC,MAJF,CAKEC,QALF,CAMEC,SANF,KAOO,iBAPP,CAQA,OAASC,0BAAT,KAA2C,0BAA3C,CACA,OAASC,qBAAT,KAAsC,sBAAtC,CAEA,GAAMC,CAAAA,cAAc,CAAGD,qBAAqB,GAAGE,GAAxB,CAA4B,SAAAC,QAAQ,QAAI,CAC7DA,QAAQ,CAACC,EADoD,CAE7DL,0BAA0B,CAACI,QAAQ,CAACC,EAAV,CAFmC,CAAJ,EAApC,CAAvB,C,u0BAKA,QAASC,CAAAA,eAAT,MAAyC,IAAdC,CAAAA,UAAc,MAAdA,UAAc,CACvC,mBACE,qCAMe,EAAIZ,EANnB,OAM2B,EAAIA,EAN/B,eASE,uCAGgB,IAAMA,EAHtB,EAQGO,cAAc,CAACC,GAAf,CAAmB,kDAAEE,EAAF,UAAMD,QAAN,6BAClB,oBAAC,cAAD,EACE,GAAG,CAAEC,EADP,CAEE,EAAE,CAAEA,EAFN,CAGE,QAAQ,CAAED,QAHZ,CAIE,UAAU,CAAEG,UAJd,EADkB,EAAnB,CARH,CATF,cA0BE,uCAIkB,EAAIZ,EAJtB,eAOE,iCAAM,IAAI,CAAC,+BAAX,yCAPF,CA1BF,CADF,CAwCD,C,6bA0BwBE,M,yMArBzB,QAASW,CAAAA,cAAT,OAAsD,IAA5BH,CAAAA,EAA4B,OAA5BA,EAA4B,CAAxBD,QAAwB,OAAxBA,QAAwB,CAAdG,UAAc,OAAdA,UAAc,CACpD,GAAME,CAAAA,KAAK,CAAGX,QAAQ,EAAtB,CAEA,GAAMY,CAAAA,WAAW,CAAGjB,WAAW,CAAC,UAAM,CACpCc,UAAU,CAACF,EAAD,CAAV,CACD,CAF8B,CAE5B,CAACE,UAAD,CAAaF,EAAb,CAF4B,CAA/B,CAIA,mBACE,uCACE,GAAG,CAAEA,EADP,CAEE,OAAO,CAAEK,WAFX,OAUc,GAAKf,EAVnB,OAWkBc,KAAK,CAACE,OAXxB,eAoBE,2BAAK,GAAG,CAAEP,QAAQ,CAACQ,KAAnB,CAA0B,GAAG,CAAC,EAA9B,CAAiC,MAAM,CAAE,KAAOjB,EAAhD,EApBF,cAqBE,uCAEkB,EAAIA,EAFtB,OAGMI,SAAS,CAAC,OAAD,CAHf,EAMGK,QAAQ,CAACS,IANZ,CArBF,CADF,CAgCD,CAUD,cAAeP,CAAAA,eAAf","sourcesContent":["import React, { useCallback } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  ButtonBase,\r\n  GU,\r\n  Link,\r\n  RADIUS,\r\n  useTheme,\r\n  textStyle,\r\n} from '@1hive/1hive-ui'\r\nimport { getProviderFromUseWalletId } from '../../ethereum-providers'\r\nimport { getUseWalletProviders } from '../../lib/web3-utils'\r\n\r\nconst PROVIDERS_INFO = getUseWalletProviders().map(provider => [\r\n  provider.id,\r\n  getProviderFromUseWalletId(provider.id),\r\n])\r\n\r\nfunction ScreenProviders({ onActivate }) {\r\n  return (\r\n    <div\r\n      css={`\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        width: 100%;\r\n        padding: ${2 * GU}px ${2 * GU}px 0;\r\n      `}\r\n    >\r\n      <div\r\n        css={`\r\n          display: grid;\r\n          grid-gap: ${1.5 * GU}px;\r\n          grid-auto-flow: row;\r\n          grid-template-columns: repeat(1, 1fr);\r\n        `}\r\n      >\r\n        {PROVIDERS_INFO.map(([id, provider]) => (\r\n          <ProviderButton\r\n            key={id}\r\n            id={id}\r\n            provider={provider}\r\n            onActivate={onActivate}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div\r\n        css={`\r\n          display: flex;\r\n          justify-content: center;\r\n          margin-top: ${2 * GU}px;\r\n        `}\r\n      >\r\n        <Link href=\"https://ethereum.org/wallets/\" css=\"text-decoration: none\">\r\n          Donâ€™t have an Ethereum account?\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nScreenProviders.propTypes = {\r\n  onActivate: PropTypes.func.isRequired,\r\n}\r\n\r\nfunction ProviderButton({ id, provider, onActivate }) {\r\n  const theme = useTheme()\r\n\r\n  const handleClick = useCallback(() => {\r\n    onActivate(id)\r\n  }, [onActivate, id])\r\n\r\n  return (\r\n    <ButtonBase\r\n      key={id}\r\n      onClick={handleClick}\r\n      css={`\r\n        position: relative;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 100%;\r\n        height: ${12 * GU}px;\r\n        background: ${theme.surface};\r\n        box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.15);\r\n        border-radius: ${RADIUS}px;\r\n        &:active {\r\n          top: 1px;\r\n          box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\r\n        }\r\n      `}\r\n    >\r\n      <img src={provider.image} alt=\"\" height={5.25 * GU} />\r\n      <div\r\n        css={`\r\n          margin-top: ${1 * GU}px;\r\n          ${textStyle('body1')};\r\n        `}\r\n      >\r\n        {provider.name}\r\n      </div>\r\n    </ButtonBase>\r\n  )\r\n}\r\nProviderButton.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  onActivate: PropTypes.func.isRequired,\r\n  provider: PropTypes.shape({\r\n    image: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n}\r\n\r\nexport default ScreenProviders\r\n"]},"metadata":{},"sourceType":"module"}