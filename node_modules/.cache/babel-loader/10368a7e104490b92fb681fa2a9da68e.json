{"ast":null,"code":"'use strict';\n\nvar index = require('./index-46d0e707.js');\n\nvar defineProperty = require('./defineProperty-3cad0327.js');\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty.defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar VALID_INTEGER_REGEX = /^[-+]?[0-9]+$/; // Check if a value is “empty”, in the prop-types sense (null or undefined)\n\nfunction isEmpty(value) {\n  return value === undefined || value === null;\n} // Require a prop to not be empty\n\n\nfunction requireProp(props, propName, componentName) {\n  return isEmpty(props[propName]) ? new Error(\"The prop `\".concat(propName, \"` is required for `\").concat(componentName, \"`.\")) : null;\n} // Create the `isRequired` version of a prop type\n\n\nfunction createIsRequired(propTypeFn) {\n  return function () {\n    return requireProp.apply(void 0, arguments) || propTypeFn.apply(void 0, arguments);\n  };\n} // Accept any number in the 0 => 1 range\n\n\nfunction _0to1(props, propName, componentName) {\n  if (isEmpty(props[propName])) {\n    return null;\n  }\n\n  if (typeof props[propName] === 'number' && props[propName] >= 0 && props[propName] <= 1) {\n    return null;\n  }\n\n  return new Error(\"Invalid prop `\".concat(propName, \"` supplied to `\").concat(componentName, \"`. Please provide a number in the 0-1 range.\"));\n}\n\n_0to1.isRequired = createIsRequired(_0to1); // Accept DOM Element, in DOM environments\n\nfunction _element(props, propName, componentName) {\n  if (!props[propName]) {\n    return null;\n  }\n\n  if (typeof Element !== 'undefined') {\n    return props[propName] instanceof Element ? null : new Error(\"Invalid prop `\".concat(propName, \"` supplied to `\").concat(componentName, \"`. Please provide a DOM Element.\"));\n  }\n\n  return null;\n}\n\n_element.isRequired = createIsRequired(_element);\n\nfunction _bigIntish(props, propName, componentName) {\n  if (isEmpty(props[propName])) {\n    return null;\n  }\n\n  if (typeof props[propName] === 'number') {\n    return null;\n  }\n\n  if (typeof props[propName] === 'bigint') {\n    return null;\n  }\n\n  if (VALID_INTEGER_REGEX.test(String(props[propName]))) {\n    return null;\n  }\n\n  return new Error(\"Invalid prop `\".concat(propName, \"` supplied to `\").concat(componentName, \"`. Please provide a BigInt, Number or a value that can convert into a BigInt-like string.\"));\n}\n\n_bigIntish.isRequired = createIsRequired(_bigIntish);\n\nvar ExtendedPropTypes = _objectSpread(_objectSpread({}, index.propTypes), {}, {\n  _bigIntish: _bigIntish,\n  _component: index.propTypes.oneOfType([index.propTypes.func, index.propTypes.string, index.propTypes.shape({\n    render: index.propTypes.func.isRequired\n  })]),\n  _spring: index.propTypes.shape({\n    mass: index.propTypes.number,\n    tension: index.propTypes.number,\n    friction: index.propTypes.number,\n    precision: index.propTypes.number\n  }),\n  _null: index.propTypes.oneOf([null]),\n  _0to1: _0to1,\n  _element: _element\n});\n\nexports.ExtendedPropTypes = ExtendedPropTypes;","map":{"version":3,"sources":["../src/proptypes.js"],"names":["VALID_INTEGER_REGEX","value","isEmpty","props","requireProp","propTypeFn","_0to1","createIsRequired","_element","String","_bigIntish","ExtendedPropTypes","PropTypes","_component","render","isRequired","_spring","mass","tension","friction","precision","number","_null"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\n\nconst VALID_INTEGER_REGEX = /^[-+]?[0-9]+$/\n\n// Check if a value is “empty”, in the prop-types sense (null or undefined)\nfunction isEmpty(value) {\n  return value === undefined || value === null\n}\n\n// Require a prop to not be empty\nfunction requireProp(props, propName, componentName) {\n  return isEmpty(props[propName])\n    ? new Error(\n        `The prop \\`${propName}\\` is required for \\`${componentName}\\`.`\n      )\n    : null\n}\n\n// Create the `isRequired` version of a prop type\nfunction createIsRequired(propTypeFn) {\n  return (...params) => requireProp(...params) || propTypeFn(...params)\n}\n\n// Accept any number in the 0 => 1 range\nfunction _0to1(props, propName, componentName) {\n  if (isEmpty(props[propName])) {\n    return null\n  }\n  if (\n    typeof props[propName] === 'number' &&\n    props[propName] >= 0 &&\n    props[propName] <= 1\n  ) {\n    return null\n  }\n  return new Error(\n    `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Please provide a number in the 0-1 range.`\n  )\n}\n_0to1.isRequired = createIsRequired(_0to1)\n\n// Accept DOM Element, in DOM environments\nfunction _element(props, propName, componentName) {\n  if (!props[propName]) {\n    return null\n  }\n  if (typeof Element !== 'undefined') {\n    return props[propName] instanceof Element\n      ? null\n      : new Error(\n          `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Please provide a DOM Element.`\n        )\n  }\n  return null\n}\n_element.isRequired = createIsRequired(_element)\n\nfunction _bigIntish(props, propName, componentName) {\n  if (isEmpty(props[propName])) {\n    return null\n  }\n\n  if (typeof props[propName] === 'number') {\n    return null\n  }\n\n  if (typeof props[propName] === 'bigint') {\n    return null\n  }\n\n  if (VALID_INTEGER_REGEX.test(String(props[propName]))) {\n    return null\n  }\n\n  return new Error(\n    `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Please provide a BigInt, Number or a value that can convert into a BigInt-like string.`\n  )\n}\n_bigIntish.isRequired = createIsRequired(_bigIntish)\n\nconst ExtendedPropTypes = {\n  ...PropTypes,\n  _bigIntish,\n  _component: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.shape({ render: PropTypes.func.isRequired }),\n  ]),\n  _spring: PropTypes.shape({\n    mass: PropTypes.number,\n    tension: PropTypes.number,\n    friction: PropTypes.number,\n    precision: PropTypes.number,\n  }),\n  _null: PropTypes.oneOf([null]),\n  _0to1,\n  _element,\n}\n\nexport default ExtendedPropTypes\n"]},"metadata":{},"sourceType":"script"}