{"ast":null,"code":"/*!\n  * prr\n  * (c) 2013 Rod Vagg <rod@vagg.org>\n  * https://github.com/rvagg/prr\n  * License: MIT\n  */\n(function (name, context, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition();else context[name] = definition();\n})('prr', this, function () {\n  var setProperty = typeof Object.defineProperty == 'function' ? function (obj, key, options) {\n    Object.defineProperty(obj, key, options);\n    return obj;\n  } : function (obj, key, options) {\n    // < es5\n    obj[key] = options.value;\n    return obj;\n  },\n      makeOptions = function (value, options) {\n    var oo = typeof options == 'object',\n        os = !oo && typeof options == 'string',\n        op = function (p) {\n      return oo ? !!options[p] : os ? options.indexOf(p[0]) > -1 : false;\n    };\n\n    return {\n      enumerable: op('enumerable'),\n      configurable: op('configurable'),\n      writable: op('writable'),\n      value: value\n    };\n  },\n      prr = function (obj, key, value, options) {\n    var k;\n    options = makeOptions(value, options);\n\n    if (typeof key == 'object') {\n      for (k in key) {\n        if (Object.hasOwnProperty.call(key, k)) {\n          options.value = key[k];\n          setProperty(obj, k, options);\n        }\n      }\n\n      return obj;\n    }\n\n    return setProperty(obj, key, options);\n  };\n\n  return prr;\n});","map":null,"metadata":{},"sourceType":"script"}