{"ast":null,"code":"'use strict';\n\nmodule.exports = \"// can't use, because protocol-buffers doesn't support imports\\n// so we have to duplicate for now :(\\n// import \\\"record.proto\\\";\\n\\nmessage Record {\\n  // adjusted for javascript\\n  optional bytes key = 1;\\n  optional bytes value = 2;\\n  optional bytes author = 3;\\n  optional bytes signature = 4;\\n  optional string timeReceived = 5;\\n}\\n\\nmessage Message {\\n  enum MessageType {\\n    PUT_VALUE = 0;\\n    GET_VALUE = 1;\\n    ADD_PROVIDER = 2;\\n    GET_PROVIDERS = 3;\\n    FIND_NODE = 4;\\n    PING = 5;\\n  }\\n\\n  enum ConnectionType {\\n    // sender does not have a connection to peer, and no extra information (default)\\n    NOT_CONNECTED = 0;\\n\\n    // sender has a live connection to peer\\n    CONNECTED = 1;\\n\\n    // sender recently connected to peer\\n    CAN_CONNECT = 2;\\n\\n    // sender recently tried to connect to peer repeatedly but failed to connect\\n    // (\\\"try\\\" here is loose, but this should signal \\\"made strong effort, failed\\\")\\n    CANNOT_CONNECT = 3;\\n  }\\n\\n  message Peer {\\n    // ID of a given peer.\\n    optional bytes id = 1;\\n\\n    // multiaddrs for a given peer\\n    repeated bytes addrs = 2;\\n\\n    // used to signal the sender's connection capabilities to the peer\\n    optional ConnectionType connection = 3;\\n  }\\n\\n  // defines what type of message it is.\\n  optional MessageType type = 1;\\n\\n  // defines what coral cluster level this query/response belongs to.\\n  // in case we want to implement coral's cluster rings in the future.\\n  optional int32 clusterLevelRaw = 10;\\n\\n  // Used to specify the key associated with this message.\\n  // PUT_VALUE, GET_VALUE, ADD_PROVIDER, GET_PROVIDERS\\n  // adjusted for javascript\\n  optional bytes key = 2;\\n\\n  // Used to return a value\\n  // PUT_VALUE, GET_VALUE\\n  // adjusted Record to bytes for js\\n  optional bytes record = 3;\\n\\n  // Used to return peers closer to a key in a query\\n  // GET_VALUE, GET_PROVIDERS, FIND_NODE\\n  repeated Peer closerPeers = 8;\\n\\n  // Used to return Providers\\n  // GET_VALUE, ADD_PROVIDER, GET_PROVIDERS\\n  repeated Peer providerPeers = 9;\\n}\";","map":null,"metadata":{},"sourceType":"script"}