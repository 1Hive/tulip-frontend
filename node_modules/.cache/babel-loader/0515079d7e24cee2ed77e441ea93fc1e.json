{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nimport { useCallback, useState, useEffect } from 'react';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport BigNumber from 'bignumber.js';\nimport { useLottery, useLotteryTicket } from 'hooks/useContract';\nimport useRefresh from './useRefresh';\nimport { getTotalRewards, getTotalClaim, getMatchingRewardLength, getWinningNumbers, getTickets } from '../utils/lotteryUtils';\n\nconst useTickets = (lotteryNumber = null) => {\n  _s();\n\n  const [tickets, setTickets] = useState([]);\n  const {\n    account\n  } = useWallet();\n  const ticketsContract = useLotteryTicket();\n  const lotteryContract = useLottery();\n  const {\n    fastRefresh\n  } = useRefresh();\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber);\n      setTickets(res);\n    };\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance();\n    }\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber]);\n  return tickets;\n};\n\n_s(useTickets, \"V6TQdp+3b0u2dYc121mURruwCTs=\", false, function () {\n  return [useWallet, useLotteryTicket, useLottery, useRefresh];\n});\n\nexport const useTotalRewards = () => {\n  _s2();\n\n  const [rewards, setRewards] = useState(new BigNumber(0));\n  const lotteryContract = useLottery();\n  const {\n    fastRefresh\n  } = useRefresh();\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract);\n      setRewards(new BigNumber(res));\n    };\n\n    if (lotteryContract) {\n      fetchBalance();\n    }\n  }, [lotteryContract, fastRefresh]);\n  return rewards;\n};\n\n_s2(useTotalRewards, \"Ers4EZp/GEwdbrsmaeNjd5QeDIg=\", false, function () {\n  return [useLottery, useRefresh];\n});\n\nexport const useTotalClaim = () => {\n  _s3();\n\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0));\n  const [claimLoading, setClaimLoading] = useState(false);\n  const {\n    account\n  } = useWallet();\n  const ticketsContract = useLotteryTicket();\n  const lotteryContract = useLottery();\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true);\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account);\n    setClaimAmount(claim);\n    setClaimLoading(false);\n  }, [account, lotteryContract, ticketsContract]);\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance();\n    }\n  }, [account, fetchBalance, lotteryContract, ticketsContract]);\n  return {\n    claimLoading,\n    claimAmount\n  };\n};\n\n_s3(useTotalClaim, \"H0TYkdUXX/rhMEoc7keFLBSvP/M=\", false, function () {\n  return [useWallet, useLotteryTicket, useLottery];\n});\n\nexport const useWinningNumbers = () => {\n  _s4();\n\n  const [winngNumbers, setWinningNumbers] = useState([0, 0, 0, 0]);\n  const lotteryContract = useLottery();\n  const {\n    fastRefresh\n  } = useRefresh();\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract);\n      setWinningNumbers(rewards);\n    };\n\n    if (lotteryContract) {\n      fetchBalance();\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers]);\n  return winngNumbers;\n};\n\n_s4(useWinningNumbers, \"QQMkYy8VhcsKLXhfa+x6W+6w/Bk=\", false, function () {\n  return [useLottery, useRefresh];\n});\n\nexport const useMatchingRewardLength = numbers => {\n  _s5();\n\n  const [matchingNumbers, setMatchingNumbers] = useState(0);\n  const lotteryContract = useLottery();\n  const {\n    fastRefresh\n  } = useRefresh();\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers);\n      setMatchingNumbers(matchedNumbaers);\n    };\n\n    if (lotteryContract) {\n      fetchBalance();\n    }\n  }, [lotteryContract, numbers, fastRefresh]);\n  return matchingNumbers;\n};\n\n_s5(useMatchingRewardLength, \"Q0ZxCJpfFzqvkPwWhhG3/HhYGS4=\", false, function () {\n  return [useLottery, useRefresh];\n});\n\nexport default useTickets;","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/hooks/useTickets.ts"],"names":["useCallback","useState","useEffect","useWallet","BigNumber","useLottery","useLotteryTicket","useRefresh","getTotalRewards","getTotalClaim","getMatchingRewardLength","getWinningNumbers","getTickets","useTickets","lotteryNumber","tickets","setTickets","account","ticketsContract","lotteryContract","fastRefresh","fetchBalance","res","useTotalRewards","rewards","setRewards","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","claim","useWinningNumbers","winngNumbers","setWinningNumbers","useMatchingRewardLength","numbers","matchingNumbers","setMatchingNumbers","matchedNumbaers"],"mappings":"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","sourcesContent":["import { useCallback, useState, useEffect } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport useRefresh from './useRefresh'\nimport {\n  getTotalRewards,\n  getTotalClaim,\n  getMatchingRewardLength,\n  getWinningNumbers,\n  getTickets,\n} from '../utils/lotteryUtils'\n\nconst useTickets = (lotteryNumber = null) => {\n  const [tickets, setTickets] = useState([])\n  const { account } = useWallet()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\n\n  return tickets\n}\n\nexport const useTotalRewards = () => {\n  const [rewards, setRewards] = useState(new BigNumber(0))\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract)\n      setRewards(new BigNumber(res))\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, fastRefresh])\n\n  return rewards\n}\n\nexport const useTotalClaim = () => {\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0))\n  const [claimLoading, setClaimLoading] = useState(false)\n  const { account } = useWallet()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true)\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\n    setClaimAmount(claim)\n    setClaimLoading(false)\n  }, [account, lotteryContract, ticketsContract])\n\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, fetchBalance, lotteryContract, ticketsContract])\n\n  return { claimLoading, claimAmount }\n}\n\nexport const useWinningNumbers = () => {\n  const [winngNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract)\n      setWinningNumbers(rewards)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\n\n  return winngNumbers\n}\n\nexport const useMatchingRewardLength = (numbers) => {\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\n      setMatchingNumbers(matchedNumbaers)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, numbers, fastRefresh])\n\n  return matchingNumbers\n}\n\nexport default useTickets\n"]},"metadata":{},"sourceType":"module"}