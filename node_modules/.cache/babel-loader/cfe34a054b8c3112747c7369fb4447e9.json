{"ast":null,"code":"import _styled11 from\"styled-components\";import _styled10 from\"styled-components\";import _styled9 from\"styled-components\";import _styled8 from\"styled-components\";import _styled7 from\"styled-components\";import _styled6 from\"styled-components\";import _styled5 from\"styled-components\";import _styled4 from\"styled-components\";import _styled3 from\"styled-components\";import _styled2 from\"styled-components\";import _styled from\"styled-components\";import React from'react';import{Button,ButtonBase,GU,IconCheck,IconCopy,RADIUS,textStyle,useTheme}from'@1hive/1hive-ui';import IdentityBadge from'../IdentityBadge';import{getProviderFromUseWalletId}from'../../ethereum-providers';import{useCopyToClipboard}from'../../hooks/useCopyToClipboard';var _StyledDiv=_styled(\"div\").withConfig({displayName:\"ScreenConnected___StyledDiv\",componentId:\"sc-1ok1sn0-0\"})([\"padding:\",\"px;\"],function(p){return p._css;});var _StyledDiv2=_styled(\"div\").withConfig({displayName:\"ScreenConnected___StyledDiv2\",componentId:\"sc-1ok1sn0-1\"})([\"display:flex;align-items:center;width:100%;\"]);var _StyledDiv3=_styled(\"div\").withConfig({displayName:\"ScreenConnected___StyledDiv3\",componentId:\"sc-1ok1sn0-2\"})([\"display:flex;align-items:center;margin-right:\",\"px;\"],function(p){return p._css2;});var _StyledImg=_styled(\"img\").withConfig({displayName:\"ScreenConnected___StyledImg\",componentId:\"sc-1ok1sn0-3\"})([\"width:\",\"px;height:\",\"px;margin-right:\",\"px;transform:translateY(-2px);\"],function(p){return p._css3;},function(p){return p._css4;},function(p){return p._css5;});var _StyledDiv4=_styled(\"div\").withConfig({displayName:\"ScreenConnected___StyledDiv4\",componentId:\"sc-1ok1sn0-4\"})([\"display:flex;align-items:center;justify-content:flex-end;width:100%;\"]);var _StyledButtonBase=_styled(ButtonBase).withConfig({displayName:\"ScreenConnected___StyledButtonBase\",componentId:\"sc-1ok1sn0-5\"})([\"display:flex;align-items:center;justify-self:flex-end;padding:\",\"px;&:active{background:\",\";}\"],function(p){return p._css6;},function(p){return p._css7;});var _StyledIdentityBadge=_styled(IdentityBadge).withConfig({displayName:\"ScreenConnected___StyledIdentityBadge\",componentId:\"sc-1ok1sn0-6\"})([\"cursor:pointer\"]);var _StyledIconCopy=_styled(IconCopy).withConfig({displayName:\"ScreenConnected___StyledIconCopy\",componentId:\"sc-1ok1sn0-7\"})([\"color:\",\";\"],function(p){return p._css8;});var _StyledDiv5=_styled(\"div\").withConfig({displayName:\"ScreenConnected___StyledDiv5\",componentId:\"sc-1ok1sn0-8\"})([\"display:flex;align-items:center;margin-top:\",\"px;color:\",\";\",\";\"],function(p){return p._css9;},function(p){return p._css10;},function(p){return p._css11;});var _StyledSpan=_styled(\"span\").withConfig({displayName:\"ScreenConnected___StyledSpan\",componentId:\"sc-1ok1sn0-9\"})([\"margin-left:\",\"px;\"],function(p){return p._css12;});var _StyledButton=_styled(Button).withConfig({displayName:\"ScreenConnected___StyledButton\",componentId:\"sc-1ok1sn0-10\"})([\"margin-top:\",\"px;\"],function(p){return p._css13;});function AccountScreenConnected(_ref){var wallet=_ref.wallet;var theme=useTheme();var copy=useCopyToClipboard();var walletNetworkName=wallet.networkName;var providerInfo=getProviderFromUseWalletId(wallet.connector);return/*#__PURE__*/React.createElement(_StyledDiv,{_css:2*GU},/*#__PURE__*/React.createElement(_StyledDiv2,null,/*#__PURE__*/React.createElement(_StyledDiv3,{_css2:3*GU},/*#__PURE__*/React.createElement(_StyledImg,{src:providerInfo.image,alt:\"\",_css3:2.5*GU,_css4:2.5*GU,_css5:0.5*GU}),/*#__PURE__*/React.createElement(\"span\",null,providerInfo.id==='unknown'?'Wallet':providerInfo.name)),/*#__PURE__*/React.createElement(_StyledDiv4,null,/*#__PURE__*/React.createElement(_StyledButtonBase,{onClick:function onClick(){return copy(wallet.account);},focusRingRadius:RADIUS,_css6:0.5*GU,_css7:theme.surfacePressed},/*#__PURE__*/React.createElement(_StyledIdentityBadge,{entity:wallet.account,compact:true,badgeOnly:true}),/*#__PURE__*/React.createElement(_StyledIconCopy,{_css8:theme.hint})))),/*#__PURE__*/React.createElement(_StyledDiv5,{_css9:1*GU,_css10:theme.positive,_css11:textStyle('label2')},/*#__PURE__*/React.createElement(IconCheck,{size:\"small\"}),/*#__PURE__*/React.createElement(_StyledSpan,{_css12:0.5*GU},\"Connected to Ethereum \".concat(walletNetworkName,\" Network\"))),/*#__PURE__*/React.createElement(_StyledButton,{onClick:function onClick(){return wallet.reset();},wide:true,_css13:1*GU},\"Disconnect wallet\"));}export default AccountScreenConnected;","map":{"version":3,"sources":["/Users/fabianmolina/Documents/1hive/tulip-frontend/src/components/Account/ScreenConnected.js"],"names":["React","Button","ButtonBase","GU","IconCheck","IconCopy","RADIUS","textStyle","useTheme","IdentityBadge","getProviderFromUseWalletId","useCopyToClipboard","AccountScreenConnected","wallet","theme","copy","walletNetworkName","networkName","providerInfo","connector","image","id","name","account","surfacePressed","hint","positive","reset"],"mappings":"ybAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,MADF,CAEEC,UAFF,CAGEC,EAHF,CAIEC,SAJF,CAKEC,QALF,CAMEC,MANF,CAOEC,SAPF,CAQEC,QARF,KASO,iBATP,CAUA,MAAOC,CAAAA,aAAP,KAA0B,kBAA1B,CACA,OAASC,0BAAT,KAA2C,0BAA3C,CACA,OAASC,kBAAT,KAAmC,gCAAnC,C,srEAEA,QAASC,CAAAA,sBAAT,MAA4C,IAAVC,CAAAA,MAAU,MAAVA,MAAU,CAC1C,GAAMC,CAAAA,KAAK,CAAGN,QAAQ,EAAtB,CACA,GAAMO,CAAAA,IAAI,CAAGJ,kBAAkB,EAA/B,CAEA,GAAMK,CAAAA,iBAAiB,CAAGH,MAAM,CAACI,WAAjC,CAEA,GAAMC,CAAAA,YAAY,CAAGR,0BAA0B,CAACG,MAAM,CAACM,SAAR,CAA/C,CAEA,mBACE,qCAEe,EAAIhB,EAFnB,eAKE,kDAOE,uCAIoB,EAAIA,EAJxB,eAOE,gCACE,GAAG,CAAEe,YAAY,CAACE,KADpB,CAEE,GAAG,CAAC,EAFN,OAIa,IAAMjB,EAJnB,OAKc,IAAMA,EALpB,OAMoB,IAAMA,EAN1B,EAPF,cAiBE,gCACGe,YAAY,CAACG,EAAb,GAAoB,SAApB,CAAgC,QAAhC,CAA2CH,YAAY,CAACI,IAD3D,CAjBF,CAPF,cA4BE,kDAQE,uCACE,OAAO,CAAE,yBAAMP,CAAAA,IAAI,CAACF,MAAM,CAACU,OAAR,CAAV,EADX,CAEE,eAAe,CAAEjB,MAFnB,OAOe,IAAMH,EAPrB,OASoBW,KAAK,CAACU,cAT1B,eAaE,0CACE,MAAM,CAAEX,MAAM,CAACU,OADjB,CAEE,OAAO,KAFT,CAGE,SAAS,KAHX,EAbF,cAmBE,2CAEaT,KAAK,CAACW,IAFnB,EAnBF,CARF,CA5BF,CALF,cAoEE,uCAIkB,EAAItB,EAJtB,QAKaW,KAAK,CAACY,QALnB,QAMMnB,SAAS,CAAC,QAAD,CANf,eASE,oBAAC,SAAD,EAAW,IAAI,CAAC,OAAhB,EATF,cAUE,wCAEmB,IAAMJ,EAFzB,kCAK4Ba,iBAL5B,aAVF,CApEF,cAuFE,mCACE,OAAO,CAAE,yBAAMH,CAAAA,MAAM,CAACc,KAAP,EAAN,EADX,CAEE,IAAI,KAFN,QAIkB,EAAIxB,EAJtB,sBAvFF,CADF,CAmGD,CAED,cAAeS,CAAAA,sBAAf","sourcesContent":["import React from 'react'\r\nimport {\r\n  Button,\r\n  ButtonBase,\r\n  GU,\r\n  IconCheck,\r\n  IconCopy,\r\n  RADIUS,\r\n  textStyle,\r\n  useTheme,\r\n} from '@1hive/1hive-ui'\r\nimport IdentityBadge from '../IdentityBadge'\r\nimport { getProviderFromUseWalletId } from '../../ethereum-providers'\r\nimport { useCopyToClipboard } from '../../hooks/useCopyToClipboard'\r\n\r\nfunction AccountScreenConnected({ wallet }) {\r\n  const theme = useTheme()\r\n  const copy = useCopyToClipboard()\r\n\r\n  const walletNetworkName = wallet.networkName\r\n\r\n  const providerInfo = getProviderFromUseWalletId(wallet.connector)\r\n\r\n  return (\r\n    <div\r\n      css={`\r\n        padding: ${2 * GU}px;\r\n      `}\r\n    >\r\n      <div\r\n        css={`\r\n          display: flex;\r\n          align-items: center;\r\n          width: 100%;\r\n        `}\r\n      >\r\n        <div\r\n          css={`\r\n            display: flex;\r\n            align-items: center;\r\n            margin-right: ${3 * GU}px;\r\n          `}\r\n        >\r\n          <img\r\n            src={providerInfo.image}\r\n            alt=\"\"\r\n            css={`\r\n              width: ${2.5 * GU}px;\r\n              height: ${2.5 * GU}px;\r\n              margin-right: ${0.5 * GU}px;\r\n              transform: translateY(-2px);\r\n            `}\r\n          />\r\n          <span>\r\n            {providerInfo.id === 'unknown' ? 'Wallet' : providerInfo.name}\r\n          </span>\r\n        </div>\r\n        <div\r\n          css={`\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: flex-end;\r\n            width: 100%;\r\n          `}\r\n        >\r\n          <ButtonBase\r\n            onClick={() => copy(wallet.account)}\r\n            focusRingRadius={RADIUS}\r\n            css={`\r\n              display: flex;\r\n              align-items: center;\r\n              justify-self: flex-end;\r\n              padding: ${0.5 * GU}px;\r\n              &:active {\r\n                background: ${theme.surfacePressed};\r\n              }\r\n            `}\r\n          >\r\n            <IdentityBadge\r\n              entity={wallet.account}\r\n              compact\r\n              badgeOnly\r\n              css=\"cursor: pointer\"\r\n            />\r\n            <IconCopy\r\n              css={`\r\n                color: ${theme.hint};\r\n              `}\r\n            />\r\n          </ButtonBase>\r\n        </div>\r\n      </div>\r\n      <div\r\n        css={`\r\n          display: flex;\r\n          align-items: center;\r\n          margin-top: ${1 * GU}px;\r\n          color: ${theme.positive};\r\n          ${textStyle('label2')};\r\n        `}\r\n      >\r\n        <IconCheck size=\"small\" />\r\n        <span\r\n          css={`\r\n            margin-left: ${0.5 * GU}px;\r\n          `}\r\n        >\r\n          {`Connected to Ethereum ${walletNetworkName} Network`}\r\n        </span>\r\n      </div>\r\n\r\n      <Button\r\n        onClick={() => wallet.reset()}\r\n        wide\r\n        css={`\r\n          margin-top: ${1 * GU}px;\r\n        `}\r\n      >\r\n        Disconnect wallet\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AccountScreenConnected\r\n"]},"metadata":{},"sourceType":"module"}