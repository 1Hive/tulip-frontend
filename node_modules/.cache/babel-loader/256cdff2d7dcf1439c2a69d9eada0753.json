{"ast":null,"code":"'use strict';\n\nconst EventEmitter = require('events');\n\nconst pipe = require('it-pipe');\n\nconst emitter = new EventEmitter();\n\nfunction handler({\n  connection,\n  stream\n}) {\n  const peerId = connection.remotePeer.toB58String();\n  pipe(stream, async function (source) {\n    for await (const message of source) {\n      let msg;\n\n      try {\n        msg = JSON.parse(message.toString());\n      } catch (err) {\n        emitter.emit('warning', err.message);\n        continue; // early\n      }\n\n      if (peerId !== msg.from.toString()) {\n        emitter.emit('warning', 'no peerid match ' + msg.from);\n        continue; // early\n      }\n\n      const topicIDs = msg.topicIDs;\n\n      if (!Array.isArray(topicIDs)) {\n        emitter.emit('warning', 'no topic IDs');\n        continue; // early\n      }\n\n      msg.data = Buffer.from(msg.data, 'hex');\n      msg.seqno = Buffer.from(msg.seqno, 'hex');\n      topicIDs.forEach(topic => {\n        emitter.emit(topic, msg);\n      });\n    }\n  });\n}\n\nexports = module.exports = {\n  handler: handler,\n  emitter: emitter\n};","map":null,"metadata":{},"sourceType":"script"}