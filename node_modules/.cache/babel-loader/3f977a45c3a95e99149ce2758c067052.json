{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _awaitAsyncGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar errCode = require('err-code');\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer; // make sure the content only emits buffer-a-likes\n\n\nfunction validateChunks(_x) {\n  return _validateChunks.apply(this, arguments);\n}\n\nfunction _validateChunks() {\n  _validateChunks = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(source) {\n    var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, content;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _context.prev = 2;\n            _iterator = _asyncIterator(source);\n\n          case 4:\n            _context.next = 6;\n            return _awaitAsyncGenerator(_iterator.next());\n\n          case 6:\n            _step = _context.sent;\n            _iteratorNormalCompletion = _step.done;\n            _context.next = 10;\n            return _awaitAsyncGenerator(_step.value);\n\n          case 10:\n            _value = _context.sent;\n\n            if (_iteratorNormalCompletion) {\n              _context.next = 30;\n              break;\n            }\n\n            content = _value;\n\n            if (!(content.length === undefined)) {\n              _context.next = 15;\n              break;\n            }\n\n            throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n\n          case 15:\n            if (!(typeof content === 'string' || content instanceof String)) {\n              _context.next = 20;\n              break;\n            }\n\n            _context.next = 18;\n            return Buffer.from(content, 'utf8');\n\n          case 18:\n            _context.next = 27;\n            break;\n\n          case 20:\n            if (!Array.isArray(content)) {\n              _context.next = 25;\n              break;\n            }\n\n            _context.next = 23;\n            return Buffer.from(content);\n\n          case 23:\n            _context.next = 27;\n            break;\n\n          case 25:\n            _context.next = 27;\n            return content;\n\n          case 27:\n            _iteratorNormalCompletion = true;\n            _context.next = 4;\n            break;\n\n          case 30:\n            _context.next = 36;\n            break;\n\n          case 32:\n            _context.prev = 32;\n            _context.t0 = _context[\"catch\"](2);\n            _didIteratorError = true;\n            _iteratorError = _context.t0;\n\n          case 36:\n            _context.prev = 36;\n            _context.prev = 37;\n\n            if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n              _context.next = 41;\n              break;\n            }\n\n            _context.next = 41;\n            return _awaitAsyncGenerator(_iterator.return());\n\n          case 41:\n            _context.prev = 41;\n\n            if (!_didIteratorError) {\n              _context.next = 44;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 44:\n            return _context.finish(41);\n\n          case 45:\n            return _context.finish(36);\n\n          case 46:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 32, 36, 46], [37,, 41, 45]]);\n  }));\n  return _validateChunks.apply(this, arguments);\n}\n\nmodule.exports = validateChunks;","map":null,"metadata":{},"sourceType":"script"}