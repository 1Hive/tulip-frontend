{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar io = require('orbit-db-io');\n\nvar AccessControllerManifest = /*#__PURE__*/function () {\n  function AccessControllerManifest(type) {\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, AccessControllerManifest);\n\n    this.type = type;\n    this.params = params;\n  }\n\n  _createClass(AccessControllerManifest, null, [{\n    key: \"resolve\",\n    value: function () {\n      var _resolve = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ipfs, manifestHash) {\n        var options,\n            _yield$io$read,\n            type,\n            params,\n            _args = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n\n                if (!options.skipManifest) {\n                  _context.next = 7;\n                  break;\n                }\n\n                if (options.type) {\n                  _context.next = 4;\n                  break;\n                }\n\n                throw new Error('No manifest, access-controller type required');\n\n              case 4:\n                return _context.abrupt(\"return\", new AccessControllerManifest(options.type, {\n                  address: manifestHash\n                }));\n\n              case 7:\n                // TODO: ensure this is a valid multihash\n                if (manifestHash.indexOf('/ipfs') === 0) {\n                  manifestHash = manifestHash.split('/')[2];\n                }\n\n                _context.next = 10;\n                return io.read(ipfs, manifestHash);\n\n              case 10:\n                _yield$io$read = _context.sent;\n                type = _yield$io$read.type;\n                params = _yield$io$read.params;\n                return _context.abrupt(\"return\", new AccessControllerManifest(type, params));\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function resolve(_x, _x2) {\n        return _resolve.apply(this, arguments);\n      }\n\n      return resolve;\n    }()\n  }, {\n    key: \"create\",\n    value: function () {\n      var _create = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ipfs, type, params) {\n        var manifest;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!params.skipManifest) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", params.address);\n\n              case 2:\n                manifest = {\n                  type: type,\n                  params: params\n                };\n                return _context2.abrupt(\"return\", io.write(ipfs, 'dag-cbor', manifest));\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function create(_x3, _x4, _x5) {\n        return _create.apply(this, arguments);\n      }\n\n      return create;\n    }()\n  }]);\n\n  return AccessControllerManifest;\n}();\n\nmodule.exports = AccessControllerManifest;","map":null,"metadata":{},"sourceType":"script"}