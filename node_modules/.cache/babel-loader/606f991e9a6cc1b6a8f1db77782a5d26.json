{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Labels = void 0;\n\nconst core_1 = require(\"../core\");\n\nclass Labels extends core_1.CrowdinApi {\n  /**\n   * @param projectId project identifier\n   * @param limit maximum number of items to retrieve (default 25)\n   * @param offset starting offset in the collection (default 0)\n   */\n  listLabels(projectId, limit, offset) {\n    const url = `${this.url}/projects/${projectId}/labels`;\n    return this.getList(url, limit, offset);\n  }\n  /**\n   * @param projectId project identifier\n   * @param request request body\n   */\n\n\n  addLabel(projectId, request) {\n    const url = `${this.url}/projects/${projectId}/labels`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param labelId label identifier\n   */\n\n\n  getLabel(projectId, labelId) {\n    const url = `${this.url}/projects/${projectId}/labels/${labelId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param labelId label identifier\n   */\n\n\n  deleteLabel(projectId, labelId) {\n    const url = `${this.url}/projects/${projectId}/labels/${labelId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param labelId label identifier\n   * @param request request body\n   */\n\n\n  editLabel(projectId, labelId, request) {\n    const url = `${this.url}/projects/${projectId}/labels/${labelId}`;\n    return this.patch(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param labelId label identifier\n   * @param request request body\n   */\n\n\n  assignLabelToString(projectId, labelId, request) {\n    const url = `${this.url}/projects/${projectId}/labels/${labelId}/strings`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\n   * @param projectId project identifier\n   * @param labelId label identifier\n   * @param stringIds string identifiers\n   */\n\n\n  unassignLabelFromString(projectId, labelId, stringIds) {\n    let url = `${this.url}/projects/${projectId}/labels/${labelId}/strings`;\n    url = this.addQueryParam(url, 'stringIds', stringIds);\n    return this.delete(url, this.defaultConfig());\n  }\n\n}\n\nexports.Labels = Labels;","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/node_modules/@crowdin/crowdin-api-client/out/labels/index.js"],"names":["Object","defineProperty","exports","value","Labels","core_1","require","CrowdinApi","listLabels","projectId","limit","offset","url","getList","addLabel","request","post","defaultConfig","getLabel","labelId","get","deleteLabel","delete","editLabel","patch","assignLabelToString","unassignLabelFromString","stringIds","addQueryParam"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,MAAR,GAAiB,KAAK,CAAtB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AACA,MAAMF,MAAN,SAAqBC,MAAM,CAACE,UAA5B,CAAuC;AACnC;AACJ;AACA;AACA;AACA;AACIC,EAAAA,UAAU,CAACC,SAAD,EAAYC,KAAZ,EAAmBC,MAAnB,EAA2B;AACjC,UAAMC,GAAG,GAAI,GAAE,KAAKA,GAAI,aAAYH,SAAU,SAA9C;AACA,WAAO,KAAKI,OAAL,CAAaD,GAAb,EAAkBF,KAAlB,EAAyBC,MAAzB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIG,EAAAA,QAAQ,CAACL,SAAD,EAAYM,OAAZ,EAAqB;AACzB,UAAMH,GAAG,GAAI,GAAE,KAAKA,GAAI,aAAYH,SAAU,SAA9C;AACA,WAAO,KAAKO,IAAL,CAAUJ,GAAV,EAAeG,OAAf,EAAwB,KAAKE,aAAL,EAAxB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIC,EAAAA,QAAQ,CAACT,SAAD,EAAYU,OAAZ,EAAqB;AACzB,UAAMP,GAAG,GAAI,GAAE,KAAKA,GAAI,aAAYH,SAAU,WAAUU,OAAQ,EAAhE;AACA,WAAO,KAAKC,GAAL,CAASR,GAAT,EAAc,KAAKK,aAAL,EAAd,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACII,EAAAA,WAAW,CAACZ,SAAD,EAAYU,OAAZ,EAAqB;AAC5B,UAAMP,GAAG,GAAI,GAAE,KAAKA,GAAI,aAAYH,SAAU,WAAUU,OAAQ,EAAhE;AACA,WAAO,KAAKG,MAAL,CAAYV,GAAZ,EAAiB,KAAKK,aAAL,EAAjB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIM,EAAAA,SAAS,CAACd,SAAD,EAAYU,OAAZ,EAAqBJ,OAArB,EAA8B;AACnC,UAAMH,GAAG,GAAI,GAAE,KAAKA,GAAI,aAAYH,SAAU,WAAUU,OAAQ,EAAhE;AACA,WAAO,KAAKK,KAAL,CAAWZ,GAAX,EAAgBG,OAAhB,EAAyB,KAAKE,aAAL,EAAzB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIQ,EAAAA,mBAAmB,CAAChB,SAAD,EAAYU,OAAZ,EAAqBJ,OAArB,EAA8B;AAC7C,UAAMH,GAAG,GAAI,GAAE,KAAKA,GAAI,aAAYH,SAAU,WAAUU,OAAQ,UAAhE;AACA,WAAO,KAAKH,IAAL,CAAUJ,GAAV,EAAeG,OAAf,EAAwB,KAAKE,aAAL,EAAxB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIS,EAAAA,uBAAuB,CAACjB,SAAD,EAAYU,OAAZ,EAAqBQ,SAArB,EAAgC;AACnD,QAAIf,GAAG,GAAI,GAAE,KAAKA,GAAI,aAAYH,SAAU,WAAUU,OAAQ,UAA9D;AACAP,IAAAA,GAAG,GAAG,KAAKgB,aAAL,CAAmBhB,GAAnB,EAAwB,WAAxB,EAAqCe,SAArC,CAAN;AACA,WAAO,KAAKL,MAAL,CAAYV,GAAZ,EAAiB,KAAKK,aAAL,EAAjB,CAAP;AACH;;AA7DkC;;AA+DvCf,OAAO,CAACE,MAAR,GAAiBA,MAAjB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Labels = void 0;\nconst core_1 = require(\"../core\");\nclass Labels extends core_1.CrowdinApi {\n    /**\n     * @param projectId project identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    listLabels(projectId, limit, offset) {\n        const url = `${this.url}/projects/${projectId}/labels`;\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    addLabel(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/labels`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param labelId label identifier\n     */\n    getLabel(projectId, labelId) {\n        const url = `${this.url}/projects/${projectId}/labels/${labelId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param labelId label identifier\n     */\n    deleteLabel(projectId, labelId) {\n        const url = `${this.url}/projects/${projectId}/labels/${labelId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param labelId label identifier\n     * @param request request body\n     */\n    editLabel(projectId, labelId, request) {\n        const url = `${this.url}/projects/${projectId}/labels/${labelId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param labelId label identifier\n     * @param request request body\n     */\n    assignLabelToString(projectId, labelId, request) {\n        const url = `${this.url}/projects/${projectId}/labels/${labelId}/strings`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param labelId label identifier\n     * @param stringIds string identifiers\n     */\n    unassignLabelFromString(projectId, labelId, stringIds) {\n        let url = `${this.url}/projects/${projectId}/labels/${labelId}/strings`;\n        url = this.addQueryParam(url, 'stringIds', stringIds);\n        return this.delete(url, this.defaultConfig());\n    }\n}\nexports.Labels = Labels;\n"]},"metadata":{},"sourceType":"script"}