{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar getIterator = require('get-iterator'); // a pair of streams where one drains from the other\n\n\nmodule.exports = function pair() {\n  var _source2;\n\n  var _source, _onSource;\n\n  var sink = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(source) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!_source) {\n                _context.next = 2;\n                break;\n              }\n\n              throw new Error('already piped');\n\n            case 2:\n              _source = getIterator(source);\n              if (_onSource) _onSource(_source);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function sink(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var source = (_source2 = {}, _defineProperty(_source2, Symbol.asyncIterator, function () {\n    return this;\n  }), _defineProperty(_source2, \"next\", function next() {\n    if (_source) return _source.next();\n    return new Promise(function (resolve) {\n      _onSource = function onSource(source) {\n        _onSource = null;\n        resolve(source.next());\n      };\n    });\n  }), _source2);\n  return {\n    sink: sink,\n    source: source\n  };\n};","map":null,"metadata":{},"sourceType":"script"}