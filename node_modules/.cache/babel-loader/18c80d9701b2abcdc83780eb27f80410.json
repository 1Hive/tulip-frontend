{"ast":null,"code":"'use strict';\n\nvar _require = require('datastore-core'),\n    TieredDatastore = _require.TieredDatastore;\n\nvar get = require('dlv');\n\nvar PubsubDatastore = require('./pubsub-datastore');\n\nvar OfflineDatastore = require('./offline-datastore');\n\nmodule.exports = function (_ref) {\n  var libp2p = _ref.libp2p,\n      repo = _ref.repo,\n      peerInfo = _ref.peerInfo,\n      options = _ref.options;\n  // Setup online routing for IPNS with a tiered routing composed by a DHT and a Pubsub router (if properly enabled)\n  var ipnsStores = []; // Add IPNS pubsub if enabled\n\n  var pubsubDs;\n\n  if (get(options, 'EXPERIMENTAL.ipnsPubsub', false)) {\n    var pubsub = libp2p.pubsub;\n    var localDatastore = repo.datastore;\n    var peerId = peerInfo.id;\n    pubsubDs = new PubsubDatastore(pubsub, localDatastore, peerId);\n    ipnsStores.push(pubsubDs);\n  } // DHT should not be added as routing if we are offline or it is disabled\n\n\n  if (get(options, 'offline') || !get(options, 'libp2p.config.dht.enabled', false)) {\n    var offlineDatastore = new OfflineDatastore(repo);\n    ipnsStores.push(offlineDatastore);\n  } else {\n    ipnsStores.push(libp2p._dht);\n  } // Create ipns routing with a set of datastores\n\n\n  return new TieredDatastore(ipnsStores);\n};","map":null,"metadata":{},"sourceType":"script"}