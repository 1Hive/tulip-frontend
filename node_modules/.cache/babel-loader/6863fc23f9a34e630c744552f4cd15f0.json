{"ast":null,"code":"'use strict';\n\nvar _createForOfIteratorHelper = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar DocumentIndex = /*#__PURE__*/function () {\n  function DocumentIndex() {\n    _classCallCheck(this, DocumentIndex);\n\n    this._index = {};\n  }\n\n  _createClass(DocumentIndex, [{\n    key: \"get\",\n    value: function get(key) {\n      var fullOp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return fullOp ? this._index[key] : this._index[key] ? this._index[key].payload.value : null;\n    }\n  }, {\n    key: \"updateIndex\",\n    value: function updateIndex(oplog, onProgressCallback) {\n      var _this = this;\n\n      var reducer = function reducer(handled, item, idx) {\n        if (item.payload.op === 'PUTALL' && item.payload.docs[Symbol.iterator]) {\n          var _iterator = _createForOfIteratorHelper(item.payload.docs),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var doc = _step.value;\n\n              if (doc && handled[doc.key] !== true) {\n                handled[doc.key] = true;\n                _this._index[doc.key] = {\n                  payload: {\n                    op: 'PUT',\n                    key: doc.key,\n                    value: doc.value\n                  }\n                };\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        } else if (handled[item.payload.key] !== true) {\n          handled[item.payload.key] = true;\n\n          if (item.payload.op === 'PUT') {\n            _this._index[item.payload.key] = item;\n          } else if (item.payload.op === 'DEL') {\n            delete _this._index[item.payload.key];\n          }\n        }\n\n        if (onProgressCallback) onProgressCallback(item, idx);\n        return handled;\n      };\n\n      oplog.values.slice().reverse().reduce(reducer, {});\n    }\n  }]);\n\n  return DocumentIndex;\n}();\n\nmodule.exports = DocumentIndex;","map":null,"metadata":{},"sourceType":"script"}