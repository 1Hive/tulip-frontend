{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar slicedToArray = require('./slicedToArray-a8a77f0e.js');\n\nrequire('./unsupportedIterableToArray-f175acfa.js');\n\nvar React = require('react');\n\nrequire('./_commonjsHelpers-1b94f6bc.js');\n\nvar index = require('./index-46d0e707.js');\n\nvar defineProperty = require('./defineProperty-3cad0327.js');\n\nrequire('./toConsumableArray-cc0d28a9.js');\n\nvar _styled = require('styled-components');\n\nrequire('./getPrototypeOf-55c9e80c.js');\n\nrequire('./color.js');\n\nrequire('./css.js');\n\nrequire('./miscellaneous.js');\n\nrequire('./environment.js');\n\nrequire('./font.js');\n\nrequire('./keycodes.js');\n\nvar constants = require('./constants.js');\n\nrequire('./breakpoints.js');\n\nvar springs = require('./springs.js');\n\nvar textStyles = require('./text-styles.js');\n\nrequire('./theme-dark.js');\n\nrequire('./theme-light.js');\n\nvar Theme = require('./Theme.js');\n\nrequire('./extends-023d783e.js');\n\nrequire('./objectWithoutProperties-c6d3675c.js');\n\nrequire('./index-4def0554.js');\n\nrequire('./_baseGetTag-42b4dd3e.js');\n\nrequire('./Viewport-819c53c9.js');\n\nrequire('./Layout.js');\n\nrequire('./FocusVisible.js');\n\nrequire('./ButtonBase.js');\n\nrequire('./IconPropTypes-12cd7567.js');\n\nrequire('./IconDown.js');\n\nrequire('./IconUp.js');\n\nrequire('./objectWithoutPropertiesLoose-1af20ad0.js');\n\nrequire('react-dom');\n\nvar web = require('./web-7cbdbd84.js');\n\nvar Checkbox = require('./Checkbox.js');\n\nrequire('./Button.js');\n\nrequire('./ButtonIcon.js');\n\nvar ToggleButton = require('./ToggleButton.js');\n\nvar OpenedSurfaceBorder = require('./OpenedSurfaceBorder.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\nvar _styled__default = /*#__PURE__*/_interopDefaultLegacy(_styled);\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty.defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar _StyledDiv = _styled__default['default'](\"div\").withConfig({\n  displayName: \"ListView___StyledDiv\",\n  componentId: \"sc-1wnrej-0\"\n})([\"position:relative;padding:0;padding-right:\", \"px;padding-left:\", \"px;border-bottom:\", \"px solid \", \";transition:background 150ms ease-in-out;background:\", \";\"], function (p) {\n  return p._css;\n}, function (p) {\n  return p._css2;\n}, function (p) {\n  return p._css3;\n}, function (p) {\n  return p._css4;\n}, function (p) {\n  return p._css5;\n});\n\nvar _StyledDiv2 = _styled__default['default'](\"div\").withConfig({\n  displayName: \"ListView___StyledDiv2\",\n  componentId: \"sc-1wnrej-1\"\n})([\"position:absolute;top:\", \"px;left:0;display:flex;justify-content:center;width:\", \"px;\"], function (p) {\n  return p._css6;\n}, function (p) {\n  return p._css7;\n});\n\nvar _StyledDiv3 = _styled__default['default'](\"div\").withConfig({\n  displayName: \"ListView___StyledDiv3\",\n  componentId: \"sc-1wnrej-2\"\n})([\"position:absolute;top:\", \"px;right:\", \"px;\"], function (p) {\n  return p._css8;\n}, function (p) {\n  return p._css9;\n});\n\nvar _StyledDiv4 = _styled__default['default'](\"div\").withConfig({\n  displayName: \"ListView___StyledDiv4\",\n  componentId: \"sc-1wnrej-3\"\n})([\"display:flex;flex-direction:column;padding-bottom:\", \"px;\"], function (p) {\n  return p._css10;\n});\n\nvar _StyledDiv5 = _styled__default['default'](\"div\").withConfig({\n  displayName: \"ListView___StyledDiv5\",\n  componentId: \"sc-1wnrej-4\"\n})([\"display:flex;align-items:center;margin:\", \"px 0 \", \"px;color:\", \";\", \";\"], function (p) {\n  return p._css11;\n}, function (p) {\n  return p._css12;\n}, function (p) {\n  return p._css13;\n}, function (p) {\n  return p._css14;\n});\n\nfunction ListView(_ref) {\n  var allSelected = _ref.allSelected,\n      entries = _ref.entries,\n      fields = _ref.fields,\n      hasAnyExpansion = _ref.hasAnyExpansion,\n      onSelect = _ref.onSelect,\n      onSelectAll = _ref.onSelectAll,\n      renderSelectionCount = _ref.renderSelectionCount,\n      selectable = _ref.selectable,\n      rowHeight = _ref.rowHeight;\n  var theme = Theme.useTheme();\n\n  var _useState = React.useState(-1),\n      _useState2 = slicedToArray.slicedToArray(_useState, 2),\n      opened = _useState2[0],\n      setOpened = _useState2[1];\n\n  var toggleEntry = React.useCallback(function (index) {\n    setOpened(function (opened) {\n      return opened === index ? -1 : index;\n    });\n  }, []);\n  var sideSpace = selectable || hasAnyExpansion;\n  return /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, entries.map(function (entry, index) {\n    var hasExpansion = entry.expansion.content.length > 0;\n    return /*#__PURE__*/React__default['default'].createElement(_StyledDiv, {\n      key: index,\n      _css: 3 * constants.GU,\n      _css2: (sideSpace ? 6.5 : 3) * constants.GU,\n      _css3: Number(index !== entries.length - 1),\n      _css4: theme.border,\n      _css5: entry.selected ? theme.surfaceSelected : 'none'\n    }, /*#__PURE__*/React__default['default'].createElement(OpenedSurfaceBorder.OpenedSurfaceBorder, {\n      opened: entry.index === opened\n    }), sideSpace && /*#__PURE__*/React__default['default'].createElement(_StyledDiv2, {\n      _css6: 1.5 * constants.GU,\n      _css7: 6.5 * constants.GU\n    }, selectable && /*#__PURE__*/React__default['default'].createElement(Select, {\n      index: entry.index,\n      selected: entry.selected,\n      onSelect: onSelect\n    }), !selectable && hasExpansion && /*#__PURE__*/React__default['default'].createElement(ToggleButton.ToggleButton, {\n      opened: entry.index === opened,\n      onClick: function onClick() {\n        return toggleEntry(entry.index);\n      }\n    })), entry.actions && /*#__PURE__*/React__default['default'].createElement(_StyledDiv3, {\n      _css8: 2 * constants.GU,\n      _css9: 3 * constants.GU\n    }, entry.actions), /*#__PURE__*/React__default['default'].createElement(\"div\", null, entry.entryNodes.map(function (content, index) {\n      return [// field content\n      content, // field label\n      fields[index].label, // priority number\n      fields[index].priority && fields[index].priority || 0];\n    }) // sort by priority\n    .sort(function (a, b) {\n      return b[2] - a[2];\n    }).map(function (_ref2, index, entryNodes) {\n      var _ref3 = slicedToArray.slicedToArray(_ref2, 2),\n          content = _ref3[0],\n          label = _ref3[1];\n\n      return /*#__PURE__*/React__default['default'].createElement(_StyledDiv4, {\n        key: index,\n        _css10: index === entryNodes.length - 1 ? 2 * constants.GU : 0\n      }, /*#__PURE__*/React__default['default'].createElement(_StyledDiv5, {\n        _css11: 2 * constants.GU,\n        _css12: 1 * constants.GU,\n        _css13: theme.surfaceContentSecondary,\n        _css14: textStyles.textStyle('label2')\n      }, label), /*#__PURE__*/React__default['default'].createElement(\"div\", null, content));\n    })), hasExpansion && /*#__PURE__*/React__default['default'].createElement(EntryExpansion, {\n      expansion: entry.expansion,\n      opened: opened === entry.index,\n      rowHeight: rowHeight\n    }));\n  }));\n}\n\nListView.propTypes = {\n  allSelected: index.propTypes.oneOf([-1, 0, 1]).isRequired,\n  entries: index.propTypes.array.isRequired,\n  fields: index.propTypes.array.isRequired,\n  hasAnyExpansion: index.propTypes.bool.isRequired,\n  onSelect: index.propTypes.func.isRequired,\n  onSelectAll: index.propTypes.func.isRequired,\n  renderSelectionCount: index.propTypes.func.isRequired,\n  rowHeight: index.propTypes.number.isRequired,\n  selectable: index.propTypes.bool.isRequired\n}; // Disable prop types check for internal components\n\n/* eslint-disable react/prop-types */\n\nvar _StyledAnimatedDiv = _styled__default['default'](web.extendedAnimated.div).withConfig({\n  displayName: \"ListView___StyledAnimatedDiv\",\n  componentId: \"sc-1wnrej-5\"\n})([\"overflow:hidden;background:\", \";margin-left:\", \"px;margin-right:\", \"px;padding-left:\", \"px;box-shadow:inset 0 6px 4px -4px rgba(0,0,0,0.16);\"], function (p) {\n  return p._css15;\n}, function (p) {\n  return p._css16;\n}, function (p) {\n  return p._css17;\n}, function (p) {\n  return p._css18;\n});\n\nvar _StyledDiv6 = _styled__default['default'](\"div\").withConfig({\n  displayName: \"ListView___StyledDiv6\",\n  componentId: \"sc-1wnrej-6\"\n})([\"display:flex;align-items:center;height:\", \";padding-right:\", \"px;\"], function (p) {\n  return p._css19;\n}, function (p) {\n  return p._css20;\n});\n\nfunction EntryExpansion(_ref4) {\n  var expansion = _ref4.expansion,\n      opened = _ref4.opened,\n      rowHeight = _ref4.rowHeight;\n  var theme = Theme.useTheme(); // Handles the height of the expansion in free layout mode\n\n  var _useState3 = React.useState(0),\n      _useState4 = slicedToArray.slicedToArray(_useState3, 2),\n      freeLayoutContentHeight = _useState4[0],\n      setFreeLayoutContentHeight = _useState4[1];\n\n  var handleFreeLayoutContentRef = React.useCallback(function (element) {\n    if (element) {\n      setFreeLayoutContentHeight(element.getBoundingClientRect().height);\n    }\n  }, []);\n  var height = expansion.freeLayout ? freeLayoutContentHeight : rowHeight * expansion.content.length;\n  return /*#__PURE__*/React__default['default'].createElement(web.Transition, {\n    native: true,\n    items: opened,\n    from: {\n      height: 0\n    },\n    enter: {\n      height: height\n    },\n    update: {\n      height: height\n    },\n    leave: {\n      height: 0\n    },\n    config: _objectSpread(_objectSpread({}, springs.springs.smooth), {}, {\n      precision: 0.1\n    })\n  }, function (show) {\n    return show && function (_ref5) {\n      var height = _ref5.height;\n      return /*#__PURE__*/React__default['default'].createElement(_StyledAnimatedDiv, {\n        style: {\n          height: height.interpolate(function (v) {\n            return \"\".concat(v, \"px\");\n          })\n        },\n        _css15: theme.surfaceUnder,\n        _css16: -6.5 * constants.GU,\n        _css17: -3 * constants.GU,\n        _css18: 6.5 * constants.GU\n      }, expansion.content.map(function (child, i) {\n        return /*#__PURE__*/React__default['default'].createElement(_StyledDiv6, {\n          key: i,\n          ref: expansion.freeLayout ? handleFreeLayoutContentRef : null,\n          _css19: expansion.freeLayout ? 'auto' : \"\".concat(rowHeight, \"px\"),\n          _css20: 3 * constants.GU\n        }, child);\n      }));\n    };\n  });\n}\n\nfunction Select(_ref6) {\n  var index = _ref6.index,\n      selected = _ref6.selected,\n      onSelect = _ref6.onSelect;\n  var change = React.useCallback(function (check) {\n    onSelect(index, check);\n  }, [index, onSelect]);\n  return /*#__PURE__*/React__default['default'].createElement(Checkbox.default, {\n    onChange: change,\n    checked: selected\n  });\n}\n\nexports.ListView = ListView;","map":{"version":3,"sources":["../src/components/DataView/ListView.js"],"names":["allSelected","entries","fields","hasAnyExpansion","onSelect","onSelectAll","renderSelectionCount","selectable","rowHeight","theme","useTheme","opened","setOpened","useState","toggleEntry","useCallback","sideSpace","React","hasExpansion","entry","GU","Number","index","OpenedSurfaceBorder","ToggleButton","b","a","content","label","entryNodes","textStyle","ListView","PropTypes","isRequired","expansion","freeLayoutContentHeight","setFreeLayoutContentHeight","handleFreeLayoutContentRef","element","height","Transition","springs","precision","show","selected","change","Checkbox"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Transition, animated } from 'react-spring'\nimport { GU, springs, textStyle } from '../../style'\nimport { useTheme } from '../../theme'\nimport Checkbox from '../Input/Checkbox'\nimport { ToggleButton } from './ToggleButton'\nimport { OpenedSurfaceBorder } from './OpenedSurfaceBorder'\n\nfunction ListView({\n  allSelected,\n  entries,\n  fields,\n  hasAnyExpansion,\n  onSelect,\n  onSelectAll,\n  renderSelectionCount,\n  selectable,\n  rowHeight,\n}) {\n  const theme = useTheme()\n\n  const [opened, setOpened] = useState(-1)\n\n  const toggleEntry = useCallback(index => {\n    setOpened(opened => (opened === index ? -1 : index))\n  }, [])\n\n  const sideSpace = selectable || hasAnyExpansion\n\n  return (\n    <React.Fragment>\n      {entries.map((entry, index) => {\n        const hasExpansion = entry.expansion.content.length > 0\n        return (\n          <div\n            key={index}\n            css={`\n              position: relative;\n              padding: 0;\n              padding-right: ${3 * GU}px;\n              padding-left: ${(sideSpace ? 6.5 : 3) * GU}px;\n              border-bottom: ${Number(index !== entries.length - 1)}px solid\n                ${theme.border};\n              transition: background 150ms ease-in-out;\n              background: ${entry.selected ? theme.surfaceSelected : 'none'};\n            `}\n          >\n            <OpenedSurfaceBorder opened={entry.index === opened} />\n            {sideSpace && (\n              <div\n                css={`\n                  position: absolute;\n                  top: ${1.5 * GU}px;\n                  left: 0;\n                  display: flex;\n                  justify-content: center;\n                  width: ${6.5 * GU}px;\n                `}\n              >\n                {selectable && (\n                  <Select\n                    index={entry.index}\n                    selected={entry.selected}\n                    onSelect={onSelect}\n                  />\n                )}\n                {!selectable && hasExpansion && (\n                  <ToggleButton\n                    opened={entry.index === opened}\n                    onClick={() => toggleEntry(entry.index)}\n                  />\n                )}\n              </div>\n            )}\n            {entry.actions && (\n              <div\n                css={`\n                  position: absolute;\n                  top: ${2 * GU}px;\n                  right: ${3 * GU}px;\n                `}\n              >\n                {entry.actions}\n              </div>\n            )}\n            <div>\n              {entry.entryNodes\n                .map((content, index) => [\n                  // field content\n                  content,\n                  // field label\n                  fields[index].label,\n                  // priority number\n                  (fields[index].priority && fields[index].priority) || 0,\n                ])\n                // sort by priority\n                .sort((a, b) => b[2] - a[2])\n                .map(([content, label], index, entryNodes) => (\n                  <div\n                    key={index}\n                    css={`\n                      display: flex;\n                      flex-direction: column;\n                      padding-bottom: ${index === entryNodes.length - 1\n                        ? 2 * GU\n                        : 0}px;\n                    `}\n                  >\n                    <div\n                      css={`\n                        display: flex;\n                        align-items: center;\n                        margin: ${2 * GU}px 0 ${1 * GU}px;\n                        color: ${theme.surfaceContentSecondary};\n                        ${textStyle('label2')};\n                      `}\n                    >\n                      {label}\n                    </div>\n\n                    <div>{content}</div>\n                  </div>\n                ))}\n            </div>\n            {hasExpansion && (\n              <EntryExpansion\n                expansion={entry.expansion}\n                opened={opened === entry.index}\n                rowHeight={rowHeight}\n              />\n            )}\n          </div>\n        )\n      })}\n    </React.Fragment>\n  )\n}\n\nListView.propTypes = {\n  allSelected: PropTypes.oneOf([-1, 0, 1]).isRequired,\n  entries: PropTypes.array.isRequired,\n  fields: PropTypes.array.isRequired,\n  hasAnyExpansion: PropTypes.bool.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  onSelectAll: PropTypes.func.isRequired,\n  renderSelectionCount: PropTypes.func.isRequired,\n  rowHeight: PropTypes.number.isRequired,\n  selectable: PropTypes.bool.isRequired,\n}\n\n// Disable prop types check for internal components\n/* eslint-disable react/prop-types */\n\nfunction EntryExpansion({ expansion, opened, rowHeight }) {\n  const theme = useTheme()\n\n  // Handles the height of the expansion in free layout mode\n  const [freeLayoutContentHeight, setFreeLayoutContentHeight] = useState(0)\n\n  const handleFreeLayoutContentRef = useCallback(element => {\n    if (element) {\n      setFreeLayoutContentHeight(element.getBoundingClientRect().height)\n    }\n  }, [])\n\n  const height = expansion.freeLayout\n    ? freeLayoutContentHeight\n    : rowHeight * expansion.content.length\n\n  return (\n    <Transition\n      native\n      items={opened}\n      from={{ height: 0 }}\n      enter={{ height }}\n      update={{ height }}\n      leave={{ height: 0 }}\n      config={{ ...springs.smooth, precision: 0.1 }}\n    >\n      {show =>\n        show &&\n        (({ height }) => (\n          <animated.div\n            css={`\n              overflow: hidden;\n              background: ${theme.surfaceUnder};\n              margin-left: ${-6.5 * GU}px;\n              margin-right: ${-3 * GU}px;\n              padding-left: ${6.5 * GU}px;\n              box-shadow: inset 0 6px 4px -4px rgba(0, 0, 0, 0.16);\n            `}\n            style={{\n              height: height.interpolate(v => `${v}px`),\n            }}\n          >\n            {expansion.content.map((child, i) => (\n              <div\n                key={i}\n                ref={expansion.freeLayout ? handleFreeLayoutContentRef : null}\n                css={`\n                  display: flex;\n                  align-items: center;\n                  height: ${expansion.freeLayout ? 'auto' : `${rowHeight}px`};\n                  padding-right: ${3 * GU}px;\n                `}\n              >\n                {child}\n              </div>\n            ))}\n          </animated.div>\n        ))\n      }\n    </Transition>\n  )\n}\n\nfunction Select({ index, selected, onSelect }) {\n  const change = useCallback(\n    check => {\n      onSelect(index, check)\n    },\n    [index, onSelect]\n  )\n\n  return <Checkbox onChange={change} checked={selected} />\n}\n\n/* eslint-enable react/prop-types */\n\nexport { ListView }\n"]},"metadata":{},"sourceType":"script"}