{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar React = require('react');\n/* eslint-disable react-hooks/rules-of-hooks */\n\n\nfunction useClickOutside(cb) {\n  var ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : React.useRef();\n  /* eslint-enable react-hooks/rules-of-hooks */\n\n  var handleClick = React.useCallback(function (e) {\n    if (!ref.current.contains(e.target)) {\n      cb();\n    }\n  }, [cb, ref]);\n  React.useEffect(function () {\n    document.addEventListener('click', handleClick, true);\n    return function () {\n      document.removeEventListener('click', handleClick, true);\n    };\n  }, [handleClick]);\n  return {\n    ref: ref\n  };\n}\n\nexports.useClickOutside = useClickOutside;","map":{"version":3,"sources":["../src/hooks/useClickOutside.js"],"names":["ref","useRef","handleClick","useCallback","e","cb","useEffect","document"],"mappings":";;;;;;;AAEA;;;AACO,SAAA,eAAA,CAAA,EAAA,EAA6C;AAAA,MAAhBA,GAAgB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAVC,KAAAA,CAAAA,MAAAA,EAAU;AAClD;;AACA,MAAMC,WAAW,GAAGC,KAAAA,CAAAA,WAAAA,CAClB,UAAA,CAAA,EAAK;AACH,QAAI,CAACH,GAAG,CAAHA,OAAAA,CAAAA,QAAAA,CAAqBI,CAAC,CAA3B,MAAKJ,CAAL,EAAqC;AACnCK,MAAAA,EAAE;AACH;AAJ0B,GAAXF,EAMlB,CAAA,EAAA,EANF,GAME,CANkBA,CAApB;AASAG,EAAAA,KAAAA,CAAAA,SAAAA,CAAU,YAAM;AACdC,IAAAA,QAAQ,CAARA,gBAAAA,CAAAA,OAAAA,EAAAA,WAAAA,EAAAA,IAAAA;AACA,WAAO,YAAM;AACXA,MAAAA,QAAQ,CAARA,mBAAAA,CAAAA,OAAAA,EAAAA,WAAAA,EAAAA,IAAAA;AADF,KAAA;AAFO,GAATD,EAKG,CALHA,WAKG,CALHA;AAOA,SAAO;AAAEN,IAAAA,GAAG,EAAHA;AAAF,GAAP;AACD","sourcesContent":["import { useCallback, useRef, useEffect } from 'react'\n\n/* eslint-disable react-hooks/rules-of-hooks */\nexport function useClickOutside(cb, ref = useRef()) {\n  /* eslint-enable react-hooks/rules-of-hooks */\n  const handleClick = useCallback(\n    e => {\n      if (!ref.current.contains(e.target)) {\n        cb()\n      }\n    },\n    [cb, ref]\n  )\n\n  useEffect(() => {\n    document.addEventListener('click', handleClick, true)\n    return () => {\n      document.removeEventListener('click', handleClick, true)\n    }\n  }, [handleClick])\n\n  return { ref }\n}\n"]},"metadata":{},"sourceType":"script"}