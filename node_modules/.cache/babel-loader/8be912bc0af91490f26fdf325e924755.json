{"ast":null,"code":"'use strict';\n\nconst Datastore = require('datastore-fs');\n\nconst log = require('debug')('repo-migrations:repo:init');\n\nconst Key = require('interface-datastore').Key;\n\nconst versionKey = new Key('/version');\nconst configKey = new Key('/config');\n\nexports.isRepoInitialized = async function isRepoInitialized(path) {\n  let root;\n\n  try {\n    root = new Datastore(path, {\n      extension: '',\n      createIfMissing: false\n    });\n    await root.open();\n    const versionCheck = await root.has(versionKey);\n    const configCheck = await root.has(configKey);\n\n    if (!versionCheck || !configCheck) {\n      log(`Version entry present: ${versionCheck}`);\n      log(`Config entry present: ${configCheck}`);\n      return false;\n    }\n\n    return true;\n  } catch (e) {\n    log('While checking if repo is initialized error was thrown: ' + e.message);\n    return false;\n  } finally {\n    if (root !== undefined) await root.close();\n  }\n};","map":null,"metadata":{},"sourceType":"script"}