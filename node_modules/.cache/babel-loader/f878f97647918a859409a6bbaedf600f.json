{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/fabianmolina/Documents/1hive/tulip-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nmodule.exports = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(socket) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(socket.readyState >= 2)) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new Error('socket closed');\n\n          case 2:\n            if (!(socket.readyState === 1)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 4:\n            return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n              var remove = socket && (socket.removeEventListener || socket.removeListener);\n\n              function cleanup() {\n                if (typeof remove === 'function') {\n                  remove.call(socket, 'open', handleOpen);\n                  remove.call(socket, 'error', handleErr);\n                }\n              }\n\n              function handleOpen() {\n                cleanup();\n                resolve();\n              }\n\n              function handleErr(evt) {\n                cleanup();\n                reject(evt);\n              }\n\n              socket.addEventListener('open', handleOpen);\n              socket.addEventListener('error', handleErr);\n            }));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"script"}