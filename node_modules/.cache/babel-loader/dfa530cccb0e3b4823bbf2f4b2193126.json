{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext';\nimport getLotteryRoundData from 'utils/getLotteryRoundData';\n\nconst useGetRecentLotteryRoundData = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const {\n    mostRecentLotteryNumber\n  } = useContext(PastLotteryDataContext);\n  useEffect(() => {\n    const fetchRecentLotteryData = async () => {\n      try {\n        setIsLoading(true);\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber);\n        setData(roundData);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (mostRecentLotteryNumber > 0) {\n      fetchRecentLotteryData();\n    }\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError]);\n  return {\n    isLoading,\n    data,\n    mostRecentLotteryNumber,\n    error\n  };\n};\n\n_s(useGetRecentLotteryRoundData, \"87AzmdLTSjRl2KPX+i9oki7FDr4=\");\n\nexport default useGetRecentLotteryRoundData;","map":{"version":3,"sources":["/Users/fabian/Documents/Projects/1hive/tulip-frontend/src/views/Lottery/hooks/useGetRecentLotteryRoundData.ts"],"names":["useContext","useEffect","useState","PastLotteryDataContext","getLotteryRoundData","useGetRecentLotteryRoundData","isLoading","setIsLoading","data","setData","error","setError","mostRecentLotteryNumber","fetchRecentLotteryData","roundData","err"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,sBAAP,MAAmC,iCAAnC;AACA,OAAOC,mBAAP,MAAkD,2BAAlD;;AASA,MAAMC,4BAA4B,GAAG,MAAuC;AAAA;;AAC1E,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAEU,IAAAA;AAAF,MAA8BZ,UAAU,CAACG,sBAAD,CAA9C;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,sBAAsB,GAAG,YAAY;AACzC,UAAI;AACFN,QAAAA,YAAY,CAAC,IAAD,CAAZ;AAEA,cAAMO,SAAS,GAAG,MAAMV,mBAAmB,CAACQ,uBAAD,CAA3C;AACAH,QAAAA,OAAO,CAACK,SAAD,CAAP;AACD,OALD,CAKE,OAAOC,GAAP,EAAY;AACZJ,QAAAA,QAAQ,CAACI,GAAD,CAAR;AACD,OAPD,SAOU;AACRR,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,KAXD;;AAaA,QAAIK,uBAAuB,GAAG,CAA9B,EAAiC;AAC/BC,MAAAA,sBAAsB;AACvB;AACF,GAjBQ,EAiBN,CAACD,uBAAD,EAA0BH,OAA1B,EAAmCF,YAAnC,EAAiDI,QAAjD,CAjBM,CAAT;AAmBA,SAAO;AAAEL,IAAAA,SAAF;AAAaE,IAAAA,IAAb;AAAmBI,IAAAA,uBAAnB;AAA4CF,IAAAA;AAA5C,GAAP;AACD,CA1BD;;GAAML,4B;;AA4BN,eAAeA,4BAAf","sourcesContent":["import { useContext, useEffect, useState } from 'react'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\n\ntype GetRecentLotteryRoundDataReturn = {\n  isLoading: boolean\n  data: DataResponse\n  mostRecentLotteryNumber: number\n  error: any\n}\n\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [data, setData] = useState(null)\n  const [error, setError] = useState(null)\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  useEffect(() => {\n    const fetchRecentLotteryData = async () => {\n      try {\n        setIsLoading(true)\n\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\n        setData(roundData)\n      } catch (err) {\n        setError(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (mostRecentLotteryNumber > 0) {\n      fetchRecentLotteryData()\n    }\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\n\n  return { isLoading, data, mostRecentLotteryNumber, error }\n}\n\nexport default useGetRecentLotteryRoundData\n"]},"metadata":{},"sourceType":"module"}